  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    List<Integer>[] cnt = new ArrayList[alp.length];
    for (int i = 0; i < alp.length; i++) {
      cnt[i] = new ArrayList<>();
    }
    for (int i = 0; i < n; i++) {
      char c = s.charAt(i);
      cnt[c - 'a'].add(i);
    }
    int q = sc.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = sc.next().split(" ");
      int t = Integer.parseInt(input[0]);
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      int ans = 0;
      if (t == 1) {
        int i = x - 1;
        char c = input[2].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = bisectLeft(cnt[s.charAt(i)], i);
        cnt[s.charAt(i)].remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = bisectLeft(cnt[c], i);
        cnt[c].add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        for (char c : alp) {
          int a = bisectLeft(cnt[c], l);
          if (a < cnt[c].size() && cnt[c].get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }

  public static int bisectLeft(List<Integer> arr, int x) {
    int lo = 0;
    int hi = arr.size() - 1;
    while (lo <= hi) {
      int mid = (lo + hi) / 2;
      if (arr.get(mid) < x) {
        lo = mid + 1;
      } else {
        hi = mid - 1;
      }
    }
    return lo;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char[] s = sc.next().toCharArray();
        char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
        int[][] cnt = new int[26][];
        for (int i = 0; i < 26; i++) {
            cnt[i] = new int[n];
        }
        for (int i = 0; i < n; i++) {
            cnt[s[i] - 'a'][i] = i;
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.next().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            if (t == 1) {
                int i = x - 1;
                char c = input[2].charAt(0);
                if (s[i] == c) {
                    continue;
                }
                int a = Arrays.binarySearch(cnt[s[i] - 'a'], i);
                cnt[s[i] - 'a'][a] = 0;
                s[i] = c;
                int b = Arrays.binarySearch(cnt[c - 'a'], i);
                cnt[c - 'a'][b] = i;
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (int j = 0; j < 26; j++) {
                    int a = Arrays.binarySearch(cnt[j], l);
                    if (a < cnt[j].length && cnt[j][a] <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    List<Integer>[] cnt = new ArrayList[alp.length];
    for (int i = 0; i < alp.length; i++) {
      cnt[i] = new ArrayList<>();
    }
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      cnt[c - 'a'].add(i);
    }
    int q = sc.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = sc.nextLine().split(" ");
      int t = Integer.parseInt(input[0]);
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      int ans = 0;
      if (t == 1) {
        int i = x - 1;
        char c = input[2].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = Arrays.binarySearch(cnt[s.charAt(i) - 'a'], i);
        cnt[s.charAt(i) - 'a'].remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = Arrays.binarySearch(cnt[c - 'a'], i);
        cnt[c - 'a'].add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        for (int j = 0; j < alp.length; j++) {
          int a = Arrays.binarySearch(cnt[j], l);
          if (a < cnt[j].size() && cnt[j].get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.next();
    String alp = "abcdefghijklmnopqrstuvwxyz";
    List<List<Integer>> cnt = new ArrayList<>();
    for (int i = 0; i < alp.length(); i++) {
      cnt.add(new ArrayList<>());
    }
    for (int i = 0; i < s.length(); i++) {
      cnt.get(s.charAt(i) - 'a').add(i);
    }
    int q = scanner.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = scanner.nextLine().split(" ");
      int t = Integer.parseInt(input[0]);
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      if (t == 1) {
        int i = x - 1;
        char c = input[2].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = cnt.get(s.charAt(i) - 'a').indexOf(i);
        cnt.get(s.charAt(i) - 'a').remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = cnt.get(c - 'a').indexOf(i);
        cnt.get(c - 'a').add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        int ans = 0;
        for (int j = 0; j < alp.length(); j++) {
          int a = cnt.get(j).indexOf(l);
          if (a < cnt.get(j).size() && cnt.get(j).get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    char[] s = sc.next().toCharArray();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    List<List<Integer>> cnt = new ArrayList<>();
    for (char c : alp) {
      cnt.add(new ArrayList<>());
    }
    for (int i = 0; i < n; i++) {
      char c = s[i];
      cnt.get(c - 'a').add(i);
    }
    int q = sc.nextInt();
    for (int i = 0; i < q; i++) {
      String[] tokens = sc.nextLine().split(" ");
      String t = tokens[0];
      int x = Integer.parseInt(tokens[1]);
      int y = Integer.parseInt(tokens[2]);
      int ans = 0;
      if (t.equals("1")) {
        int i = x - 1;
        char c = tokens[3].charAt(0);
        if (s[i] == c) {
          continue;
        }
        int a = Arrays.binarySearch(cnt.get(s[i]).toArray(), i);
        cnt.get(s[i]).remove(a);
        s[i] = c;
        int b = Arrays.binarySearch(cnt.get(c).toArray(), i);
        cnt.get(c).add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        for (char c : alp) {
          int a = Arrays.binarySearch(cnt.get(c).toArray(), l);
          if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.next();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    List<Integer>[] cnt = new ArrayList[26];
    for (int i = 0; i < 26; i++) {
      cnt[i] = new ArrayList<>();
    }
    for (int i = 0; i < n; i++) {
      char c = s.charAt(i);
      cnt[c - 'a'].add(i);
    }
    int q = scanner.nextInt();
    for (int i = 0; i < q; i++) {
      String[] tokens = scanner.nextLine().split(" ");
      int t = Integer.parseInt(tokens[0]);
      int x = Integer.parseInt(tokens[1]);
      int y = Integer.parseInt(tokens[2]);
      if (t == 1) {
        int i = x - 1;
        char c = tokens[3].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = bisectLeft(cnt[s.charAt(i) - 'a'], i);
        cnt[s.charAt(i) - 'a'].remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = bisectLeft(cnt[c - 'a'], i);
        cnt[c - 'a'].add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        int ans = 0;
        for (int j = 0; j < 26; j++) {
          int a = bisectLeft(cnt[j], l);
          if (a < cnt[j].size() && cnt[j].get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }

  private static int bisectLeft(List<Integer> arr, int x) {
    int low = 0;
    int high = arr.size() - 1;
    while (low <= high) {
      int mid = (low + high) / 2;
      if (arr.get(mid) < x) {
        low = mid + 1;
      } else {
        high = mid - 1;
      }
    }
    return low;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        String alp = "abcdefghijklmnopqrstuvwxyz";
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < n; i++) {
            cnt.put(s.charAt(i), new ArrayList<>());
        }
        for (int i = 0; i < n; i++) {
            cnt.get(s.charAt(i)).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.nextLine().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            if (t == 1) {
                int i = x - 1;
                char c = input[3].charAt(0);
                if (s.charAt(i) == c) {
                    continue;
                }
                int a = bisectLeft(cnt.get(s.charAt(i)), i);
                cnt.get(s.charAt(i)).remove(a);
                s = s.substring(0, i) + c + s.substring(i + 1);
                int b = bisectLeft(cnt.get(c), i);
                cnt.get(c).add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (char c : alp.toCharArray()) {
                    int a = bisectLeft(cnt.get(c), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }

    public static int bisectLeft(List<Integer> arr, int x) {
        int lo = 0;
        int hi = arr.size() - 1;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if (arr.get(mid) < x) {
                lo = mid + 1;
            } else {
                hi = mid - 1;
            }
        }
        return lo;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();
    String alp = "abcdefghijklmnopqrstuvwxyz";
    Map<Character, List<Integer>> cnt = new HashMap<>();
    for (int i = 0; i < n; i++) {
      char c = s.charAt(i);
      if (!cnt.containsKey(c)) {
        cnt.put(c, new ArrayList<>());
      }
      cnt.get(c).add(i);
    }
    int q = sc.nextInt();
    for (int i = 0; i < q; i++) {
      String[] query = sc.nextLine().split(" ");
      int t = Integer.parseInt(query[0]);
      int x = Integer.parseInt(query[1]);
      int y = Integer.parseInt(query[2]);
      if (t == 1) {
        int i = x - 1;
        char c = query[2].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = bisectLeft(cnt.get(s.charAt(i)), i);
        cnt.get(s.charAt(i)).remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = bisectLeft(cnt.get(c), i);
        cnt.get(c).add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        int ans = 0;
        for (char c : alp.toCharArray()) {
          int a = bisectLeft(cnt.get(c), l);
          if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }

  private static int bisectLeft(List<Integer> list, int x) {
    int low = 0;
    int high = list.size() - 1;
    while (low <= high) {
      int mid = (low + high) / 2;
      if (list.get(mid) < x) {
        low = mid + 1;
      } else if (list.get(mid) > x) {
        high = mid - 1;
      } else {
        return mid;
      }
    }
    return low;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.nextLine();
        char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
        List<Integer>[] cnt = new ArrayList[alp.length];
        for (int i = 0; i < alp.length; i++) {
            cnt[i] = new ArrayList<>();
        }
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            cnt[c - 'a'].add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] tokens = sc.nextLine().split(" ");
            int t = Integer.parseInt(tokens[0]);
            int x = Integer.parseInt(tokens[1]);
            int y = Integer.parseInt(tokens[2]);
            if (t == 1) {
                int i = x - 1;
                char c = tokens[2].charAt(0);
                if (s.charAt(i) == c) {
                    continue;
                }
                int a = bisect(cnt[s.charAt(i)], i);
                cnt[s.charAt(i)].remove(a);
                s = s.substring(0, i) + c + s.substring(i + 1);
                int b = bisect(cnt[c], i);
                cnt[c].add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (int j = 0; j < alp.length; j++) {
                    int a = bisect(cnt[alp[j]], l);
                    if (a < cnt[alp[j]].size() && cnt[alp[j]].get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }

    private static int bisect(List<Integer> list, int x) {
        int lo = 0;
        int hi = list.size() - 1;
        while (lo <= hi) {
            int mid = (lo + hi) / 2;
            if (list.get(mid) == x) {
                return mid;
            } else if (list.get(mid) < x) {
                lo = mid + 1;
            } else {
                hi = mid - 1;
            }
        }
        return -1;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char[] s = sc.next().toCharArray();
        char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < n; i++) {
            char c = s[i];
            if (!cnt.containsKey(c)) {
                cnt.put(c, new ArrayList<>());
            }
            cnt.get(c).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.nextLine().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            if (t == 1) {
                int i = x - 1;
                char c = input[2].charAt(0);
                if (s[i] == c) {
                    continue;
                }
                int a = Collections.binarySearch(cnt.get(s[i]), i);
                cnt.get(s[i]).remove(a);
                s[i] = c;
                int b = Collections.binarySearch(cnt.get(c), i);
                cnt.get(c).add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (char c : alp) {
                    int a = Collections.binarySearch(cnt.get(c), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.next();
    char[] alp = new char[] {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
    Map<Character, List<Integer>> cnt = new HashMap<>();
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      if (!cnt.containsKey(c)) {
        cnt.put(c, new ArrayList<>());
      }
      cnt.get(c).add(i);
    }
    int q = scanner.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = scanner.nextLine().split(" ");
      int t = Integer.parseInt(input[0]);
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      int ans = 0;
      if (t == 1) {
        int i = x - 1;
        char c = input[2].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = Arrays.binarySearch(cnt.get(s.charAt(i)), i);
        cnt.get(s.charAt(i)).remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = Arrays.binarySearch(cnt.get(c), i);
        cnt.get(c).add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        for (char c : alp) {
          int a = Arrays.binarySearch(cnt.get(c), l);
          if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < alp.length; i++) {
            cnt.put(alp[i], new ArrayList<>());
        }
        for (int i = 0; i < s.length(); i++) {
            cnt.get(s.charAt(i)).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.nextLine().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            int ans = 0;
            if (t == 1) {
                int i = x - 1;
                char c = input[2].charAt(0);
                if (s.charAt(i) == c) {
                    continue;
                }
                int a = bisectLeft(cnt.get(s.charAt(i)), i);
                cnt.get(s.charAt(i)).remove(a);
                s = s.substring(0, i) + c + s.substring(i + 1);
                int b = bisectLeft(cnt.get(c), i);
                cnt.get(c).add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                for (char c : alp) {
                    int a = bisectLeft(cnt.get(c), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }

    public static int bisectLeft(List<Integer> arr, int x) {
        int low = 0;
        int high = arr.size() - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (arr.get(mid) < x) {
                low = mid + 1;
            } else if (arr.get(mid) > x) {
                high = mid - 1;
            } else {
                return mid;
            }
        }
        return low;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            if (!cnt.containsKey(c)) {
                cnt.put(c, new ArrayList<>());
            }
            cnt.get(c).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String t = sc.next();
            int x = sc.nextInt();
            int y = sc.nextInt();
            int ans = 0;
            if (t.equals("1")) {
                int i = x - 1;
                char c = sc.next().charAt(0);
                if (s.charAt(i) == c) {
                    continue;
                }
                int a = bisect(cnt.get(s.charAt(i)), i);
                cnt.get(s.charAt(i)).remove(a);
                s = s.substring(0, i) + c + s.substring(i + 1);
                int b = bisect(cnt.get(c), i);
                cnt.get(c).add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                for (char c : alp) {
                    int a = bisect(cnt.get(c), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }

    public static int bisect(List<Integer> list, int x) {
        int low = 0;
        int high = list.size() - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (list.get(mid) == x) {
                return mid;
            } else if (list.get(mid) < x) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return low;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.next();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    List<Integer>[] cnt = new ArrayList[26];
    for (int i = 0; i < 26; i++) {
      cnt[i] = new ArrayList<>();
    }
    for (int i = 0; i < n; i++) {
      char c = s.charAt(i);
      cnt[c - 'a'].add(i);
    }
    int q = scanner.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = scanner.nextLine().split(" ");
      int t = Integer.parseInt(input[0]);
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      int ans = 0;
      if (t == 1) {
        int i = x - 1;
        char c = input[3].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = cnt[s.charAt(i) - 'a'].indexOf(i);
        cnt[s.charAt(i) - 'a'].remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = cnt[c - 'a'].indexOf(i);
        cnt[c - 'a'].add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        for (int j = 0; j < 26; j++) {
          int a = cnt[j].indexOf(l);
          if (a < cnt[j].size() && cnt[j].get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char[] s = sc.next().toCharArray();
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < s.length; i++) {
            cnt.computeIfAbsent(s[i], k -> new ArrayList<>()).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.nextLine().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            if (t == 1) {
                int i = x - 1;
                char c = input[2].charAt(0);
                if (s[i] == c) {
                    continue;
                }
                int a = Collections.binarySearch(cnt.get(s[i]), i);
                cnt.get(s[i]).remove(a);
                s[i] = c;
                int b = Collections.binarySearch(cnt.get(c), i);
                cnt.get(c).add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (char c : "abcdefghijklmnopqrstuvwxyz") {
                    int a = Collections.binarySearch(cnt.get(c), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();
        String alp = "abcdefghijklmnopqrstuvwxyz";
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            if (!cnt.containsKey(c)) {
                cnt.put(c, new ArrayList<>());
            }
            cnt.get(c).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] query = sc.nextLine().split(" ");
            int t = Integer.parseInt(query[0]);
            if (t == 1) {
                int x = Integer.parseInt(query[1]);
                char c = query[2].charAt(0);
                if (s.charAt(x - 1) == c) {
                    continue;
                }
                int a = Arrays.binarySearch(cnt.get(s.charAt(x - 1)), x - 1);
                cnt.get(s.charAt(x - 1)).remove(a);
                s = s.substring(0, x - 1) + c + s.substring(x);
                int b = Arrays.binarySearch(cnt.get(c), x - 1);
                cnt.get(c).add(b, x - 1);
            } else {
                int l = Integer.parseInt(query[1]) - 1;
                int r = Integer.parseInt(query[2]) - 1;
                int ans = 0;
                for (char c : alp.toCharArray()) {
                    int a = Arrays.binarySearch(cnt.get(c), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    HashMap<Character, ArrayList<Integer>> cnt = new HashMap<>();
    for (int i = 0; i < n; i++) {
      char c = s.charAt(i);
      if (!cnt.containsKey(c)) {
        cnt.put(c, new ArrayList<>());
      }
      cnt.get(c).add(i);
    }
    int q = sc.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = sc.nextLine().split(" ");
      String t = input[0];
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      int ans = 0;
      if (t.equals("1")) {
        int i = x - 1;
        char c = input[2].charAt(0);
        if (s.charAt(i) == c) {
          continue;
        }
        int a = bisectLeft(cnt.get(s.charAt(i)), i);
        cnt.get(s.charAt(i)).remove(a);
        s = s.substring(0, i) + c + s.substring(i + 1);
        int b = bisectLeft(cnt.get(c), i);
        cnt.get(c).add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        for (char c : alp) {
          int a = bisectLeft(cnt.get(c), l);
          if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }

  private static int bisectLeft(ArrayList<Integer> arr, int x) {
    int lo = 0;
    int hi = arr.size() - 1;
    while (lo <= hi) {
      int mid = (lo + hi) / 2;
      if (arr.get(mid) < x) {
        lo = mid + 1;
      } else if (arr.get(mid) > x) {
        hi = mid - 1;
      } else {
        return mid;
      }
    }
    return lo;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Arrays;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    char[] s = sc.next().toCharArray();
    char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
    Map<Character, List<Integer>> cnt = new HashMap<>();
    for (int i = 0; i < s.length; i++) {
      cnt.putIfAbsent(s[i], new ArrayList<>());
      cnt.get(s[i]).add(i);
    }
    int q = sc.nextInt();
    for (int i = 0; i < q; i++) {
      String[] input = sc.nextLine().split(" ");
      int t = Integer.parseInt(input[0]);
      int x = Integer.parseInt(input[1]);
      int y = Integer.parseInt(input[2]);
      if (t == 1) {
        int i = x - 1;
        char c = input[3].charAt(0);
        if (s[i] == c) {
          continue;
        }
        int a = Arrays.binarySearch(cnt.get(s[i]), i);
        cnt.get(s[i]).remove(a);
        s[i] = c;
        int b = Arrays.binarySearch(cnt.get(c), i);
        cnt.get(c).add(b, i);
      } else {
        int l = x - 1;
        int r = y - 1;
        int ans = 0;
        for (char c : alp) {
          int a = Arrays.binarySearch(cnt.get(c), l);
          if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
            ans++;
          }
        }
        System.out.println(ans);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.nextLine();
        String alp = "abcdefghijklmnopqrstuvwxyz";
        ArrayList<Integer>[] cnt = new ArrayList[26];
        for (int i = 0; i < 26; i++) {
            cnt[i] = new ArrayList<>();
        }
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            cnt[c - 'a'].add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.nextLine().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            if (t == 1) {
                int i = x - 1;
                char c = (char) y;
                if (s.charAt(i) == c) {
                    continue;
                }
                int a = Arrays.binarySearch(cnt[s.charAt(i)], i);
                cnt[s.charAt(i)].remove(a);
                s = s.substring(0, i) + c + s.substring(i + 1);
                int b = Arrays.binarySearch(cnt[c], i);
                cnt[c].add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (char c : alp.toCharArray()) {
                    int a = Arrays.binarySearch(cnt[c], l);
                    if (a < cnt[c].size() && cnt[c].get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char[] s = sc.next().toCharArray();
        char[] alp = "abcdefghijklmnopqrstuvwxyz".toCharArray();
        Map<Character, List<Integer>> cnt = new HashMap<>();
        for (int i = 0; i < alp.length; i++) {
            cnt.put(alp[i], new ArrayList<>());
        }
        for (int i = 0; i < s.length; i++) {
            cnt.get(s[i]).add(i);
        }
        int q = sc.nextInt();
        for (int i = 0; i < q; i++) {
            String[] input = sc.nextLine().split(" ");
            int t = Integer.parseInt(input[0]);
            int x = Integer.parseInt(input[1]);
            int y = Integer.parseInt(input[2]);
            if (t == 1) {
                int i = x - 1;
                char c = input[2].charAt(0);
                if (s[i] == c) {
                    continue;
                }
                int a = Arrays.binarySearch(cnt.get(s[i]).toArray(), i);
                cnt.get(s[i]).remove(a);
                s[i] = c;
                int b = Arrays.binarySearch(cnt.get(c).toArray(), i);
                cnt.get(c).add(b, i);
            } else {
                int l = x - 1;
                int r = y - 1;
                int ans = 0;
                for (char c : alp) {
                    int a = Arrays.binarySearch(cnt.get(c).toArray(), l);
                    if (a < cnt.get(c).size() && cnt.get(c).get(a) <= r) {
                        ans++;
                    }
                }
                System.out.println(ans);
            }
        }
    }
}
[/JAVA]
======
