  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            String[] line = scanner.nextLine().split(" ");
            for (int j = 0; j < N; j++) {
                A[i][j] = Integer.parseInt(line[j]);
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) {
                        continue;
                    }
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) {
                    continue;
                }
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      String[] line = sc.nextLine().split(" ");
      for (int j = 0; j < N; j++) {
        A[i][j] = Integer.parseInt(line[j]);
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) continue;
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) continue;
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) continue;
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) continue;
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = scanner.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) {
                        continue;
                    }
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) {
                    continue;
                }
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) continue;
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) continue;
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) {
            continue;
          }
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) {
          continue;
        }
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) {
            continue;
          }
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) {
          continue;
        }
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = scanner.nextInt();
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) continue;
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) continue;
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) {
            continue;
          }
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) {
          continue;
        }
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] A = new int[N][N];
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        A[i][j] = sc.nextInt();
      }
    }
    int ans = 0;
    boolean[][] bridge = new boolean[N][N];
    for (int k = 0; k < N; k++) {
      for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
          if (i >= j) continue;
          if (A[i][j] > A[i][k] + A[k][j]) {
            System.out.println(-1);
            return;
          }
        }
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        if (i >= j) continue;
        if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
          if (!bridge[i][j]) {
            ans += A[i][j];
            bridge[i][j] = true;
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            String[] line = sc.nextLine().split(" ");
            for (int j = 0; j < N; j++) {
                A[i][j] = Integer.parseInt(line[j]);
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) {
                        continue;
                    }
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) {
                    continue;
                }
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[][] A = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                A[i][j] = sc.nextInt();
            }
        }
        int ans = 0;
        boolean[][] bridge = new boolean[N][N];
        for (int k = 0; k < N; k++) {
            for (int i = 0; i < N; i++) {
                for (int j = 0; j < N; j++) {
                    if (i >= j) continue;
                    if (A[i][j] > A[i][k] + A[k][j]) {
                        System.out.println(-1);
                        return;
                    }
                }
            }
        }
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (i >= j) continue;
                if (all(A[i][j] < A[i][k] + A[k][j] for k in range(N) if k != i and k != j)) {
                    if (!bridge[i][j]) {
                        ans += A[i][j];
                        bridge[i][j] = true;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
