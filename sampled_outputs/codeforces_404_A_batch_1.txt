  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] s = new String[n];
        for (int i = 0; i < n; i++) {
            s[i] = scanner.next();
        }
        boolean flag = false;
        String[] d1 = new String[n];
        String[] d2 = new String[n];
        Set<String> rem = new HashSet<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    d1[i] = s[i].charAt(j);
                }
                if (i == n - j - 1) {
                    d2[i] = s[i].charAt(j);
                }
                if (i != j && i != n - j - 1) {
                    rem.add(s[i].charAt(j));
                }
            }
        }
        if (rem.size() != 1) {
            System.out.println("NO");
        } else if (!d1.equals(d2)) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).size() != 1) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).equals(rem)) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for (int i = 0; i < n; i++) {
            s[i] = sc.next();
        }
        boolean flag = false;
        String[] d1 = new String[n];
        String[] d2 = new String[n];
        Set<String> rem = new HashSet<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    d1[i] = s[i].charAt(j) + "";
                }
                if (i == n - j - 1) {
                    d2[i] = s[i].charAt(j) + "";
                }
                if (i != j && i != n - j - 1) {
                    rem.add(s[i].charAt(j) + "");
                }
            }
        }
        if (rem.size() != 1) {
            System.out.println("NO");
        } else if (!d1[0].equals(d2[0])) {
            System.out.println("NO");
        } else if (rem.size() != 1) {
            System.out.println("NO");
        } else if (rem.equals(d1)) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = scanner.next();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j);
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j);
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<String> s = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      s.add(sc.next());
    }
    int flag = 0;
    ArrayList<Character> d1 = new ArrayList<>();
    ArrayList<Character> d2 = new ArrayList<>();
    HashSet<Character> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1.add(s.get(i).charAt(j));
        }
        if (i == n - j - 1) {
          d2.add(s.get(i).charAt(j));
        }
        if (i != j && i != n - j - 1) {
          rem.add(s.get(i).charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        ArrayList<String> s = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            s.add(sc.next());
        }
        int flag = 0;
        ArrayList<String> d1 = new ArrayList<>();
        ArrayList<String> d2 = new ArrayList<>();
        HashSet<String> rem = new HashSet<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    d1.add(s.get(i).charAt(j) + "");
                }
                if (i == n - j - 1) {
                    d2.add(s.get(i).charAt(j) + "");
                }
                if (i != j && i != n - j - 1) {
                    rem.add(s.get(i).charAt(j) + "");
                }
            }
        }
        if (rem.size() != 1) {
            System.out.println("NO");
        } else if (!d1.equals(d2)) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).size() != 1) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).equals(rem)) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = scanner.next();
    }
    int flag = 0;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j) + "";
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j) + "";
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1[0].equals(d2[0])) {
      System.out.println("NO");
    } else if (rem.size() != 1) {
      System.out.println("NO");
    } else if (rem.equals(new HashSet<>(d1))) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = scanner.next();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j) + "";
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j) + "";
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!Arrays.equals(d1, d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(Arrays.asList(d1)).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(Arrays.asList(d1)).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = sc.next();
    }
    int flag = 0;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j) + "";
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j) + "";
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1[0].equals(d2[0])) {
      System.out.println("NO");
    } else if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!rem.equals(new HashSet<>(d1))) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = sc.next();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j);
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j);
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (rem.size() != 1) {
      System.out.println("NO");
    } else if (rem.equals(new HashSet<>(d1))) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = sc.next();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j) + "";
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j) + "";
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1[0].equals(d2[0])) {
      System.out.println("NO");
    } else if (d1.length != 1) {
      System.out.println("NO");
    } else if (rem.equals(d1)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] s = new String[n];
        for (int i = 0; i < n; i++) {
            s[i] = scanner.next();
        }
        boolean flag = false;
        String[] d1 = new String[n];
        String[] d2 = new String[n];
        Set<String> rem = new HashSet<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    d1[i] = s[i].charAt(j) + "";
                }
                if (i == n - j - 1) {
                    d2[i] = s[i].charAt(j) + "";
                }
                if (i != j && i != n - j - 1) {
                    rem.add(s[i].charAt(j) + "");
                }
            }
        }
        if (rem.size() != 1) {
            System.out.println("NO");
        } else if (!d1[0].equals(d2[0])) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).size() != 1) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).equals(rem)) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] s = new String[n];
        for (int i = 0; i < n; i++) {
            s[i] = sc.next();
        }
        boolean flag = false;
        String[] d1 = new String[n];
        String[] d2 = new String[n];
        Set<String> rem = new HashSet<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    d1[i] = s[i].charAt(j) + "";
                }
                if (i == n - j - 1) {
                    d2[i] = s[i].charAt(j) + "";
                }
                if (i != j && i != n - j - 1) {
                    rem.add(s[i].charAt(j) + "");
                }
            }
        }
        if (rem.size() != 1) {
            System.out.println("NO");
        } else if (!d1.equals(d2)) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).size() != 1) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).equals(rem)) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        List<String> s = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String k = scanner.nextLine();
            s.add(k);
        }
        boolean flag = false;
        List<String> d1 = new ArrayList<>();
        List<String> d2 = new ArrayList<>();
        Set<String> rem = new HashSet<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    d1.add(s.get(i).charAt(j) + "");
                }
                if (i == n - j - 1) {
                    d2.add(s.get(i).charAt(j) + "");
                }
                if (i != j && i != n - j - 1) {
                    rem.add(s.get(i).charAt(j) + "");
                }
            }
        }
        if (rem.size() != 1) {
            System.out.println("NO");
        } else if (!d1.equals(d2)) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).size() != 1) {
            System.out.println("NO");
        } else if (new HashSet<>(d1).equals(rem)) {
            System.out.println("NO");
        } else {
            System.out.println("YES");
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<String> s = new ArrayList<String>();
    for (int i = 0; i < n; i++) {
      s.add(sc.next());
    }
    int flag = 0;
    ArrayList<Character> d1 = new ArrayList<Character>();
    ArrayList<Character> d2 = new ArrayList<Character>();
    HashSet<Character> rem = new HashSet<Character>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1.add(s.get(i).charAt(j));
        }
        if (i == n - j - 1) {
          d2.add(s.get(i).charAt(j));
        }
        if (i != j && i != n - j - 1) {
          rem.add(s.get(i).charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (new HashSet<Character>(d1).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<Character>(d1).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = scanner.nextLine();
    }
    int flag = 0;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j) + "";
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j) + "";
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1[0].equals(d2[0])) {
      System.out.println("NO");
    } else if (d1[0].length() != 1) {
      System.out.println("NO");
    } else if (!rem.contains(d1[0])) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = scanner.next();
    }
    int flag = 0;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j);
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j);
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = sc.next();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j);
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j);
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!Arrays.equals(d1, d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(Arrays.asList(d1)).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(Arrays.asList(d1)).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = scanner.nextLine();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j);
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j);
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j));
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (rem.size() != 1) {
      System.out.println("NO");
    } else if (rem.equals(new HashSet<>(d1))) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String[] s = new String[n];
    for (int i = 0; i < n; i++) {
      s[i] = sc.next();
    }
    boolean flag = false;
    String[] d1 = new String[n];
    String[] d2 = new String[n];
    Set<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1[i] = s[i].charAt(j) + "";
        }
        if (i == n - j - 1) {
          d2[i] = s[i].charAt(j) + "";
        }
        if (i != j && i != n - j - 1) {
          rem.add(s[i].charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(Arrays.asList(d1)).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(Arrays.asList(d1)).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<String> s = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      s.add(sc.next());
    }
    int flag = 0;
    ArrayList<String> d1 = new ArrayList<>();
    ArrayList<String> d2 = new ArrayList<>();
    HashSet<String> rem = new HashSet<>();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) {
          d1.add(s.get(i).charAt(j) + "");
        }
        if (i == n - j - 1) {
          d2.add(s.get(i).charAt(j) + "");
        }
        if (i != j && i != n - j - 1) {
          rem.add(s.get(i).charAt(j) + "");
        }
      }
    }
    if (rem.size() != 1) {
      System.out.println("NO");
    } else if (!d1.equals(d2)) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).size() != 1) {
      System.out.println("NO");
    } else if (new HashSet<>(d1).equals(rem)) {
      System.out.println("NO");
    } else {
      System.out.println("YES");
    }
  }
}
[/JAVA]
======
