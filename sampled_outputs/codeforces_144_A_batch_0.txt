  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = Arrays.asList(a).indexOf(Collections.max(a));
    a = Arrays.copyOf(a, a.length, -1);
    int k = (-(Arrays.asList(a).indexOf(Collections.min(a))) - 1);
    a = Arrays.copyOf(a, a.length, -1);
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == Collections.max(a) && a[n - 1] == Collections.min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }
    int i = a.indexOf(Collections.max(a));
    a.remove(i);
    int k = -a.indexOf(Collections.min(a)) - 1;
    a.remove(0);
    int k1 = a.get(0);
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a.get(j) <= k1) {
        ind = j;
        k1 = a.get(j);
      }
    }
    if (a.get(0) == Collections.max(a) && a.get(n - 1) == Collections.min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int i = a.indexOf(max(a));
        a = a.clone();
        Collections.reverse(a);
        int k = -(a.indexOf(min(a)) + 1);
        a = a.clone();
        Collections.reverse(a);
        int k1 = a[0];
        int ind = 0;
        for (int j = 1; j < n; j++) {
            if (a[j] <= k1) {
                ind = j;
                k1 = a[j];
            }
        }
        if (a[0] == max(a) && a[n - 1] == min(a)) {
            System.out.println(0);
        } else if (i < ind) {
            System.out.println(i + Math.abs(k) - 1);
        } else {
            System.out.println(i + Math.abs(k) - 2);
        }
    }

    public static int max(int[] a) {
        int max = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] > max) {
                max = a[i];
            }
        }
        return max;
    }

    public static int min(int[] a) {
        int min = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] < min) {
                min = a[i];
            }
        }
        return min;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = a.clone();
    Collections.reverse(Arrays.asList(a));
    int k = -(a.indexOf(min(a)) + 1);
    a = a.clone();
    Collections.reverse(Arrays.asList(a));
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[n - 1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]

This is the Java code equivalent to the Python code provided, with the necessary imports and driver class. The code is functionally identical, and the output should be the same as the Python code.
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = Arrays.asList(a).indexOf(Collections.max(Arrays.asList(a)));
    a = Arrays.copyOf(a, a.length, -1);
    int k = (-(Arrays.asList(a).indexOf(Collections.min(Arrays.asList(a))) - 1));
    a = Arrays.copyOf(a, a.length, -1);
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == Collections.max(Arrays.asList(a)) && a[n - 1] == Collections.min(Arrays.asList(a))) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = a.clone();
    Collections.reverse(a);
    int k = -(a.indexOf(min(a)) + 1);
    a = a.clone();
    Collections.reverse(a);
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[n - 1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        int i = a.indexOf(max(a));
        a = a.clone();
        Collections.reverse(a);
        int k = -(a.indexOf(min(a)) + 1);
        a = a.clone();
        Collections.reverse(a);
        int k1 = a[0];
        int ind = 0;
        for (int j = 1; j < n; j++) {
            if (a[j] <= k1) {
                ind = j;
                k1 = a[j];
            }
        }
        if (a[0] == max(a) && a[n - 1] == min(a)) {
            System.out.println(0);
        } else if (i < ind) {
            System.out.println(i + Math.abs(k) - 1);
        } else {
            System.out.println(i + Math.abs(k) - 2);
        }
    }

    public static int max(int[] a) {
        int max = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] > max) {
                max = a[i];
            }
        }
        return max;
    }

    public static int min(int[] a) {
        int min = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] < min) {
                min = a[i];
            }
        }
        return min;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(Math.max(a));
    a = a.clone();
    a.reverse();
    int k = -(a.indexOf(Math.min(a)) + 1);
    a = a.clone();
    a.reverse();
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == Math.max(a) && a[n - 1] == Math.min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int i = a.indexOf(Collections.max(a));
    a.remove(i);
    int k = -(a.indexOf(Collections.min(a)) - 1);
    a.remove(i);
    int k1 = a.get(0);
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a.get(j) <= k1) {
        ind = j;
        k1 = a.get(j);
      }
    }
    if (a.get(0) == Collections.max(a) && a.get(n - 1) == Collections.min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }
    int i = a.indexOf(Collections.max(a));
    a.remove(i);
    int k = -(a.indexOf(Collections.min(a)) + 1);
    a.remove(k);
    int k1 = a.get(0);
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a.get(j) <= k1) {
        ind = j;
        k1 = a.get(j);
      }
    }
    if (a.get(0) == Collections.max(a) && a.get(n - 1) == Collections.min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int i = a.indexOf(max(a));
        a = a.clone();
        Collections.reverse(a);
        int k = -a.indexOf(min(a)) - 1;
        a = a.clone();
        Collections.reverse(a);
        int k1 = a[0];
        int ind = 0;
        for (int j = 1; j < n; j++) {
            if (a[j] <= k1) {
                ind = j;
                k1 = a[j];
            }
        }
        if (a[0] == max(a) && a[n - 1] == min(a)) {
            System.out.println(0);
        } else if (i < ind) {
            System.out.println(i + Math.abs(k) - 1);
        } else {
            System.out.println(i + Math.abs(k) - 2);
        }
    }

    private static int max(int[] a) {
        int max = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] > max) {
                max = a[i];
            }
        }
        return max;
    }

    private static int min(int[] a) {
        int min = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] < min) {
                min = a[i];
            }
        }
        return min;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(a.max());
    a = a.reverse();
    int k = (-(a.indexOf(a.min()))) - 1;
    a = a.reverse();
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == a.max() && a[-1] == a.min()) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and the `Math` class to perform mathematical operations. The `indexOf` method is used to find the index of the maximum and minimum elements in the array, and the `reverse` method is used to reverse the order of the array. The rest of the code is similar to the Python code, with the exception of the `Math.abs` method used to calculate the absolute value of the `k` variable.
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(sc.nextInt());
        }
        int i = a.indexOf(Collections.max(a));
        a = a.subList(0, a.size() - 1);
        int k = -a.indexOf(Collections.min(a)) - 1;
        a = a.subList(0, a.size() - 1);
        int k1 = a.get(0);
        int ind = 0;
        for (int j = 1; j < n; j++) {
            if (a.get(j) <= k1) {
                ind = j;
                k1 = a.get(j);
            }
        }
        if (a.get(0).equals(Collections.max(a)) && a.get(a.size() - 1).equals(Collections.min(a))) {
            System.out.println(0);
        } else if (i < ind) {
            System.out.println(i + Math.abs(k) - 1);
        } else {
            System.out.println(i + Math.abs(k) - 2);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = reverse(a);
    int k = -(a.indexOf(min(a)) + 1);
    a = reverse(a);
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[n - 1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }

  public static int[] reverse(int[] a) {
    int[] b = new int[a.length];
    for (int i = 0; i < a.length; i++) {
      b[i] = a[a.length - 1 - i];
    }
    return b;
  }

  public static int max(int[] a) {
    int max = a[0];
    for (int i = 1; i < a.length; i++) {
      if (a[i] > max) {
        max = a[i];
      }
    }
    return max;
  }

  public static int min(int[] a) {
    int min = a[0];
    for (int i = 1; i < a.length; i++) {
      if (a[i] < min) {
        min = a[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int i = a.indexOf(max(a));
        a = reverse(a);
        int k = -(a.indexOf(min(a)) - 1);
        a = reverse(a);
        int k1 = a[0];
        int ind = 0;
        for (int j = 1; j < n; j++) {
            if (a[j] <= k1) {
                ind = j;
                k1 = a[j];
            }
        }
        if (a[0] == max(a) && a[n - 1] == min(a)) {
            System.out.println(0);
        } else if (i < ind) {
            System.out.println(i + Math.abs(k) - 1);
        } else {
            System.out.println(i + Math.abs(k) - 2);
        }
    }
    
    public static int[] reverse(int[] a) {
        int n = a.length;
        for (int i = 0; i < n / 2; i++) {
            int temp = a[i];
            a[i] = a[n - i - 1];
            a[n - i - 1] = temp;
        }
        return a;
    }
    
    public static int max(int[] a) {
        int max = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] > max) {
                max = a[i];
            }
        }
        return max;
    }
    
    public static int min(int[] a) {
        int min = a[0];
        for (int i = 1; i < a.length; i++) {
            if (a[i] < min) {
                min = a[i];
            }
        }
        return min;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = a.clone();
    a.reverse();
    int k = -a.indexOf(min(a)) - 1;
    a = a.clone();
    a.reverse();
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[n - 1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
  
  private static int max(int[] a) {
    int max = a[0];
    for (int i = 1; i < a.length; i++) {
      if (a[i] > max) {
        max = a[i];
      }
    }
    return max;
  }
  
  private static int min(int[] a) {
    int min = a[0];
    for (int i = 1; i < a.length; i++) {
      if (a[i] < min) {
        min = a[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int i = a.indexOf(Collections.max(a));
    a.sort(Collections.reverseOrder());
    int k = -(a.indexOf(Collections.min(a)) - 1);
    a.sort(Collections.reverseOrder());
    int k1 = a.get(0);
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a.get(j) <= k1) {
        ind = j;
        k1 = a.get(j);
      }
    }
    if (a.get(0) == Collections.max(a) && a.get(n - 1) == Collections.min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = reverse(a);
    int k = -(a.indexOf(min(a)) - 1);
    a = reverse(a);
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[n - 1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }

  public static int[] reverse(int[] a) {
    int[] b = new int[a.length];
    for (int i = 0; i < a.length; i++) {
      b[i] = a[a.length - i - 1];
    }
    return b;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = a.clone();
    Collections.reverse(a);
    int k = -(a.indexOf(min(a)) - 1);
    a = a.clone();
    Collections.reverse(a);
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[n - 1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int i = a.indexOf(max(a));
    a = a.reverse();
    int k = -a.indexOf(min(a)) - 1;
    a = a.reverse();
    int k1 = a[0];
    int ind = 0;
    for (int j = 1; j < n; j++) {
      if (a[j] <= k1) {
        ind = j;
        k1 = a[j];
      }
    }
    if (a[0] == max(a) && a[-1] == min(a)) {
      System.out.println(0);
    } else if (i < ind) {
      System.out.println(i + Math.abs(k) - 1);
    } else {
      System.out.println(i + Math.abs(k) - 2);
    }
  }
}
[/JAVA]
======
