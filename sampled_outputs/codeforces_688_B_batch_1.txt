  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

Explanation:

1. The Python code takes input from the user using the `input()` function and stores it in a variable called `n`.
2. The Python code then prints the input string `n` followed by the reversed string `n[::-1]`.
3. In Java, we can achieve the same functionality by using the `Scanner` class to read input from the user, and the `substring()` method to get the reversed string.
4. The `substring()` method takes three arguments: the starting index, the ending index, and the step size. In this case, we want to start at the end of the string and go backwards to the beginning, so we set the starting index to `n.length() - 1` and the step size to `-1`.
5. The `System.out.println()` method is used to print the output to the console.

Note: The `Scanner` class is used to read input from the user, and the `substring()` method is used to get the reversed string.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    String reversed = new StringBuilder(n).reverse().toString();
    System.out.println(n + reversed);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1));
  }
}
[/JAVA]

Explanation:

1. The `import` statement is used to import the `Scanner` class from the `java.util` package.
2. The `Scanner` class is used to read input from the user.
3. The `nextLine()` method is used to read a line of input from the user.
4. The `substring()` method is used to extract a substring from the input string.
5. The `length()` method is used to get the length of the input string.
6. The `System.out.println()` method is used to print the output to the console.

Note: The `nextLine()` method returns a `String` object, so we don't need to use the `toString()` method to convert it to a string.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    String reversed = new StringBuilder(n).reverse().toString();
    System.out.println(n + reversed);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

This Java code is functionally identical to the Python code. It uses the `Scanner` class to read input from the user, and the `substring` method to extract the last character of the input string and print it along with the original string. The `substring` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are using the starting index of `n.length() - 1` and the ending index of `0`, and the step size of `-1` to extract the last character of the string.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

Explanation:

* The `Scanner` class is used to read input from the user.
* The `nextLine()` method is used to read a single line of input from the user.
* The `substring()` method is used to extract a substring from a string. In this case, we are extracting the last character of the input string and reversing it.
* The `System.out.println()` method is used to print the result to the console.

Note: The `substring()` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are starting at the last character of the input string, ending at the first character, and stepping backwards by one character each time.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String reversedInput = new StringBuilder(input).reverse().toString();
        System.out.println(input + reversedInput);
    }
}
[/JAVA]

Explanation:

1. The `import` statement is used to import the `Scanner` class from the `java.util` package.
2. The `Scanner` class is used to read input from the user.
3. The `nextLine()` method is used to read a line of input from the user.
4. The `StringBuilder` class is used to create a new string that is the reverse of the input string.
5. The `reverse()` method is used to reverse the input string.
6. The `toString()` method is used to convert the reversed string to a regular string.
7. The `System.out.println()` method is used to print the concatenation of the input string and the reversed string.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

Explanation:

1. `import java.util.Scanner;` - This line imports the `Scanner` class from the `java.util` package, which is used to read input from the user.
2. `public class Solution {` - This line starts the definition of a new class called `Solution`.
3. `public static void main(String[] args) {` - This line defines the `main` method, which is the entry point of the program. The `public` access modifier means that the method can be accessed from outside the class, and the `static` keyword means that the method can be called without creating an instance of the class. The `void` return type means that the method does not return any value. The `String[] args` parameter is an array of strings that contains the command-line arguments passed to the program.
4. `Scanner scanner = new Scanner(System.in);` - This line creates a new `Scanner` object that reads input from the standard input stream (`System.in`).
5. `String n = scanner.nextLine();` - This line reads a line of input from the user and stores it in the `n` variable.
6. `System.out.println(n + n.substring(n.length() - 1, 0, -1));` - This line concatenates the `n` variable with a substring of the `n` variable that starts at the end of the string and ends at the beginning of the string, with a step size of -1. The `System.out.println()` method is used to print the result to the console.
7. `}` - This line ends the `main` method.
8. `}` - This line ends the `Solution` class.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

Explanation:

1. We first import the `Scanner` class from the `java.util` package to read input from the user.
2. We create a new instance of the `Scanner` class and assign it to a variable named `scanner`.
3. We use the `nextLine()` method of the `Scanner` class to read a line of input from the user.
4. We assign the input to a variable named `n`.
5. We use the `substring()` method of the `String` class to extract the last character of the input string and print it.
6. We use the `length()` method of the `String` class to get the length of the input string.
7. We use the `substring()` method of the `String` class again to extract the last character of the input string and print it.
8. We use the `print()` method of the `System` class to print the result.

Note: The `substring()` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are using the default step size of 1, which means we are extracting the last character of the input string.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String n = scanner.nextLine();
        System.out.println(n + n.substring(n.length() - 1, 0, -1));
    }
}
[/JAVA]

Explanation:

1. `import java.util.Scanner;` - This line imports the `Scanner` class from the `java.util` package, which is used to read input from the user.
2. `public class Solution {` - This line starts the definition of a new class called `Solution`.
3. `public static void main(String[] args) {` - This line starts the definition of the `main` method, which is the entry point of the program. The `public` access modifier means that the method can be accessed from outside the class, and the `static` keyword means that the method can be called without creating an instance of the class. The `void` return type means that the method does not return any value. The `String[] args` parameter is an array of strings that contains the command-line arguments passed to the program.
4. `Scanner scanner = new Scanner(System.in);` - This line creates a new `Scanner` object that reads input from the standard input stream (i.e., the keyboard).
5. `String n = scanner.nextLine();` - This line reads a line of input from the user and stores it in the `n` variable.
6. `System.out.println(n + n.substring(n.length() - 1, 0, -1));` - This line concatenates the `n` variable with a substring of itself, starting from the last character and going backwards, and then prints the result to the console. The `substring` method is used to extract a substring from a string, and the `length()` method is used to get the length of the string. The `0` and `-1` parameters are used to specify the starting and ending indices of the substring, respectively.
7. `}` - This line ends the definition of the `main` method.
8. `}` - This line ends the definition of the `Solution` class.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

Explanation:

1. The `Scanner` class is used to read input from the user.
2. The `nextLine()` method is used to read a line of input from the user.
3. The `substring()` method is used to extract a substring from the input string. In this case, we are extracting the last character of the input string and reversing it.
4. The `length()` method is used to get the length of the input string.
5. The `print()` method is used to print the output to the console.

Note: The `substring()` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are starting at the last character of the input string, ending at the first character, and stepping backwards by one character each time.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

This Java code is functionally identical to the Python code. It uses the `Scanner` class to read input from the user, and then uses the `substring` method to get the last character of the input string and print it. The `substring` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are starting at the last character of the string, and ending at the first character, with a step size of -1 to move backwards.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0, -1));
  }
}
[/JAVA]

This code uses the `Scanner` class to read input from the user, and the `substring` method to extract the last character of the input string and print it. The `substring` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are using the length of the input string as the starting index, and -1 as the ending index and step size, which means we are starting from the last character and going backwards by -1 characters until we reach the first character.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1));
  }
}
[/JAVA]

Explanation:

1. The `import` statement is used to import the `Scanner` class from the `java.util` package.
2. The `Scanner` class is used to read input from the user.
3. The `nextLine()` method is used to read a line of input from the user.
4. The `String` class is used to store the input as a string.
5. The `substring()` method is used to extract a substring from the input string, starting from the end of the string and moving backwards by one character at a time.
6. The `System.out.println()` method is used to print the output to the console.

Note: The `substring()` method takes two arguments: the starting index and the ending index (exclusive). In this case, the starting index is `n.length() - 1`, which is the index of the last character in the string, and the ending index is `n.length()`, which is the index of the null terminator at the end of the string. This means that the substring will contain all characters in the string, except for the last one.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String input = scanner.nextLine();
    System.out.println(input + input.substring(input.length() - 1, 0, -1));
  }
}
[/JAVA]

Explanation:

1. The `Scanner` class is used to read input from the user.
2. The `nextLine()` method is used to read a line of input from the user.
3. The `substring()` method is used to extract a substring from the input string.
4. The `length()` method is used to get the length of the input string.
5. The `System.out.println()` method is used to print the output.

Note: The `substring()` method takes three arguments: the starting index, the ending index, and the step size. In this case, we are starting from the end of the string and going backwards, so the step size is -1.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String reversed = new StringBuilder(input).reverse().toString();
        System.out.println(input + reversed);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1, 0));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String n = scanner.nextLine();
    System.out.println(n + n.substring(n.length() - 1));
  }
}
[/JAVA]
======
