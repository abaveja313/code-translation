  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2)) % k;
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -(k * n - x -
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int y = scanner.nextInt();
    solve(k, x, y);
  }

  private static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2));
    }
    System.out.println(n);

    int ans = 0;
    int nowY = -k;
    int l = -((k *
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        solve(k, x, y);
    }

    private static void solve(int k, int x, int y) {
        if (k % 2 == 0 && (x + y) % 2 == 1) {
            System.out.println(-1);
            return;
        }

        int xSign = 1;
        int ySign = 1;
        boolean xyInv = false;

        if (x < 0) {
            x *= -1;
            xSign = -1;
        }

        if (y < 0) {
            y *= -1;
            ySign = -1;
        }

        if (x < y) {
            xyInv = true;
            int temp = x;
            x = y;
            y = temp;
        }

        if (x + y < k && (x + y) % 2 == 1) {
            System.out.println(3);
            int nowY = x - k;
            printXY(x, nowY, xyInv, xSign, ySign);
            int nowX = x + (k + x - y) / 2;
            nowY += k - (k + x - y) / 2;
            printXY(nowX, nowY, xyInv, xSign, ySign);
            printXY(x, y, xyInv, xSign, ySign);
            return;
        }

        int c = (k - ((x + y) % k)) % k;
        int n;
        if (x + y < k) {
            n = 2;
        } else {
            n = (((x + y + k - 1) / k) + (c % 2));
        }

        System.out.println(n);
        int ans = 0;
        int nowY = -k;
        int l =
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2)) % k;
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY);
      printXY(x, y);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = ((x + y + k - 1) / k) + (c % 2);
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -(k * n - x - y) / 2;
    while (nowY >= l) {
      printXY(0, nowY);
      nowY -= k;

======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2));
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x - y)
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2)) % 2;
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int y = scanner.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;

    if (x < 0) {
      x *= -1;
      xSign = -1;
    }

    if (y < 0) {
      y *= -1;
      ySign = -1;
    }

    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2)) % 2;
    }
    System.out.println(n);

    int ans = 0;
    int nowY = -k;
   
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2));
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x - y)
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int y = scanner.nextInt();
    solve(k, x, y);
  }

  private static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = ((x + y + k - 1) / k) + (c % 2);
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n -
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1, ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = ((x + y + k - 1) / k) + (c % 2);
    }
    System.out.println(n);

    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x - y) / 
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        solve(k, x, y);
    }

    private static void solve(int k, int x, int y) {
        if (k % 2 == 0 && (x + y) % 2 == 1) {
            System.out.println(-1);
            return;
        }
        int xSign = 1;
        int ySign = 1;
        boolean xyInv = false;
        if (x < 0) {
            x *= -1;
            xSign = -1;
        }
        if (y < 0) {
            y *= -1;
            ySign = -1;
        }
        if (x < y) {
            xyInv = true;
            int temp = x;
            x = y;
            y = temp;
        }
        if (x + y < k && (x + y) % 2 == 1) {
            System.out.println(3);
            int nowY = x - k;
            printXY(x, nowY);
            int nowX = x + (k + x - y) / 2;
            nowY += k - (k + x - y) / 2;
            printXY(nowX, nowY);
            printXY(x, y);
            return;
        }
        int c = (k - ((x + y) % k)) % k;
        int n;
        if (x + y < k) {
            n = 2;
        } else {
            n = ((x + y + k - 1) / k) + (c % 2);
        }
        System.out.println(n);
        int ans = 0;
        int nowY = -k;
        int l = -((k * n - x - y) / 2);
        while (nowY >= l) {
            printXY(0, nowY);
            nowY -=
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int y = scanner.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2)) % 2;
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l =
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2)) % 2;
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n -
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  private static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2));
    }
    System.out.println(n);

    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x -
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int x = sc.nextInt();
        int y = sc.nextInt();
        solve(k, x, y);
    }

    public static void solve(int k, int x, int y) {
        if (k % 2 == 0 && (x + y) % 2 == 1) {
            System.out.println(-1);
            return;
        }
        int xSign = 1;
        int ySign = 1;
        boolean xyInv = false;
        if (x < 0) {
            x *= -1;
            xSign = -1;
        }
        if (y < 0) {
            y *= -1;
            ySign = -1;
        }
        if (x < y) {
            xyInv = true;
            int temp = x;
            x = y;
            y = temp;
        }
        if (x + y < k && (x + y) % 2 == 1) {
            System.out.println(3);
            int nowY = x - k;
            printXY(x, nowY, xyInv, xSign, ySign);
            int nowX = x + (k + x - y) / 2;
            nowY += k - (k + x - y) / 2;
            printXY(nowX, nowY, xyInv, xSign, ySign);
            printXY(x, y, xyInv, xSign, ySign);
            return;
        }
        int c = (k - ((x + y) % k)) % k;
        int n;
        if (x + y < k) {
            n = 2;
        } else {
            n = (((x + y + k - 1) / k) + (c % 2)) % 2;
        }
        System.out.println(n);
        int ans = 0;
        int nowY = -k;
        int l = -((k * n - x -
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }
    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }
    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2));
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x - y) / 
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  private static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }

    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xyInv, xSign, ySign);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xyInv, xSign, ySign);
      printXY(x, y, xyInv, xSign, ySign);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = ((x + y + k - 1) / k) + (c % 2);
    }
    System.out.println(n);

    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x - y
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int k = sc.nextInt();
    int x = sc.nextInt();
    int y = sc.nextInt();
    solve(k, x, y);
  }

  public static void solve(int k, int x, int y) {
    if (k % 2 == 0 && (x + y) % 2 == 1) {
      System.out.println(-1);
      return;
    }
    int xSign = 1;
    int ySign = 1;
    boolean xyInv = false;
    if (x < 0) {
      x *= -1;
      xSign = -1;
    }
    if (y < 0) {
      y *= -1;
      ySign = -1;
    }
    if (x < y) {
      xyInv = true;
      int temp = x;
      x = y;
      y = temp;
    }

    if (x + y < k && (x + y) % 2 == 1) {
      System.out.println(3);
      int nowY = x - k;
      printXY(x, nowY, xSign, ySign, xyInv);
      int nowX = x + (k + x - y) / 2;
      nowY += k - (k + x - y) / 2;
      printXY(nowX, nowY, xSign, ySign, xyInv);
      printXY(x, y, xSign, ySign, xyInv);
      return;
    }

    int c = (k - ((x + y) % k)) % k;
    int n;
    if (x + y < k) {
      n = 2;
    } else {
      n = (((x + y + k - 1) / k) + (c % 2));
    }
    System.out.println(n);
    int ans = 0;
    int nowY = -k;
    int l = -((k * n - x - y)
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        solve(k, x, y);
    }

    public static void solve(int k, int x, int y) {
        if (k % 2 == 0 && (x + y) % 2 == 1) {
            System.out.println(-1);
            return;
        }
        int xSign = 1;
        int ySign = 1;
        boolean xyInv = false;
        if (x < 0) {
            x *= -1;
            xSign = -1;
        }
        if (y < 0) {
            y *= -1;
            ySign = -1;
        }
        if (x < y) {
            xyInv = true;
            int temp = x;
            x = y;
            y = temp;
        }

        if (x + y < k && (x + y) % 2 == 1) {
            System.out.println(3);
            int nowY = x - k;
            printXY(x, nowY, xSign, ySign, xyInv);
            int nowX = x + (k + x - y) / 2;
            nowY += k - (k + x - y) / 2;
            printXY(nowX, nowY, xSign, ySign, xyInv);
            printXY(x, y, xSign, ySign, xyInv);
            return;
        }

        int c = (k - ((x + y) % k)) % k;
        int n;
        if (x + y < k) {
            n = 2;
        } else {
            n = (((x + y + k - 1) / k) + (c % 2));
        }
        System.out.println(n);
        int ans = 0;
        int nowY = -k;
        int l = -(k * n - x
======
