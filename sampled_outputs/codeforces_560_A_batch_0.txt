  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]

This code reads an integer `n` and then reads `n` integers into an array `x`. It then sorts the array and uses the `Arrays.binarySearch()` method to check if the value `1` is present in the array. If it is, it prints `-1`, otherwise it prints `1`.

Note that the `Arrays.binarySearch()` method returns the index of the value if it is found in the array, or `-(insertion point) - 1` if it is not found. Since we are looking for the value `1`, we can use the `>= 0` check to determine if it is present in the array.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        Arrays.sort(x);
        if (Arrays.binarySearch(x, 1) >= 0) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        Arrays.sort(x);
        if (Arrays.binarySearch(x, 1) >= 0) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        scanner.close();

        java.util.Arrays.sort(x);
        if (java.util.Arrays.binarySearch(x, 1) >= 0) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        Arrays.sort(x);
        if (Arrays.binarySearch(x, 1) >= 0) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = sc.nextInt();
    }
    sc.close();
    x.sort();
    if (x.contains(1)) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        scanner.close();

        for (int i = 0; i < n; i++) {
            if (x[i] == 1) {
                System.out.println(-1);
                return;
            }
        }

        System.out.println(1);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    scanner.close();
    java.util.Arrays.sort(x);
    if (java.util.Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]

This is the equivalent Java code for the given Python code. The `Scanner` class is used to read input from the user, and the `Arrays.sort()` method is used to sort the input array. The `Arrays.binarySearch()` method is used to search for the element `1` in the sorted array. If the element is found, the program prints `-1`, otherwise it prints `1`.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        Arrays.sort(x);
        if (Arrays.binarySearch(x, 1) >= 0) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        Arrays.sort(x);
        if (Arrays.binarySearch(x, 1) >= 0) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and the `Arrays.sort()` and `Arrays.binarySearch()` methods to sort and search the array of integers. The code is functionally identical to the Python code, with the exception of the `Arrays.sort()` method, which is used to sort the array instead of the `sorted()` function in Python.
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = sc.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]

This Java code is functionally identical to the Python code, with the following changes:

* The `input()` function in Python is replaced with `Scanner` in Java to read input from the user.
* The `split()` method in Python is replaced with `String.split()` in Java to split the input string into an array of integers.
* The `sort()` method in Python is replaced with `Arrays.sort()` in Java to sort the array of integers.
* The `binarySearch()` method in Python is replaced with `Arrays.binarySearch()` in Java to search for the value 1 in the sorted array.
* The `print()` function in Python is replaced with `System.out.println()` in Java to print the output to the console.

Note that the `Arrays.binarySearch()` method returns the index of the value if it is found in the array, or `-1` if it is not found. This is why the `if` statement in the Java code checks if the result of `Arrays.binarySearch()` is greater than or equal to `0`.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]

This code uses the `Scanner` class to read input from the user, and the `Arrays.sort()` method to sort the array. The `Arrays.binarySearch()` method is used to check if the value 1 is present in the array. If it is, the code prints -1, otherwise it prints 1.
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        sc.close();
        x = Arrays.stream(x).sorted().toArray();
        if (Arrays.stream(x).anyMatch(i -> i == 1)) {
            System.out.println(-1);
        } else {
            System.out.println(1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = sc.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]

This is the equivalent Java code to the Python code you provided. It uses the `Scanner` class to read input from the user, and the `Arrays.sort()` method to sort the array. The `Arrays.binarySearch()` method is used to check if the value 1 is in the array. If it is, the program prints -1, otherwise it prints 1.

Note that in Java, we need to import the `java.util.Scanner` class to use the `Scanner` class, and the `java.util.Arrays` class to use the `Arrays` class.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    Arrays.sort(x);
    if (Arrays.binarySearch(x, 1) >= 0) {
      System.out.println(-1);
    } else {
      System.out.println(1);
    }
  }
}
[/JAVA]
======
