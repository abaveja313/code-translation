  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] stack = new String[n];
        for (int i = 0; i < n; i++) {
            stack[i] = scanner.next();
        }
        Set<String> used = new HashSet<>();
        for (int i = n - 1; i >= 0; i--) {
            if (!used.contains(stack[i])) {
                System.out.println(stack[i]);
                used.add(stack[i]);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] stack = new String[n];
        for (int i = 0; i < n; i++) {
            stack[i] = scanner.next();
        }
        Set<String> used = new HashSet<>();
        for (int i = n - 1; i >= 0; i--) {
            if (!used.contains(stack[i])) {
                System.out.println(stack[i]);
                used.add(stack[i]);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = sc.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] stack = new String[n];
        for (int i = 0; i < n; i++) {
            stack[i] = scanner.next();
        }
        Set<String> used = new HashSet<>();
        for (int i = n - 1; i >= 0; i--) {
            if (!used.contains(stack[i])) {
                System.out.println(stack[i]);
                used.add(stack[i]);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] stack = new String[n];
        for (int i = 0; i < n; i++) {
            stack[i] = scanner.next();
        }
        Set<String> used = new HashSet<>();
        for (int i = n - 1; i >= 0; i--) {
            if (!used.contains(stack[i])) {
                System.out.println(stack[i]);
                used.add(stack[i]);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] stack = new String[n];
    for (int i = 0; i < n; i++) {
      stack[i] = scanner.next();
    }
    Set<String> used = new HashSet<>();
    for (int i = n - 1; i >= 0; i--) {
      if (!used.contains(stack[i])) {
        System.out.println(stack[i]);
        used.add(stack[i]);
      }
    }
  }
}
[/JAVA]
======
