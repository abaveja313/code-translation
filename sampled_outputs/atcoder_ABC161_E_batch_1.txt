  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != null) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != null) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != null) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int c = scanner.nextInt();
        String s = scanner.nextLine();

        int[] fastestSchedule = new int[n];
        int[] latestSchedule = new int[n];
        int count = 1;
        int lastWorkday = -1000000000;
        for (int i = 0; i < n; i++) {
            if (s.charAt(i) == 'o' && i - lastWorkday > c) {
                fastestSchedule[i] = count;
                lastWorkday = i;
                if (count < k) {
                    count++;
                } else {
                    break;
                }
            }
        }
        count = k;
        lastWorkday = 1000000000;
        for (int i = n - 1; i >= 0; i--) {
            if (s.charAt(i) == 'o' && lastWorkday - i > c) {
                latestSchedule[i] = count;
                lastWorkday = i;
                if (count > 1) {
                    count--;
                } else {
                    break;
                }
            }
        }
        for (int i = 0; i < n; i++) {
            if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
                System.out.println(i + 1);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != null) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] != null && latestSchedule[i] != null && fastestSchedule[i] == latestSchedule[i]) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;

    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;

    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;

    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;

    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;

    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;

    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;

    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;

    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;

    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;

    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != null) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int c = sc.nextInt();
    String s = sc.next();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;
    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }
    count = k;
    lastWorkday = 1000000000;
    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int c = scanner.nextInt();
    String s = scanner.nextLine();

    int[] fastestSchedule = new int[n];
    int[] latestSchedule = new int[n];
    int count = 1;
    int lastWorkday = -1000000000;

    for (int i = 0; i < n; i++) {
      if (s.charAt(i) == 'o' && i - lastWorkday > c) {
        fastestSchedule[i] = count;
        lastWorkday = i;
        if (count < k) {
          count++;
        } else {
          break;
        }
      }
    }

    count = k;
    lastWorkday = 1000000000;

    for (int i = n - 1; i >= 0; i--) {
      if (s.charAt(i) == 'o' && lastWorkday - i > c) {
        latestSchedule[i] = count;
        lastWorkday = i;
        if (count > 1) {
          count--;
        } else {
          break;
        }
      }
    }

    for (int i = 0; i < n; i++) {
      if (fastestSchedule[i] == latestSchedule[i] && fastestSchedule[i] != 0) {
        System.out.println(i + 1);
      }
    }
  }
}
[/JAVA]
======
