  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}

[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and it uses the `Math.max()` method to find the maximum value in the `ans` array. The `me` array is used to store the cumulative sum of the products of the first `n` elements of the `P` array. The `ans` array is used to store the maximum value of the cumulative sum for each `k` values of `i`. The `main` method is the driver class that contains the executable code.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1) / 2) / P[i];
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1) / 2) / P[i];
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] P = new int[n];
        for (int i = 0; i < n; i++) {
            P[i] = scanner.nextInt();
        }
        int[] me = new int[n + 1];
        me[0] = 0;
        for (int i = 0; i < n; i++) {
            int p = (P[i] * (P[i] + 1)) / 2;
            me[i + 1] = me[i] + p;
        }
        int ans = 0;
        for (int i = k; i <= n; i++) {
            ans = Math.max(ans, me[i] - me[i - k]);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = scanner.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1) / 2) / P[i];
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]

Explanation:

1. The `import` statement is used to import the `Scanner` class from the `java.util` package.
2. The `Solution` class is defined with a `main` method that takes a `String[] args` parameter.
3. The `Scanner` object is created to read input from the console.
4. The `n` and `k` variables are initialized with the first two integers read from the console.
5. The `P` array is initialized with the next `n` integers read from the console.
6. The `me` array is initialized with a single element set to 0.
7. A loop is used to calculate the value of `p` for each element in `P` and add it to `me`.
8. The `ans` variable is initialized to 0.
9. A loop is used to calculate the maximum value of `me[i] - me[i - k]` for each `i` from `k` to `n + 1` and store the result in `ans`.
10. The final value of `ans` is printed to the console.

Note: The `Math.max` method is used to calculate the maximum value of two integers.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] P = new int[n];
        for (int i = 0; i < n; i++) {
            P[i] = scanner.nextInt();
        }
        int[] me = new int[n + 1];
        me[0] = 0;
        for (int i = 0; i < n; i++) {
            int p = (P[i] * (P[i] + 1)) / 2;
            me[i + 1] = me[i] + p;
        }
        int ans = 0;
        for (int i = k; i <= n; i++) {
            ans = Math.max(ans, me[i] - me[i - k]);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = scanner.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1) / 2) / P[i];
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}

[/JAVA]

I have converted the Python code to Java code, obeying the constraints you mentioned. The code is functionally identical to the Python code and should produce the same output for the same input.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and it uses the `Math.max()` method to find the maximum value in the `me` array. The rest of the code is similar to the Python code, with the exception of the `print()` statement, which is replaced with `System.out.println()` in Java.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = scanner.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1) / 2) / P[i];
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int[] P = new int[n];
    for (int i = 0; i < n; i++) {
      P[i] = sc.nextInt();
    }
    int[] me = new int[n + 1];
    me[0] = 0;
    for (int i = 0; i < n; i++) {
      int p = (P[i] * (P[i] + 1)) / 2;
      me[i + 1] = me[i] + p;
    }
    int ans = 0;
    for (int i = k; i <= n; i++) {
      ans = Math.max(ans, me[i] - me[i - k]);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int[] P = new int[n];
        for (int i = 0; i < n; i++) {
            P[i] = scanner.nextInt();
        }
        int[] me = new int[n + 1];
        me[0] = 0;
        for (int i = 0; i < n; i++) {
            int p = (P[i] * (P[i] + 1)) / 2;
            me[i + 1] = me[i] + p;
        }
        int ans = 0;
        for (int i = k; i <= n; i++) {
            ans = Math.max(ans, me[i] - me[i - k]);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
