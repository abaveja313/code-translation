  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }

        int ans = 10000000000000000;
        int l = -100000000000;
        int r = 100000000000;
        for (int count = 0; count < 100; count++) {
            int mid1 = (r - l) / 3 + l;
            int mid2 = (r - l) / 3 + l + 1;
            int temp1 = 0;
            int temp2 = 0;
            for (int i = 0; i < n; i++) {
                temp1 += Math.abs(a[i] - (mid1 + i + 1));
                temp2 += Math.abs(a[i] - (mid2 + i + 1));
            }
            if (temp1 < temp2) {
                r = mid2;
            } else {
                l = mid1;
            }
        }

        for (int b = l; b <= r; b++) {
            int temp = 0;
            for (int i = 0; i < n; i++) {
                temp += Math.abs(a[i] - (b + i + 1));
            }
            ans = Math.min(ans, temp);
        }

        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = 1 * (r - l) / 3 + l;
      int mid2 = 2 * (r - l) / 3 + l;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + 1;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + 1;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }

    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }

    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }

    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }

    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }

    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }

    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }

    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int ans = 10000000000000000;
    int l = -100000000000;
    int r = 100000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = 1 * (r - l) / 3 + l;
      int mid2 = 2 * (r - l) / 3 + l;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }

    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;

    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }

    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }

    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int l = -100000000000;
    int r = 100000000000;
    int ans = 10000000000000000;
    for (int count = 0; count < 100; count++) {
      int mid1 = (r - l) / 3 + l;
      int mid2 = (r - l) / 3 + l + (r - l) / 3;
      int temp1 = 0;
      int temp2 = 0;
      for (int i = 0; i < n; i++) {
        temp1 += Math.abs(a[i] - (mid1 + i + 1));
        temp2 += Math.abs(a[i] - (mid2 + i + 1));
      }
      if (temp1 < temp2) {
        r = mid2;
      } else {
        l = mid1;
      }
    }
    for (int b = l; b <= r; b++) {
      int temp = 0;
      for (int i = 0; i < n; i++) {
        temp += Math.abs(a[i] - (b + i + 1));
      }
      ans = Math.min(ans, temp);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
