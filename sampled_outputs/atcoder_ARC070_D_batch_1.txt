  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int A = Integer.parseInt(input[0]);
        int B = Integer.parseInt(input[1]);

        if (A <= B) {
            System.out.println("Impossible");
            return;
        }

        int N = A + B;
        int[] chain = new int[N];

        for (int i = 0; i < N; i++) {
            if (chain.length == 0) {
                chain[0] = i;
                continue;
            }
            int last = chain[chain.length - 1];
            if (ask(last, i)) {
                chain[chain.length] = i;
            } else {
                chain[chain.length - 1] = i;
            }
        }

        int main = chain[chain.length - 1];
        String ret = "";
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret += "1";
            } else {
                ret += "0";
            }
        }

        System.out.println("! " + ret);
    }

    public static boolean ask(int i, int j) {
        System.out.printf("? %d %d\n", i, j);
        return scanner.nextLine().equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int A = Integer.parseInt(input[0]);
        int B = Integer.parseInt(input[1]);
        if (A <= B) {
            System.out.println("Impossible");
            return;
        }
        int N = A + B;
        boolean[] chain = new boolean[N];
        for (int i = 0; i < N; i++) {
            if (i == 0) {
                chain[i] = true;
                continue;
            }
            if (chain[i - 1]) {
                chain[i] = ask(i, i);
            } else {
                chain[i] = ask(i, i);
            }
        }
        int main = N - 1;
        String ret = "";
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret += "1";
            } else {
                ret += "0";
            }
        }
        System.out.println("! " + ret);
    }
    
    private static boolean ask(int i, int j) {
        System.out.printf("? %d %d\n", i, j);
        return scanner.nextLine().equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        if (A <= B) {
            System.out.println("Impossible");
            return;
        }
        int N = A + B;
        int[] chain = new int[N];
        boolean[] ret = new boolean[N];
        for (int i = 0; i < N; i++) {
            if (chain.length == 0) {
                chain[0] = i;
                continue;
            }
            int last = chain[chain.length - 1];
            if (ask(last, i)) {
                chain[chain.length] = i;
            } else {
                chain[chain.length - 1] = i;
            }
        }
        int main = chain[chain.length - 1];
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret[i] = true;
            } else {
                ret[i] = false;
            }
        }
        System.out.println("! " + String.join("", ret));
    }
    
    public static boolean ask(int i, int j) {
        System.out.println("? " + i + " " + j);
        return sc.nextLine().equals("Y");
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    String[] input = sc.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A <= B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain[chain.length - 1] = i;
      }
    }
    int main = chain[chain.length - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  public static boolean ask(int i, int j) {
    System.out.printf("? %d %d", i, j);
    return sc.nextLine().equals("Y");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int A = sc.nextInt();
    int B = sc.nextInt();
    if (A <= B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain[chain.length - 1] = i;
      }
    }
    int main = chain[chain.length - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  private static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    String input = sc.nextLine();
    return input.equals("Y");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A <= B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain[chain.length - 1] = i;
      }
    }
    int main = chain[chain.length - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  private static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    return scanner.nextLine().equals("Y");
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int A = Integer.parseInt(input[0]);
        int B = Integer.parseInt(input[1]);

        if (A <= B) {
            System.out.println("Impossible");
            return;
        }

        int N = A + B;
        int[] chain = new int[N];
        chain[0] = 0;

        for (int i = 1; i < N; i++) {
            if (ask(chain[i - 1], i)) {
                chain[i] = i;
            } else {
                chain[i] = chain[i - 1];
            }
        }

        int main = chain[N - 1];
        String[] ret = new String[N];
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret[i] = "1";
            } else {
                ret[i] = "0";
            }
        }

        System.out.println("! " + String.join("", ret));
    }

    private static boolean ask(int i, int j) {
        System.out.printf("? %d %d\n", i, j);
        return scanner.nextLine().equals("Y");
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    String[] input = sc.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A <= B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain[chain.length - 1] = i;
      }
    }
    int main = chain[chain.length - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  private static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    return sc.nextLine().equals("Y");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int A = Integer.parseInt(input[0]);
        int B = Integer.parseInt(input[1]);

        if (A <= B) {
            System.out.println("Impossible");
            return;
        }

        int N = A + B;
        int[] chain = new int[N];

        for (int i = 0; i < N; i++) {
            if (chain.length == 0) {
                chain[0] = i;
                continue;
            }
            int last = chain[chain.length - 1];
            if (ask(last, i)) {
                chain[chain.length] = i;
            } else {
                chain[chain.length - 1] = i;
            }
        }

        int main = chain[chain.length - 1];
        String[] ret = new String[N];
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret[i] = "1";
            } else {
                ret[i] = "0";
            }
        }
        System.out.println("! " + String.join("", ret));
    }

    private static boolean ask(int i, int j) {
        System.out.printf("? %d %d%n", i, j);
        return scanner.nextLine().equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A <= B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain[chain.length - 1] = i;
      }
    }
    int main = chain[chain.length - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  private static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    String input = scanner.nextLine();
    return input.equals("Y");
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A > B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain[chain.length - 1] = i;
      }
    }
    int main = chain[chain.length - 1];
    String ret = "";
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret += "1";
      } else {
        ret += "0";
      }
    }
    System.out.println("! " + ret);
  }

  public static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    String input = new Scanner(System.in).nextLine();
    return input.equals("Y");
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int A = sc.nextInt();
    int B = sc.nextInt();
    if (A <= B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[i] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[i] = i;
      } else {
        chain[i] = chain[i - 1];
      }
    }
    int main = chain[chain.length - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  public static boolean ask(int i, int j) {
    System.out.printf("? %d %d", i, j);
    return sc.nextLine().equals("Y");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int A = Integer.parseInt(input[0]);
        int B = Integer.parseInt(input[1]);
        if (A <= B) {
            System.out.println("Impossible");
            return;
        }
        int N = A + B;
        boolean[] chain = new boolean[N];
        for (int i = 0; i < N; i++) {
            if (i == 0) {
                chain[i] = true;
                continue;
            }
            if (chain[i - 1]) {
                chain[i] = ask(i, i - 1);
            } else {
                chain[i] = false;
            }
        }
        int main = N - 1;
        String ret = "";
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret += "1";
            } else {
                ret += "0";
            }
        }
        System.out.println("! " + ret);
    }

    private static boolean ask(int i, int j) {
        System.out.printf("? %d %d\n", i, j);
        return scanner.nextLine().equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int A = Integer.parseInt(input[0]);
        int B = Integer.parseInt(input[1]);
        if (A <= B) {
            System.out.println("Impossible");
            return;
        }
        int N = A + B;
        int[] chain = new int[N];
        int last = 0;
        for (int i = 0; i < N; i++) {
            if (i == 0) {
                chain[i] = i;
                continue;
            }
            if (ask(last, i)) {
                chain[i] = i;
            } else {
                chain[i] = chain[i - 1];
            }
            last = chain[i];
        }
        String ret = "";
        for (int i = 0; i < N; i++) {
            if (ask(chain[i], i)) {
                ret += "1";
            } else {
                ret += "0";
            }
        }
        System.out.println("! " + ret);
    }

    private static boolean ask(int last, int i) {
        System.out.printf("? %d %d\n", last, i);
        return new Scanner(System.in).nextLine().equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A > B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (i == 0) {
        chain[i] = i;
        continue;
      }
      int last = chain[i - 1];
      if (ask(last, i)) {
        chain[i] = i;
      } else {
        chain[i] = chain[i - 1];
      }
    }
    int main = chain[N - 1];
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }
    System.out.println("! " + String.join("", ret));
  }

  public static boolean ask(int last, int i) {
    System.out.println("? " + last + " " + i);
    String input = new Scanner(System.in).nextLine();
    return input.equals("Y");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        if (A <= B) {
            System.out.println("Impossible");
            return;
        }
        int N = A + B;
        int[] chain = new int[N];
        for (int i = 0; i < N; i++) {
            if (chain.length == 0) {
                chain[0] = i;
                continue;
            }
            int last = chain[chain.length - 1];
            if (ask(last, i)) {
                chain[chain.length] = i;
            } else {
                chain[chain.length - 1] = i;
            }
        }
        int main = chain[chain.length - 1];
        String[] ret = new String[N];
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret[i] = "1";
            } else {
                ret[i] = "0";
            }
        }
        System.out.println("! " + String.join("", ret));
    }

    public static boolean ask(int i, int j) {
        System.out.printf("? %d %d\n", i, j);
        Scanner sc = new Scanner(System.in);
        return sc.nextLine().equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int A = scanner.nextInt();
        int B = scanner.nextInt();
        if (A <= B) {
            System.out.println("Impossible");
            return;
        }
        int N = A + B;
        int[] chain = new int[N];
        for (int i = 0; i < N; i++) {
            if (chain.length == 0) {
                chain[0] = i;
                continue;
            }
            int last = chain[chain.length - 1];
            if (ask(last, i)) {
                chain[chain.length] = i;
            } else {
                chain.pop();
            }
        }
        int main = chain.pop();
        String[] ret = new String[N];
        for (int i = 0; i < N; i++) {
            if (ask(main, i)) {
                ret[i] = "1";
            } else {
                ret[i] = "0";
            }
        }
        System.out.println("! " + String.join("", ret));
    }

    private static boolean ask(int i, int j) {
        System.out.printf("? %d %d\n", i, j);
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        return input.equals("Y");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);

    if (A <= B) {
      System.out.println("Impossible");
      return;
    }

    int N = A + B;
    int[] chain = new int[N];

    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[i] = i;
        continue;
      }

      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[i] = i;
      } else {
        chain.pop();
      }
    }

    int main = chain.pop();
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret[i] = "1";
      } else {
        ret[i] = "0";
      }
    }

    System.out.println("! " + String.join("", ret));
  }

  private static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    return scanner.nextLine().equals("Y");
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int A = Integer.parseInt(input[0]);
    int B = Integer.parseInt(input[1]);
    if (A > B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (chain.length == 0) {
        chain[0] = i;
        continue;
      }
      int last = chain[chain.length - 1];
      if (ask(last, i)) {
        chain[chain.length] = i;
      } else {
        chain.pop();
      }
    }
    int main = chain.pop();
    String[] ret = new String[N];
    for (int i = 0; i < N; i++) {
      ret[i] = ask(main, i) ? "1" : "0";
    }
    System.out.println("! " + String.join("", ret));
  }

  private static boolean ask(int i, int j) {
    System.out.println("? " + i + " " + j);
    return scanner.nextLine().equals("Y");
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int A = sc.nextInt();
    int B = sc.nextInt();
    if (A > B) {
      System.out.println("Impossible");
      return;
    }
    int N = A + B;
    int[] chain = new int[N];
    for (int i = 0; i < N; i++) {
      if (i == 0) {
        chain[i] = i;
        continue;
      }
      int last = chain[i - 1];
      if (ask(last, i)) {
        chain[i] = i;
      } else {
        chain[i] = chain[i - 1];
      }
    }
    int main = chain[N - 1];
    String ret = "";
    for (int i = 0; i < N; i++) {
      if (ask(main, i)) {
        ret += "1";
      } else {
        ret += "0";
      }
    }
    System.out.println("! " + ret);
  }

  private static boolean ask(int i, int j) {
    System.out.printf("? %d %d\n", i, j);
    return sc.nextLine().equals("Y");
  }
}

[/JAVA]
======
