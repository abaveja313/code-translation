  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] res = new String[n];
    for (int p = n / 2; p >= -n / 2; p--) {
      p = Math.abs(p);
      res[p] = "*" + "D".repeat(n - 2 * p) + "*";
    }
    System.out.println(String.join("\n", res));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.close();

    String[] res = new String[n / 2];
    for (int p = n / 2; p >= -n / 2; p--) {
      p = Math.abs(p);
      res[p] = "*" + "D".repeat(n - 2 * p) + "*";
    }

    System.out.println(String.join("\n", res));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        StringBuilder res = new StringBuilder();
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res.append("*".repeat(p) + "D".repeat(n - 2 * p) + "*".repeat(p) + "\n");
        }
        System.out.println(res.toString());
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] res = new String[n];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*";
        }
        String output = String.join("\n", res);
        System.out.println(output);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n];
        for (int i = n / 2; i >= -n / 2; i--) {
            int p = Math.abs(i);
            res[i] = "*" + "D".repeat(n - 2 * p) + "*";
        }
        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n / 2];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*";
        }

        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n / 2];
        for (int p = n / 2; p >= -n / 2; p--) {
            int absP = Math.abs(p);
            String stars = "*".repeat(absP);
            String dashes = "-".repeat(n - 2 * absP);
            res[n / 2 - p] = stars + dashes + stars;
        }

        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.close();

    StringBuilder res = new StringBuilder();
    for (int p = n / 2; p >= -n / 2; p--) {
      p = Math.abs(p);
      res.append("*".repeat(p) + "D".repeat(n - 2 * p) + "*".repeat(p) + "\n");
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.close();

    String[] res = new String[n / 2];
    for (int p = n / 2; p >= -n / 2; p--) {
      p = Math.abs(p);
      res[p] = "*" + "D".repeat(n - 2 * p) + "*";
    }

    System.out.println(String.join("\n", res));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        String[] res = new String[n / 2];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n];
        for (int i = n / 2; i >= -n / 2; i--) {
            int p = Math.abs(i);
            res[i] = "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*";
        }

        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*";
        }
        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String[] res = new String[n];
    for (int p = n / 2; p >= -n / 2; p--) {
      p = Math.abs(p);
      res[p] = "*" + "D".repeat(n - 2 * p) + "*";
    }
    System.out.println(String.join("\n", res));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n / 2];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*";
        }
        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.close();

    StringBuilder res = new StringBuilder();
    for (int p = n / 2; p >= -n / 2; p--) {
      int absP = Math.abs(p);
      res.append("*".repeat(absP));
      res.append("D".repeat(n - 2 * absP));
      res.append("*".repeat(absP));
      res.append("\n");
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*";
        }
        String output = String.join("\n", res);
        System.out.println(output);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.close();

        String[] res = new String[n / 2];
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res[p] = "*" + "D".repeat(n - 2 * p) + "*";
        }

        System.out.println(String.join("\n", res));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String res = "";
        for (int p = n / 2; p >= -n / 2; p--) {
            p = Math.abs(p);
            res += "*" + "D".repeat(n - 2 * p) + "*" + "\n";
        }
        System.out.println(res);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.close();

    String[] res = new String[n / 2];
    for (int p = n / 2; p >= -n / 2; p--) {
      p = Math.abs(p);
      res[p] = "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.close();

        String[] res = new String[n];
        for (int i = n / 2; i >= -n / 2; i--) {
            int p = Math.abs(i);
            res[i] = "*" + "D".repeat(n - 2 * p) + "*" + "D".repeat(n - 2 * p) + "*";
        }

        System.out.println(String.join("\n", res));
    }
}
[/JAVA]

This is the Java code equivalent to the Python code. It uses the `Scanner` class to read the input, and the `String.join()` method to join the elements of the `res` array into a single string separated by newlines. The `Math.abs()` method is used to get the absolute value of the loop variable `i`. The `String.repeat()` method is used to create a string with a certain number of repetitions of a given character.
======
