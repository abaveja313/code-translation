  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    HashMap<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      int num = scanner.nextInt();
      if (!l.containsKey(num)) {
        l.put(num, 1);
      } else {
        l.put(num, l.get(num) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = sc.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            lst[i] = sc.nextInt();
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (lst[i] != lst[i - 1] && lst[i] != lst[i - 2]) {
                res++;
            }
        }
        System.out.println(res);
    }
}
[/JAVA]

This is the Java code equivalent to the Python code provided. The code uses the `Scanner` class to read input from the user, and it uses a `for` loop to iterate over the input array and count the number of unique elements. The `if` statement inside the `for` loop checks if the current element is not equal to the previous two elements, and if it is not, it increments the result variable. Finally, the code prints the result to the console.
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            lst[i] = sc.nextInt();
        }
        HashMap<Integer, Integer> l = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (!l.containsKey(lst[i])) {
                l.put(lst[i], 1);
            } else {
                l.put(lst[i], l.get(lst[i]) + 1);
            }
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (l.get(lst[i]) > 1) {
                res += n - i - l.get(lst[i]);
                l.put(lst[i], l.get(lst[i]) - 1);
            } else {
                res += n - i - 1;
            }
        }
        System.out.println(res);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int[] lst = new int[n];
    for (int i = 0; i < n; i++) {
      lst[i] = scanner.nextInt();
    }
    Map<Integer, Integer> l = new HashMap<>();
    for (int i = 0; i < n; i++) {
      if (!l.containsKey(lst[i])) {
        l.put(lst[i], 1);
      } else {
        l.put(lst[i], l.get(lst[i]) + 1);
      }
    }
    int res = 0;
    for (int i = 0; i < n; i++) {
      if (l.get(lst[i]) > 1) {
        res += n - i - l.get(lst[i]);
        l.put(lst[i], l.get(lst[i]) - 1);
      } else {
        res += n - i - 1;
      }
    }
    System.out.println(res);
  }
}
[/JAVA]
======
