  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    double ans = Double.POSITIVE_INFINITY;
    for (int i = 1; i <= 100; i++) {
      double cost = 0;
      for (int j = 0; j < n; j++) {
        cost += Math.pow(x[j] - i, 2);
      }
      ans = Math.min(ans, cost);
    }
    System.out.println(ans);
  }
}
[/JAVA]

This Java code is functionally identical to the Python code. It uses the `Scanner` class to read input from the user, and it uses the `Math.pow()` and `Math.min()` methods to calculate the cost and find the minimum cost. The `Double.POSITIVE_INFINITY` constant is used to initialize the `ans` variable to a large value, which is then updated with the minimum cost value as the loop iterates. Finally, the `System.out.println()` method is used to print the minimum cost value.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]

This is the Java code equivalent to the Python code. The `Scanner` class is used to read input from the user, and the `Math.pow()` method is used to calculate the square of a number. The `Math.min()` method is used to find the minimum value of two numbers. The `Double.POSITIVE_INFINITY` constant is used to initialize the `ans` variable to a large value, which will be used to store the minimum cost. The `System.out.println()` method is used to print the final result.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `java.util.Scanner` class to read input from the user, and the `Math.pow()` method to calculate the squared difference between each element of the input array and the current value of `i`. The `Math.min()` method is used to find the minimum cost value among all possible values of `i`. Finally, the `System.out.println()` method is used to print the final result.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]

This is the equivalent Java code to the given Python code. The `Scanner` class is used to read input from the user, and the `Math.pow()` method is used to calculate the square of a number. The `Double.POSITIVE_INFINITY` constant is used to initialize the `ans` variable to a large value, and the `Math.min()` method is used to compare the cost of each iteration and update the `ans` variable accordingly. Finally, the `System.out.println()` method is used to print the final value of `ans`.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = scanner.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        double ans = Double.POSITIVE_INFINITY;
        for (int i = 1; i <= 100; i++) {
            double cost = 0;
            for (int j = 0; j < n; j++) {
                cost += Math.pow(x[j] - i, 2);
            }
            ans = Math.min(ans, cost);
        }
        System.out.println(ans);
    }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and the `Math.pow()` method to calculate the square of the difference between each element of the array and the current value of `i`. The `Math.min()` method is used to find the minimum cost. Finally, the result is printed to the console.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] x = new int[n];
    for (int i = 0; i < n; i++) {
      x[i] = scanner.nextInt();
    }
    double ans = Double.POSITIVE_INFINITY;
    for (int i = 1; i <= 100; i++) {
      double cost = 0;
      for (int j = 0; j < n; j++) {
        cost += Math.pow(x[j] - i, 2);
      }
      ans = Math.min(ans, cost);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
