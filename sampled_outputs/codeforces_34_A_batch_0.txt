  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = scanner.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = 0;
    for (int i = 0; i < n; i++) {
      if (list[i] < k) {
        k = list[i];
      }
    }
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);

    int n = scanner.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = scanner.nextInt();
    }

    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }

    int k = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
      if (list[i] < k) {
        k = list[i];
      }
    }

    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
      if (list[i] < k) {
        k = list[i];
      }
    }
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int i = 0; i < n; i++) {
        if (list[i] == k) {
          System.out.println(i + 1 + " " + (i + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = getMin(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }

  public static int getMin(int[] list) {
    int min = list[0];
    for (int i = 1; i < list.length; i++) {
      if (list[i] < min) {
        min = list[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = scanner.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n - 1; i++) {
      list[i] = Math.abs(heights[i] - heights[i + 1]);
    }
    list[n - 1] = Math.abs(heights[n - 1] - heights[0]);
    int k = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
      if (list[i] < k) {
        k = list[i];
      }
    }
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int i = 0; i < n; i++) {
        if (list[i] == k) {
          System.out.println(i + 1 + " " + (i + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] heights = new int[n];
        for (int i = 0; i < n; i++) {
            heights[i] = sc.nextInt();
        }
        int[] list = new int[n];
        for (int i = 0; i < n; i++) {
            if (i != n - 1) {
                list[i] = Math.abs(heights[i] - heights[i + 1]);
            } else {
                list[i] = Math.abs(heights[i] - heights[0]);
            }
        }
        int k = min(list);
        if (list[n - 1] == k) {
            System.out.println(1 + " " + n);
        } else {
            for (int j = 0; j < n; j++) {
                if (list[j] == k) {
                    System.out.println(j + 1 + " " + (j + 2));
                    break;
                }
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] heights = new int[n];
        for (int i = 0; i < n; i++) {
            heights[i] = scanner.nextInt();
        }

        int[] list = new int[n];
        for (int i = 0; i < n; i++) {
            if (i != n - 1) {
                list[i] = Math.abs(heights[i] - heights[i + 1]);
            } else {
                list[i] = Math.abs(heights[i] - heights[0]);
            }
        }

        int k = 0;
        for (int i = 0; i < n; i++) {
            if (list[i] < k) {
                k = list[i];
            }
        }

        if (list[n - 1] == k) {
            System.out.println("1 " + n);
        } else {
            for (int j = 0; j < n; j++) {
                if (list[j] == k) {
                    System.out.println(j + 1 + " " + (j + 2));
                    break;
                }
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] heights = new int[n];
        for (int i = 0; i < n; i++) {
            heights[i] = sc.nextInt();
        }
        int[] list = new int[n];
        for (int i = 0; i < n; i++) {
            if (i != n - 1) {
                list[i] = Math.abs(heights[i] - heights[i + 1]);
            } else {
                list[i] = Math.abs(heights[i] - heights[0]);
            }
        }
        int k = Math.min(list);
        if (list[n - 1] == k) {
            System.out.println(1 + " " + n);
        } else {
            for (int j = 0; j < n; j++) {
                if (list[j] == k) {
                    System.out.println(j + 1 + " " + (j + 2));
                    break;
                }
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] heights = new int[n];
        for (int i = 0; i < n; i++) {
            heights[i] = sc.nextInt();
        }
        int[] list = new int[n];
        for (int i = 0; i < n - 1; i++) {
            list[i] = Math.abs(heights[i] - heights[i + 1]);
        }
        list[n - 1] = Math.abs(heights[n - 1] - heights[0]);
        int k = findMin(list);
        if (list[n - 1] == k) {
            System.out.println(1 + " " + n);
        } else {
            for (int j = 0; j < n; j++) {
                if (list[j] == k) {
                    System.out.println(j + 1 + " " + (j + 2));
                    break;
                }
            }
        }
    }
    
    private static int findMin(int[] list) {
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < list.length; i++) {
            if (list[i] < min) {
                min = list[i];
            }
        }
        return min;
    }
}
[/JAVA]

This is the Java code equivalent to the Python code. It uses the same logic and data structures, but with the necessary imports and a driver class called `Solution` with an executable `main` method. The `findMin` method is also included to find the minimum element in the `list` array.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }

  public static int min(int[] arr) {
    int min = arr[0];
    for (int i = 1; i < arr.length; i++) {
      if (arr[i] < min) {
        min = arr[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = scanner.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = findMin(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }

  private static int findMin(int[] list) {
    int min = Integer.MAX_VALUE;
    for (int i = 0; i < list.length; i++) {
      if (list[i] < min) {
        min = list[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = Math.min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = getMin(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }

  public static int getMin(int[] list) {
    int min = list[0];
    for (int i = 1; i < list.length; i++) {
      if (list[i] < min) {
        min = list[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = scanner.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = findMin(list);
    if (list[n - 1] == k) {
      System.out.println("1 " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }

  private static int findMin(int[] list) {
    int min = list[0];
    for (int i = 1; i < list.length; i++) {
      if (list[i] < min) {
        min = list[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
      if (list[i] < k) {
        k = list[i];
      }
    }
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int i = 0; i < n; i++) {
        if (list[i] == k) {
          System.out.println(i + 1 + " " + (i + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] heights = new int[n];
    for (int i = 0; i < n; i++) {
      heights[i] = sc.nextInt();
    }
    int[] list = new int[n];
    for (int i = 0; i < n; i++) {
      if (i != n - 1) {
        list[i] = Math.abs(heights[i] - heights[i + 1]);
      } else {
        list[i] = Math.abs(heights[i] - heights[0]);
      }
    }
    int k = min(list);
    if (list[n - 1] == k) {
      System.out.println(1 + " " + n);
    } else {
      for (int j = 0; j < n; j++) {
        if (list[j] == k) {
          System.out.println(j + 1 + " " + (j + 2));
          break;
        }
      }
    }
  }
}
[/JAVA]
======
