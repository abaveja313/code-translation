  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = scanner.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;

    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }

    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }

    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }

    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int[] tmp_o = new int[N + 1];
        int[] tmp_e = new int[N + 1];
        int count_o = 0;
        int count_e = 0;
        for (int i = 0; i < N; i++) {
            tmp_o[i + 1] = tmp_o[i] + A[i];
            if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
                count_o += 1 - tmp_o[i + 1];
                tmp_o[i + 1] = 1;
            } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
                count_o += tmp_o[i + 1] + 1;
                tmp_o[i + 1] = -1;
            }
        }
        for (int i = 0; i < N; i++) {
            tmp_e[i + 1] = tmp_e[i] + A[i];
            if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
                count_e += 1 - tmp_e[i + 1];
                tmp_e[i + 1] = 1;
            } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
                count_e += tmp_e[i + 1] + 1;
                tmp_e[i + 1] = -1;
            }
        }
        System.out.println(Math.min(count_o, count_e));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int[] tmp_o = new int[N + 1];
        int[] tmp_e = new int[N + 1];
        int count_o = 0;
        int count_e = 0;
        for (int i = 0; i < N; i++) {
            tmp_o[i + 1] = tmp_o[i] + A[i];
            if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
                count_o += 1 - tmp_o[i + 1];
                tmp_o[i + 1] = 1;
            } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
                count_o += tmp_o[i + 1] + 1;
                tmp_o[i + 1] = -1;
            }
        }
        for (int i = 0; i < N; i++) {
            tmp_e[i + 1] = tmp_e[i] + A[i];
            if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
                count_e += 1 - tmp_e[i + 1];
                tmp_e[i + 1] = 1;
            } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
                count_e += tmp_e[i + 1] + 1;
                tmp_e[i + 1] = -1;
            }
        }
        System.out.println(Math.min(count_o, count_e));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        int[] tmp_o = new int[N + 1];
        int[] tmp_e = new int[N + 1];
        int count_o = 0;
        int count_e = 0;
        for (int i = 0; i < N; i++) {
            tmp_o[i + 1] = tmp_o[i] + A[i];
            if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
                count_o += 1 - tmp_o[i + 1];
                tmp_o[i + 1] = 1;
            } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
                count_o += tmp_o[i + 1] + 1;
                tmp_o[i + 1] = -1;
            }
        }
        for (int i = 0; i < N; i++) {
            tmp_e[i + 1] = tmp_e[i] + A[i];
            if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
                count_e += 1 - tmp_e[i + 1];
                tmp_e[i + 1] = 1;
            } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
                count_e += tmp_e[i + 1] + 1;
                tmp_e[i + 1] = -1;
            }
        }
        System.out.println(Math.min(count_o, count_e));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = scanner.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        int[] tmp_o = new int[N + 1];
        int[] tmp_e = new int[N + 1];
        int count_o = 0;
        int count_e = 0;
        for (int i = 0; i < N; i++) {
            tmp_o[i + 1] = tmp_o[i] + A[i];
            if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
                count_o += 1 - tmp_o[i + 1];
                tmp_o[i + 1] = 1;
            } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
                count_o += tmp_o[i + 1] + 1;
                tmp_o[i + 1] = -1;
            }
        }
        for (int i = 0; i < N; i++) {
            tmp_e[i + 1] = tmp_e[i] + A[i];
            if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
                count_e += 1 - tmp_e[i + 1];
                tmp_e[i + 1] = 1;
            } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
                count_e += tmp_e[i + 1] + 1;
                tmp_e[i + 1] = -1;
            }
        }
        System.out.println(Math.min(count_o, count_e));
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[] A = new int[N];
    for (int i = 0; i < N; i++) {
      A[i] = sc.nextInt();
    }
    int[] tmp_o = new int[N + 1];
    int[] tmp_e = new int[N + 1];
    int count_o = 0;
    int count_e = 0;
    for (int i = 0; i < N; i++) {
      tmp_o[i + 1] = tmp_o[i] + A[i];
      if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
        count_o += 1 - tmp_o[i + 1];
        tmp_o[i + 1] = 1;
      } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
        count_o += tmp_o[i + 1] + 1;
        tmp_o[i + 1] = -1;
      }
    }
    for (int i = 0; i < N; i++) {
      tmp_e[i + 1] = tmp_e[i] + A[i];
      if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
        count_e += 1 - tmp_e[i + 1];
        tmp_e[i + 1] = 1;
      } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
        count_e += tmp_e[i + 1] + 1;
        tmp_e[i + 1] = -1;
      }
    }
    System.out.println(Math.min(count_o, count_e));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = scanner.nextInt();
        }
        int[] tmp_o = new int[N + 1];
        int[] tmp_e = new int[N + 1];
        int count_o = 0;
        int count_e = 0;
        for (int i = 0; i < N; i++) {
            tmp_o[i + 1] = tmp_o[i] + A[i];
            if (i % 2 == 1 && tmp_o[i + 1] <= 0) {
                count_o += 1 - tmp_o[i + 1];
                tmp_o[i + 1] = 1;
            } else if (i % 2 == 0 && tmp_o[i + 1] >= 0) {
                count_o += tmp_o[i + 1] + 1;
                tmp_o[i + 1] = -1;
            }
        }
        for (int i = 0; i < N; i++) {
            tmp_e[i + 1] = tmp_e[i] + A[i];
            if (i % 2 == 0 && tmp_e[i + 1] <= 0) {
                count_e += 1 - tmp_e[i + 1];
                tmp_e[i + 1] = 1;
            } else if (i % 2 == 1 && tmp_e[i + 1] >= 0) {
                count_e += tmp_e[i + 1] + 1;
                tmp_e[i + 1] = -1;
            }
        }
        System.out.println(Math.min(count_o, count_e));
    }
}
[/JAVA]
======
