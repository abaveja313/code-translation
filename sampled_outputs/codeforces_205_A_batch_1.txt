  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = scanner.nextInt();
    }
    if (countMin(time) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(findMin(time) + 1);
    }
  }
  
  private static int countMin(int[] time) {
    int count = 0;
    for (int i = 0; i < time.length; i++) {
      if (time[i] == findMin(time)) {
        count++;
      }
    }
    return count;
  }
  
  private static int findMin(int[] time) {
    int min = Integer.MAX_VALUE;
    for (int i = 0; i < time.length; i++) {
      if (time[i] < min) {
        min = time[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        int minTime = getMinTime(time);
        if (getFrequency(time, minTime) >= 2) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(getIndex(time, minTime) + 1);
        }
    }

    private static int getMinTime(int[] time) {
        int minTime = time[0];
        for (int i = 1; i < time.length; i++) {
            if (time[i] < minTime) {
                minTime = time[i];
            }
        }
        return minTime;
    }

    private static int getFrequency(int[] time, int value) {
        int frequency = 0;
        for (int i = 0; i < time.length; i++) {
            if (time[i] == value) {
                frequency++;
            }
        }
        return frequency;
    }

    private static int getIndex(int[] time, int value) {
        for (int i = 0; i < time.length; i++) {
            if (time[i] == value) {
                return i;
            }
        }
        return -1;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        int minTime = time[0];
        int minTimeIndex = 0;
        for (int i = 1; i < n; i++) {
            if (time[i] < minTime) {
                minTime = time[i];
                minTimeIndex = i;
            }
        }
        if (minTimeIndex == 0) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(minTimeIndex + 1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        int minTime = time[0];
        int minTimeIndex = 0;
        for (int i = 1; i < n; i++) {
            if (time[i] < minTime) {
                minTime = time[i];
                minTimeIndex = i;
            }
        }
        if (minTimeIndex == 0) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(minTimeIndex + 1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = scanner.nextInt();
    }
    if (countMin(time) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(findMinIndex(time) + 1);
    }
  }

  private static int countMin(int[] arr) {
    int min = arr[0];
    int count = 0;
    for (int i = 1; i < arr.length; i++) {
      if (arr[i] < min) {
        count++;
      }
    }
    return count;
  }

  private static int findMinIndex(int[] arr) {
    int min = arr[0];
    int minIndex = 0;
    for (int i = 1; i < arr.length; i++) {
      if (arr[i] < min) {
        min = arr[i];
        minIndex = i;
      }
    }
    return minIndex;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> time = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      time.add(scanner.nextInt());
    }
    if (Collections.frequency(time, Collections.min(time)) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(time.indexOf(Collections.min(time)) + 1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        if (count(time, min(time)) >= 2) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(index(time, min(time)) + 1);
        }
    }
    
    public static int count(int[] arr, int element) {
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == element) {
                count++;
            }
        }
        return count;
    }
    
    public static int index(int[] arr, int element) {
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == element) {
                return i;
            }
        }
        return -1;
    }
}
[/JAVA]

This is a basic implementation of the Python code in Java. The `count` method is implemented using a for loop that iterates over the array and counts the number of elements that are equal to the given element. The `index` method is implemented using a for loop that iterates over the array and returns the index of the first element that is equal to the given element.

The `main` method first reads in the input from the user and stores it in an array. It then uses the `count` and `index` methods to determine whether the minimum element appears at least twice, and if so, prints "Still Rozdil". If not, it prints the index of the minimum element plus 1.

Note that this implementation assumes that the input array is non-empty and that the minimum element appears at least once. If either of these assumptions is not true, the code may produce incorrect results or throw an exception.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = scanner.nextInt();
    }
    if (countMin(time) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(findMin(time) + 1);
    }
  }

  private static int countMin(int[] time) {
    int min = Integer.MAX_VALUE;
    int count = 0;
    for (int t : time) {
      if (t < min) {
        min = t;
        count++;
      }
    }
    return count;
  }

  private static int findMin(int[] time) {
    int min = Integer.MAX_VALUE;
    int index = -1;
    for (int i = 0; i < time.length; i++) {
      if (time[i] < min) {
        min = time[i];
        index = i;
      }
    }
    return index;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = scanner.nextInt();
    }
    int minTime = time[0];
    int minTimeIndex = 0;
    for (int i = 1; i < n; i++) {
      if (time[i] < minTime) {
        minTime = time[i];
        minTimeIndex = i;
      }
    }
    if (time.length - time.indexOf(minTime) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(minTimeIndex + 1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        if (countMin(time) >= 2) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(findMin(time) + 1);
        }
    }

    private static int countMin(int[] time) {
        int count = 0;
        for (int i = 0; i < time.length; i++) {
            if (time[i] == findMin(time)) {
                count++;
            }
        }
        return count;
    }

    private static int findMin(int[] time) {
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < time.length; i++) {
            if (time[i] < min) {
                min = time[i];
            }
        }
        return min;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = scanner.nextInt();
    }
    int minTime = time[0];
    int minTimeCount = 1;
    for (int i = 1; i < n; i++) {
      if (time[i] < minTime) {
        minTime = time[i];
        minTimeCount = 1;
      } else if (time[i] == minTime) {
        minTimeCount++;
      }
    }
    if (minTimeCount >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(minTimeCount);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        if (countMin(time) >= 2) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(findMin(time) + 1);
        }
    }

    private static int countMin(int[] time) {
        int min = time[0];
        int count = 0;
        for (int i = 1; i < time.length; i++) {
            if (time[i] == min) {
                count++;
            }
        }
        return count;
    }

    private static int findMin(int[] time) {
        int min = time[0];
        for (int i = 1; i < time.length; i++) {
            if (time[i] < min) {
                min = time[i];
            }
        }
        return min;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = sc.nextInt();
    }
    int minTime = time[0];
    for (int i = 1; i < n; i++) {
      if (time[i] < minTime) {
        minTime = time[i];
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      if (time[i] == minTime) {
        count++;
      }
    }
    if (count >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(time.indexOf(minTime) + 1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        if (getMinCount(time) >= 2) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(getMinIndex(time) + 1);
        }
    }
    
    private static int getMinCount(int[] time) {
        int min = time[0];
        int count = 0;
        for (int i = 1; i < time.length; i++) {
            if (time[i] == min) {
                count++;
            }
        }
        return count;
    }
    
    private static int getMinIndex(int[] time) {
        int min = time[0];
        int index = 0;
        for (int i = 1; i < time.length; i++) {
            if (time[i] < min) {
                min = time[i];
                index = i;
            }
        }
        return index;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = sc.nextInt();
    }
    if (countMin(time) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(findMin(time) + 1);
    }
  }

  private static int countMin(int[] time) {
    int min = time[0];
    int count = 0;
    for (int i = 0; i < time.length; i++) {
      if (time[i] == min) {
        count++;
      }
    }
    return count;
  }

  private static int findMin(int[] time) {
    int min = time[0];
    for (int i = 0; i < time.length; i++) {
      if (time[i] < min) {
        min = time[i];
      }
    }
    return min;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = sc.nextInt();
    }
    if (getMinCount(time) >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(getMinIndex(time) + 1);
    }
  }

  private static int getMinCount(int[] time) {
    int min = time[0];
    int count = 0;
    for (int i = 0; i < time.length; i++) {
      if (time[i] == min) {
        count++;
      }
    }
    return count;
  }

  private static int getMinIndex(int[] time) {
    int min = time[0];
    int index = 0;
    for (int i = 0; i < time.length; i++) {
      if (time[i] < min) {
        min = time[i];
        index = i;
      }
    }
    return index;
  }
}
[/JAVA]

This Java code is functionally identical to the Python code, with the exception of the `getMinCount` and `getMinIndex` methods, which are used to get the minimum value and its index in the `time` array, respectively. The `getMinCount` method counts the number of elements in the `time` array that are equal to the minimum value, while the `getMinIndex` method finds the index of the minimum value in the `time` array.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        int minTime = time[0];
        int minTimeIndex = 0;
        for (int i = 1; i < n; i++) {
            if (time[i] < minTime) {
                minTime = time[i];
                minTimeIndex = i;
            }
        }
        if (minTimeIndex == 0) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(minTimeIndex + 1);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> time = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      time.add(scanner.nextInt());
    }
    if (time.stream().filter(x -> x == time.stream().min(Integer::compare).get()).count() >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(time.indexOf(time.stream().min(Integer::compare).get()) + 1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] time = new int[n];
        for (int i = 0; i < n; i++) {
            time[i] = scanner.nextInt();
        }
        if (countMin(time) >= 2) {
            System.out.println("Still Rozdil");
        } else {
            System.out.println(indexOfMin(time) + 1);
        }
    }

    private static int countMin(int[] time) {
        int count = 0;
        for (int i = 0; i < time.length; i++) {
            if (time[i] == min(time)) {
                count++;
            }
        }
        return count;
    }

    private static int min(int[] time) {
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < time.length; i++) {
            if (time[i] < min) {
                min = time[i];
            }
        }
        return min;
    }

    private static int indexOfMin(int[] time) {
        int index = 0;
        for (int i = 0; i < time.length; i++) {
            if (time[i] == min(time)) {
                index = i;
                break;
            }
        }
        return index;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] time = new int[n];
    for (int i = 0; i < n; i++) {
      time[i] = scanner.nextInt();
    }
    int minTime = time[0];
    int minTimeCount = 1;
    for (int i = 1; i < n; i++) {
      if (time[i] < minTime) {
        minTime = time[i];
        minTimeCount = 1;
      } else if (time[i] == minTime) {
        minTimeCount++;
      }
    }
    if (minTimeCount >= 2) {
      System.out.println("Still Rozdil");
    } else {
      System.out.println(minTimeCount + 1);
    }
  }
}
[/JAVA]
======
