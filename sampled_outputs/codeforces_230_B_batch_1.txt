  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = sc.nextInt();
        }
        int ub = (int) Math.sqrt(Math.max(m)) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i <= ub; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = sc.nextInt();
        }

        int ub = (int) Math.sqrt(Math.max(m)) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i < ub + 1; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;

        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(m[n - 1]) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = scanner.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = scanner.nextInt();
        }
        int ub = (int) Math.sqrt(m[n - 1]) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i <= ub; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = scanner.nextInt();
        }
        int ub = (int) Math.sqrt(m[n - 1]) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i <= ub; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = scanner.nextInt();
        }
        int ub = (int) Math.sqrt(Math.max(m)) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i < ub + 1; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = scanner.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = sc.nextInt();
        }
        int ub = (int) Math.sqrt(Math.max(m)) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i <= ub; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(m[n - 1]) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = scanner.nextInt();
    }
    int ub = (int) Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int) Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int)Math.sqrt(m[n - 1]) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i < ub + 1; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int)Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] m = new int[n];
    for (int i = 0; i < n; i++) {
      m[i] = sc.nextInt();
    }
    int ub = (int)Math.sqrt(Math.max(m)) + 1;
    boolean[] isPrimes = new boolean[ub];
    for (int i = 2; i <= ub; i++) {
      if (isPrimes[i - 1]) {
        int j = 2;
        while (j * i <= ub) {
          isPrimes[j * i - 1] = false;
          j++;
        }
      }
    }
    isPrimes[0] = false;
    for (int k : m) {
      int div = (int)Math.sqrt(k);
      if (div * div == k) {
        if (isPrimes[div - 1]) {
          System.out.println("YES");
        } else {
          System.out.println("NO");
        }
      } else {
        System.out.println("NO");
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = sc.nextInt();
        }
        int ub = (int) Math.sqrt(Math.max(m)) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i <= ub; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = scanner.nextInt();
        }
        int ub = (int) Math.sqrt(Math.max(m)) + 1;
        boolean[] isPrimes = new boolean[ub];
        for (int i = 2; i <= ub; i++) {
            if (isPrimes[i - 1]) {
                int j = 2;
                while (j * i <= ub) {
                    isPrimes[j * i - 1] = false;
                    j++;
                }
            }
        }
        isPrimes[0] = false;
        for (int k : m) {
            int div = (int) Math.sqrt(k);
            if (div * div == k) {
                if (isPrimes[div - 1]) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            } else {
                System.out.println("NO");
            }
        }
    }
}
[/JAVA]
======
