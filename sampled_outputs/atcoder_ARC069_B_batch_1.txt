  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      if (s.charAt(i) == 'o') {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean first : new boolean[] {true, false}) {
      for (boolean second : new boolean[] {true, false}) {
        solve(first, second);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      if (s.charAt(i) == 'o') {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.nextLine();

        boolean[] sheep = new boolean[n];
        sheep[0] = s.charAt(0) == 'o';
        sheep[1] = s.charAt(1) == 'o';

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }

        boolean[] fir = new boolean[] { true, false };
        boolean[] sec = new boolean[] { true, false };

        for (boolean i : fir) {
            for (boolean j : sec) {
                solve(i, j);
            }
        }

        System.out.println(-1);
    }

    public static void solve(boolean first, boolean second) {
        boolean[] sheep = new boolean[n];
        sheep[0] = first;
        sheep[1] = second;

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    boolean[] fir = {true, false};
    boolean[] sec = {true, false};

    for (boolean i : fir) {
      for (boolean j : sec) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    boolean[] fir = new boolean[] { true, false };
    boolean[] sec = new boolean[] { true, false };

    for (boolean i : fir) {
      for (boolean j : sec) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] { true, false }) {
      for (boolean j : new boolean[] { true, false }) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.nextLine();

        boolean[] sheep = new boolean[n];
        sheep[0] = s.charAt(0) == 'o';
        sheep[1] = s.charAt(1) == 'o';

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            boolean rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }

        boolean[] fir = {true, false};
        boolean[] sec = {true, false};

        for (boolean i : fir) {
            for (boolean j : sec) {
                solve(i, j);
            }
        }

        System.out.println(-1);
    }

    private static void solve(boolean first, boolean second) {
        boolean[] sheep = new boolean[n];
        sheep[0] = first;
        sheep[1] = second;

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            boolean rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] {true, false}) {
      for (boolean j : new boolean[] {true, false}) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.nextLine();

        boolean[] sheep = new boolean[n];
        sheep[0] = s.charAt(0) == 'o';
        sheep[1] = s.charAt(1) == 'o';

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            boolean rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }

        boolean[] fir = { true, false };
        boolean[] sec = { true, false };

        for (boolean i : fir) {
            for (boolean j : sec) {
                solve(i, j);
            }
        }

        System.out.println(-1);
    }

    private static void solve(boolean first, boolean second) {
        boolean[] sheep = new boolean[n];
        sheep[0] = first;
        sheep[1] = second;

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            boolean rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] { true, false }) {
      for (boolean j : new boolean[] { true, false }) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  public static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] {true, false}) {
      for (boolean j : new boolean[] {true, false}) {
        solve(i, j);
      }
    }
    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      if (s.charAt(i) == 'o') {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] != rep && same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] {true, false}) {
      for (boolean j : new boolean[] {true, false}) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      if (s.charAt(i) == 'o') {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] != rep && same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    boolean[] fir = new boolean[] {true, false};
    boolean[] sec = new boolean[] {true, false};

    for (boolean i : fir) {
      for (boolean j : sec) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  public static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] {true, false}) {
      for (boolean j : new boolean[] {true, false}) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] { true, false }) {
      for (boolean j : new boolean[] { true, false }) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    boolean[] fir = new boolean[] {true, false};
    boolean[] sec = new boolean[] {true, false};

    for (boolean i : fir) {
      for (boolean j : sec) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    String s = scanner.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    boolean[] fir = new boolean[] {true, false};
    boolean[] sec = new boolean[] {true, false};

    for (boolean i : fir) {
      for (boolean j : sec) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String s = sc.next();

        boolean[] sheep = new boolean[n];
        sheep[0] = s.charAt(0) == 'o';
        sheep[1] = s.charAt(1) == 'o';

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            boolean rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }

        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 2; j++) {
                solve(i, j);
            }
        }

        System.out.println(-1);
    }

    public static void solve(boolean first, boolean second) {
        boolean[] sheep = new boolean[n];
        sheep[0] = first;
        sheep[1] = second;

        for (int i = 2; i < n; i++) {
            boolean rep = s.charAt(i) == 'o';
            if (!rep ^ sheep[i - 1]) {
                sheep[i] = sheep[i - 1];
            } else {
                sheep[i] = !sheep[i - 1];
            }
        }

        if (sheep[0] == sheep[n - 1]) {
            boolean rep = s.charAt(0) == 'o';
            boolean same = sheep[n - 2] == sheep[1];
            if (sheep[0] ^ rep != same) {
                for (int i = 0; i < n - 1; i++) {
                    if (sheep[i]) {
                        System.out.print("S");
                    } else {
                        System.out.print("W");
                    }
                }
                System.exit(0);
            }
        }
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.nextLine();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] {true, false}) {
      for (boolean j : new boolean[] {true, false}) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  public static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    boolean[] fir = {true, false};
    boolean[] sec = {true, false};

    for (boolean i : fir) {
      for (boolean j : sec) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  public static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    String s = sc.next();

    boolean[] sheep = new boolean[n];
    sheep[0] = s.charAt(0) == 'o';
    sheep[1] = s.charAt(1) == 'o';

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }

    for (boolean i : new boolean[] {true, false}) {
      for (boolean j : new boolean[] {true, false}) {
        solve(i, j);
      }
    }

    System.out.println(-1);
  }

  private static void solve(boolean first, boolean second) {
    boolean[] sheep = new boolean[n];
    sheep[0] = first;
    sheep[1] = second;

    for (int i = 2; i < n; i++) {
      boolean rep = s.charAt(i) == 'o';
      if (!rep ^ sheep[i - 1]) {
        sheep[i] = sheep[i - 1];
      } else {
        sheep[i] = !sheep[i - 1];
      }
    }

    if (sheep[0] == sheep[n - 1]) {
      boolean rep = s.charAt(0) == 'o';
      boolean same = sheep[n - 2] == sheep[1];
      if (sheep[0] ^ rep != same) {
        for (int i = 0; i < n - 1; i++) {
          if (sheep[i]) {
            System.out.print("S");
          } else {
            System.out.print("W");
          }
        }
        System.exit(0);
      }
    }
  }
}

[/JAVA]
======
