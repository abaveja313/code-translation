  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.nextLine();
    int[] l1 = new int[nick];
    int[] l2 = new int[sam.length() - nick];
    for (int i = 0; i < nick; i++) {
      l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    Arrays.sort(l1);
    Arrays.sort(l2);
    if (l1[0] == l2[0]) {
      System.out.println("NO");
      return;
    }
    boolean g = l1[0] > l2[0];
    for (int i = 1; i < nick; i++) {
      if (g && l1[i] > l2[i]) {
        continue;
      } else if (!g && l1[i] < l2[i]) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    int[] l1 = new int[nick];
    int[] l2 = new int[sam.length() - nick];
    for (int i = 0; i < nick; i++) {
      l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    Arrays.sort(l1);
    Arrays.sort(l2);
    if (l1[0] == l2[0]) {
      System.out.println("NO");
      return;
    }
    boolean g = l1[0] > l2[0];
    for (int i = 1; i < nick; i++) {
      if (g && l1[i] > l2[i]) {
        continue;
      } else if (!g && l1[i] < l2[i]) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int nick = scanner.nextInt();
        String sam = scanner.next();
        List<Integer> l1 = new ArrayList<>();
        List<Integer> l2 = new ArrayList<>();
        for (int i = 0; i < nick; i++) {
            l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
        }
        for (int i = nick; i < sam.length(); i++) {
            l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
        }
        Collections.sort(l1);
        Collections.sort(l2);
        if (l1.get(0) == l2.get(0)) {
            System.out.println("NO");
            return;
        }
        boolean g = l1.get(0) > l2.get(0);
        for (int i = 1; i < nick; i++) {
            if (g && l1.get(i) > l2.get(i)) {
                continue;
            } else if (!g && l1.get(i) < l2.get(i)) {
                continue;
            } else {
                System.out.println("NO");
                return;
            }
        }
        System.out.println("YES");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int nick = scanner.nextInt();
        String sam = scanner.next();

        int[] l1 = new int[nick];
        int[] l2 = new int[sam.length() - nick];

        for (int i = 0; i < nick; i++) {
            l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
        }

        for (int i = nick; i < sam.length(); i++) {
            l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
        }

        Arrays.sort(l1);
        Arrays.sort(l2);

        if (l1[0] == l2[0]) {
            System.out.println("NO");
            return;
        }

        boolean g = l1[0] > l2[0];

        for (int i = 1; i < nick; i++) {
            if (g && l1[i] > l2[i]) {
                continue;
            } else if (!g && l1[i] < l2[i]) {
                continue;
            } else {
                System.out.println("NO");
                return;
            }
        }

        System.out.println("YES");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Character.getNumericValue(sam.charAt(i)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Character.getNumericValue(sam.charAt(i)));
    }
    l1.sort(Comparator.naturalOrder());
    l2.sort(Comparator.naturalOrder());
    if (l1.get(0) != l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(sam.substring(i, i + 1)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(sam.substring(i, i + 1)));
    }
    Collections.sort(l1);
    Collections.sort(l2);
    if (l1.get(0) == l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    int[] l1 = new int[nick];
    int[] l2 = new int[sam.length() - nick];
    for (int i = 0; i < nick; i++) {
      l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    Arrays.sort(l1);
    Arrays.sort(l2);
    if (l1[0] == l2[0]) {
      System.out.println("NO");
      return;
    }
    boolean g = l1[0] > l2[0];
    for (int i = 1; i < nick; i++) {
      if (g && l1[i] > l2[i]) {
        continue;
      } else if (!g && l1[i] < l2[i]) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int nick = scanner.nextInt();
        String sam = scanner.next();
        List<Integer> l1 = new ArrayList<>();
        List<Integer> l2 = new ArrayList<>();
        for (int i = 0; i < nick; i++) {
            l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
        }
        for (int i = nick; i < sam.length(); i++) {
            l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
        }
        l1.sort(Comparator.naturalOrder());
        l2.sort(Comparator.naturalOrder());
        if (l1.get(0) != l2.get(0)) {
            System.out.println("NO");
            return;
        }
        boolean g = l1.get(0) > l2.get(0);
        for (int i = 1; i < nick; i++) {
            if (g && l1.get(i) > l2.get(i)) {
                continue;
            } else if (!g && l1.get(i) < l2.get(i)) {
                continue;
            } else {
                System.out.println("NO");
                return;
            }
        }
        System.out.println("YES");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int nick = sc.nextInt();
    String sam = sc.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    l1.sort(Comparator.naturalOrder());
    l2.sort(Comparator.naturalOrder());
    if (l1.get(0) != l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(sam.charAt(i) + ""));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(sam.charAt(i) + ""));
    }
    Collections.sort(l1);
    Collections.sort(l2);
    if (l1.get(0) != l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int nick = sc.nextInt();
    String sam = sc.next();
    int[] l1 = new int[nick];
    int[] l2 = new int[sam.length() - nick];
    for (int i = 0; i < nick; i++) {
      l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
    }
    Arrays.sort(l1);
    Arrays.sort(l2);
    if (l1[0] == l2[0]) {
      System.out.println("NO");
      return;
    }
    boolean g = l1[0] > l2[0];
    for (int i = 1; i < nick; i++) {
      if (g && l1[i] > l2[i]) {
        continue;
      } else if (!g && l1[i] < l2[i]) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    l1.sort(Comparator.naturalOrder());
    l2.sort(Comparator.naturalOrder());
    if (l1.get(0) == l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(sam.substring(i, i + 1)));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(sam.substring(i, i + 1)));
    }
    l1.sort(Comparator.naturalOrder());
    l2.sort(Comparator.naturalOrder());
    if (l1.get(0).equals(l2.get(0))) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(sam.charAt(i) + ""));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(sam.charAt(i) + ""));
    }
    Collections.sort(l1);
    Collections.sort(l2);
    if (l1.get(0) == l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    Collections.sort(l1);
    Collections.sort(l2);
    if (l1.get(0) == l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int nick = sc.nextInt();
    String sam = sc.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(sam.charAt(i) + ""));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(sam.charAt(i) + ""));
    }
    l1.sort(Comparator.naturalOrder());
    l2.sort(Comparator.naturalOrder());
    if (l1.get(0).equals(l2.get(0))) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int nick = scanner.nextInt();
        String sam = scanner.next();
        int[] l1 = new int[nick];
        int[] l2 = new int[sam.length() - nick];
        for (int i = 0; i < nick; i++) {
            l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
        }
        for (int i = nick; i < sam.length(); i++) {
            l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
        }
        Arrays.sort(l1);
        Arrays.sort(l2);
        if (l1[0] != l2[0]) {
            System.out.println("NO");
            return;
        }
        boolean g = l1[0] > l2[0];
        for (int i = 1; i < nick; i++) {
            if (g && l1[i] > l2[i]) {
                continue;
            } else if (!g && l1[i] < l2[i]) {
                continue;
            } else {
                System.out.println("NO");
                return;
            }
        }
        System.out.println("YES");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int nick = sc.nextInt();
        String sam = sc.next();
        int[] l1 = new int[nick];
        int[] l2 = new int[sam.length() - nick];
        for (int i = 0; i < nick; i++) {
            l1[i] = Integer.parseInt(String.valueOf(sam.charAt(i)));
        }
        for (int i = nick; i < sam.length(); i++) {
            l2[i - nick] = Integer.parseInt(String.valueOf(sam.charAt(i)));
        }
        Arrays.sort(l1);
        Arrays.sort(l2);
        if (l1[0] == l2[0]) {
            System.out.println("NO");
            return;
        }
        boolean g = l1[0] > l2[0];
        for (int i = 1; i < nick; i++) {
            if (g && l1[i] > l2[i]) {
                continue;
            } else if (!g && l1[i] < l2[i]) {
                continue;
            } else {
                System.out.println("NO");
                return;
            }
        }
        System.out.println("YES");
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int nick = scanner.nextInt();
    String sam = scanner.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    l1.sort(Comparator.naturalOrder());
    l2.sort(Comparator.naturalOrder());
    if (l1.get(0).equals(l2.get(0))) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int nick = sc.nextInt();
    String sam = sc.next();
    List<Integer> l1 = new ArrayList<>();
    List<Integer> l2 = new ArrayList<>();
    for (int i = 0; i < nick; i++) {
      l1.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    for (int i = nick; i < sam.length(); i++) {
      l2.add(Integer.parseInt(String.valueOf(sam.charAt(i))));
    }
    Collections.sort(l1);
    Collections.sort(l2);
    if (l1.get(0) == l2.get(0)) {
      System.out.println("NO");
      return;
    }
    boolean g = l1.get(0) > l2.get(0);
    for (int i = 1; i < nick; i++) {
      if (g && l1.get(i) > l2.get(i)) {
        continue;
      } else if (!g && l1.get(i) < l2.get(i)) {
        continue;
      } else {
        System.out.println("NO");
        return;
      }
    }
    System.out.println("YES");
  }
}
[/JAVA]
======
