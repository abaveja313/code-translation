  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int l : ms) {
      int r = l[1];
      int tt = r - l + 1;
      l -= 1;
      r += 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i][0] = l;
          ms[i][1] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i][0];
      int r = ms[i][1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.length; i++) {
      int tt = ms[i][1] - ms[i][0] + 1;
      int l = ms[i][0] - 1;
      int r = ms[i][1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          int x = A[l];
        }
        if (r < n) {
          int x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          int x = A[l];
        }
        if (r < n) {
          int x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          int x = A[l];
        }
        if (r < n) {
          int x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i][0] = l;
          ms[i][1] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.length; i++) {
      int tt = ms[i][1] - ms[i][0] + 1;
      int l = ms[i][0] - 1;
      int r = ms[i][1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    ArrayList<Integer> ms = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms.add(l);
          ms.add(j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.size(); i += 2) {
      int l = ms.get(i);
      int r = ms.get(i + 1);
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i];
      int r = ms[i];
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans = Math.max(ans, c);
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i];
      int r = ms[i];
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans = Math.max(ans, c);
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.length; i++) {
      int l = ms[i][0];
      int r = ms[i][1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
