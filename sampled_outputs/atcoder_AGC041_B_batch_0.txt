  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }
    
    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }

        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }
    
    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p - 1]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p - 1) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }
    
    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }

        System.out.println(n - ok);
    }

    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p - 1]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p - 1) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int v = sc.nextInt();
    int p = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    Arrays.sort(a);

    int ok = n - 1;
    int ng = -1;
    while (Math.abs(ng - ok) > 1) {
      int mid = (ng + ok) / 2;
      if (solve(mid)) {
        ok = mid;
      } else {
        ng = mid;
      }
    }
    System.out.println(n - ok);
  }

  public static boolean solve(int ind) {
    if (a[ind] + m < a[n - p - 1]) {
      return false;
    }
    int thr = a[ind] + m;
    int[] votes = new int[n];
    for (int i = 0; i < n; i++) {
      if (i <= ind || i > n - p - 1) {
        votes[i] = m;
      } else {
        votes[i] = thr - a[i];
      }
    }
    int sm = 0;
    for (int i = 0; i < n; i++) {
      sm += votes[i];
    }
    return sm >= m * v;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int m = scanner.nextInt();
    int v = scanner.nextInt();
    int p = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    Arrays.sort(a);

    int ok = n - 1;
    int ng = -1;
    while (Math.abs(ng - ok) > 1) {
      int mid = (ng + ok) / 2;
      if (solve(mid)) {
        ok = mid;
      } else {
        ng = mid;
      }
    }
    System.out.println(n - ok);
  }

  private static boolean solve(int ind) {
    if (a[ind] + m < a[n - p]) {
      return false;
    }
    int thr = a[ind] + m;
    int[] votes = new int[n];
    for (int i = 0; i < n; i++) {
      if (i <= ind || i > n - p) {
        votes[i] = m;
      } else {
        votes[i] = thr - a[i];
      }
    }
    int sm = 0;
    for (int i = 0; i < n; i++) {
      sm += votes[i];
    }
    return sm >= m * v;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int vote : votes) {
            sm += vote;
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p - 1]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }

        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p - 1]) {
            return false;
        }

        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }

        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }

        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);

        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p - 1]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p - 1) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    int v = sc.nextInt();
    int p = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    Arrays.sort(a);
    int ok = n - 1;
    int ng = -1;
    while (Math.abs(ng - ok) > 1) {
      int mid = (ng + ok) / 2;
      if (solve(mid)) {
        ok = mid;
      } else {
        ng = mid;
      }
    }
    System.out.println(n - ok);
  }

  private static boolean solve(int ind) {
    if (a[ind] + m < a[n - p - 1]) {
      return false;
    }
    int thr = a[ind] + m;
    int[] votes = new int[n];
    for (int i = 0; i < n; i++) {
      if (i <= ind || i > n - p) {
        votes[i] = m;
      } else {
        votes[i] = thr - a[i];
      }
    }
    int sm = Arrays.stream(votes).sum();
    return sm >= m * v;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    public static boolean solve(int ind) {
        if (a[ind] + m < a[n - p]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int v = sc.nextInt();
        int p = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        Arrays.sort(a);
        int ok = n - 1;
        int ng = -1;
        while (Math.abs(ng - ok) > 1) {
            int mid = (ng + ok) / 2;
            if (solve(mid)) {
                ok = mid;
            } else {
                ng = mid;
            }
        }
        System.out.println(n - ok);
    }

    private static boolean solve(int ind) {
        if (a[ind] + m < a[n - p - 1]) {
            return false;
        }
        int thr = a[ind] + m;
        int[] votes = new int[n];
        for (int i = 0; i < n; i++) {
            if (i <= ind || i > n - p - 1) {
                votes[i] = m;
            } else {
                votes[i] = thr - a[i];
            }
        }
        int sm = 0;
        for (int i = 0; i < n; i++) {
            sm += votes[i];
        }
        return sm >= m * v;
    }
}

[/JAVA]
======
