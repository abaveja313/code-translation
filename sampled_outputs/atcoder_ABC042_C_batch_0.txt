  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>(Arrays.asList(scanner.nextLine().split(" ")));
    int num = n;
    while (true) {
      if (d.stream().allMatch(s -> Integer.parseInt(s) % k == 0)) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        Set<String> d = new HashSet<>();
        for (int i = 0; i < k; i++) {
            d.add(scanner.next());
        }
        int num = n;
        while (true) {
            if (d.containsAll(String.valueOf(num).split(""))) {
                System.out.println(num);
                break;
            }
            num++;
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        Set<String> d = new HashSet<>();
        for (int i = 0; i < k; i++) {
            d.add(scanner.next());
        }
        int num = n;
        while (true) {
            if (d.contains(String.valueOf(num))) {
                System.out.println(num);
                break;
            }
            num++;
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).chars().mapToObj(c -> String.valueOf((char) c)).collect(Collectors.toSet()))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]

This is a straightforward translation of the Python code to Java. The `map` function is replaced by a `Stream` and the `set` method is replaced by the `containsAll` method of the `Set` interface. The `list` function is not needed in Java, as the `String` class has a `chars` method that returns a `Stream` of characters. The `collect` method is used to convert the `Stream` of characters to a `Set`.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        Set<String> d = new HashSet<>();
        for (int i = 0; i < k; i++) {
            d.add(scanner.next());
        }
        int num = n;
        while (true) {
            if (d.containsAll(String.valueOf(num).split(""))) {
                System.out.println(num);
                break;
            }
            num++;
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        Set<String> d = new HashSet<>();
        for (int i = 0; i < k; i++) {
            d.add(scanner.next());
        }
        int num = n;
        while (true) {
            if (d.containsAll(String.valueOf(num).chars().mapToObj(c -> Character.toString((char) c)).collect(Collectors.toSet()))) {
                System.out.println(num);
                break;
            }
            num++;
        }
    }
}
[/JAVA]

This is the Java code that achieves the same functionality as the Python code. It uses the `Scanner` class to read input from the user, the `Set` interface and its implementation `HashSet` to store the digits, and the `String.valueOf()` method to convert the integer `num` to a string. The `String.chars()` method is used to get the characters of the string representation of `num`, and the `mapToObj()` method is used to map each character to a string. The `collect()` method is used to collect the mapped characters into a set. Finally, the `containsAll()` method is used to check if the set of characters contains all the characters in the input string.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>(scanner.nextLine().split(" "));
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]

This is the Java code that is equivalent to the Python code. It uses the `Scanner` class to read input, and the `Set` and `HashSet` classes to represent the set of digits. The `String.valueOf(num).split("")` method is used to convert the integer `num` to a string and then split it into individual digits. The `d.containsAll(String.valueOf(num).split(""))` method is used to check if the set `d` contains all the digits in the string representation of `num`. If the condition is true, the program prints `num` and breaks out of the loop. Otherwise, it increments `num` and continues the loop.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(new ArrayList<>(List.of(String.valueOf(num))))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]

This is a straightforward conversion of the Python code to Java. The main differences are:

* In Java, we use the `Scanner` class to read input from the user, rather than the `input()` function in Python.
* In Java, we use the `HashSet` class to represent the set `d`, rather than the `set()` function in Python.
* In Java, we use the `ArrayList` class to represent the list of digits in the number `num`, rather than the `list()` function in Python.
* In Java, we use the `String.valueOf()` method to convert the number `num` to a string, rather than the `str()` function in Python.
* In Java, we use the `Set.containsAll()` method to check if the set `d` contains all the digits in the number `num`, rather than the `&` operator in Python.
* In Java, we use the `System.out.println()` method to print the result, rather than the `print()` function in Python.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        Set<String> d = new HashSet<String>();
        for (int i = 0; i < k; i++) {
            d.add(scanner.next());
        }
        int num = n;
        while (true) {
            if (d.containsAll(getDigits(num))) {
                System.out.println(num);
                break;
            }
            num++;
        }
    }
    
    private static Set<String> getDigits(int num) {
        Set<String> digits = new HashSet<String>();
        while (num > 0) {
            digits.add(String.valueOf(num % 10));
            num /= 10;
        }
        return digits;
    }
}
[/JAVA]

This is a Java implementation of the Python code. It uses the `Scanner` class to read input from the user, and the `Set` and `HashSet` classes to store the digits and the set of digits that are not allowed. The `getDigits` method is used to get the digits of a number as a set of strings. The `containsAll` method is used to check if the set of digits contains all the digits that are not allowed. If the condition is true, the number is printed and the loop is exited. If the condition is false, the number is incremented and the loop continues.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]

Explanation:

1. The first line imports the necessary classes for reading input and creating a set.
2. The next line creates a `Scanner` object to read input from the user.
3. The next two lines read the values of `n` and `k` from the user input.
4. The next line creates an empty set `d` to store the digits that are allowed in the output.
5. The next loop reads `k` strings from the user input and adds them to the set `d`.
6. The next line initializes `num` to `n`.
7. The next loop checks if the current value of `num` contains all the digits in `d`. If it does, it prints `num` and breaks out of the loop.
8. The next line increments `num` and repeats the loop until a valid output is found.

Note that the `String.valueOf(num).split("")` expression is used to convert the integer `num` to a string and then split it into individual characters. This is necessary because the `Set` class in Java only allows objects to be stored, not primitive types like integers.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(sc.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).chars().mapToObj(c -> String.valueOf((char) c)).collect(Collectors.toList()))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]

This is a basic implementation of the Python code in Java. It uses the `Scanner` class to read input from the user, and the `Set` and `HashSet` classes to store the digits and the set of digits that are allowed. The `String.valueOf(num).chars().mapToObj(c -> String.valueOf((char) c)).collect(Collectors.toList())` line is used to convert the number `num` to a list of characters, and then it checks if all the characters in the list are in the set `d`. If they are, it prints the number and breaks out of the loop. Otherwise, it increments `num` and tries again.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        Set<String> d = new HashSet<>();
        for (int i = 0; i < k; i++) {
            d.add(scanner.next());
        }
        int num = n;
        while (true) {
            if (d.containsAll(String.valueOf(num).chars().mapToObj(c -> String.valueOf((char) c)).collect(Collectors.toSet()))) {
                System.out.println(num);
                break;
            }
            num++;
        }
    }
}
[/JAVA]

This is the Java code that is functionally identical to the Python code. The code uses the `Scanner` class to read input from the user, and the `Set` and `HashSet` classes to store the digits and the number. The `String.valueOf(num).chars().mapToObj(c -> String.valueOf((char) c)).collect(Collectors.toSet())` line is used to convert the number to a set of characters, which can be used to check if it contains all the digits. The `d.containsAll(set)` line is used to check if the set of characters contains all the digits. If it does, the number is printed and the loop is broken. If it doesn't, the loop continues and the number is incremented.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.stream().filter(x -> num % x == 0).count() == 0) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    Set<String> d = new HashSet<>();
    for (int i = 0; i < k; i++) {
      d.add(sc.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]

This is the Java code equivalent to the Python code provided. The code first prompts the user to enter two integers, `n` and `k`, and then reads `k` strings from the input and stores them in a set called `d`. The code then initializes a variable `num` to `n` and enters an infinite loop.

In each iteration of the loop, the code checks if the current value of `num` is a member of `d`. If it is, the code prints the value of `num` and breaks out of the loop. If it is not, the code increments `num` by 1 and continues the loop.

The code uses the `Set` class from the Java Collections Framework to store the input strings and the `HashSet` class to create a set of unique strings. The `containsAll` method is used to check if all the characters in the current value of `num` are present in the set `d`.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    Set<String> d = new HashSet<>();
    while (scanner.hasNext()) {
      d.add(scanner.next());
    }
    int num = n;
    while (true) {
      if (d.containsAll(String.valueOf(num).split(""))) {
        System.out.println(num);
        break;
      }
      num++;
    }
  }
}
[/JAVA]
======
