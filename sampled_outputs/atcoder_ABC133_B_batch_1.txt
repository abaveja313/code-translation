  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    ArrayList<ArrayList<Integer>> points = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      ArrayList<Integer> point = new ArrayList<>();
      for (int j = 0; j < d; j++) {
        point.add(sc.nextInt());
      }
      points.add(point);
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double distance = dist(points.get(i), points.get(j));
        if (Math.sqrt(distance) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }

  public static double dist(ArrayList<Integer> x, ArrayList<Integer> y) {
    double tmp = 0.0;
    for (int i = 0; i < x.size(); i++) {
      tmp += Math.pow(x.get(i) - y.get(i), 2);
    }
    return Math.sqrt(tmp);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    List<int[]> points = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      int[] point = new int[d];
      for (int j = 0; j < d; j++) {
        point[j] = scanner.nextInt();
      }
      points.add(point);
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double distance = 0.0;
        for (int k = 0; k < d; k++) {
          distance += Math.pow(points.get(i)[k] - points.get(j)[k], 2);
        }
        if (Math.sqrt(distance) % 1 == 0) {
          count++;
        }
      }
    }

    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }

    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = scanner.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += (points[i][k] - points[j][k]) * (points[i][k] - points[j][k]);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double distance = dist(points[i], points[j]);
        if (Math.sqrt(distance) % 1 == 0) {
          count++;
        }
      }
    }

    System.out.println(count);
  }

  public static double dist(int[] x, int[] y) {
    double tmp = 0.0;
    for (int i = 0; i < x.length; i++) {
      tmp += (x[i] - y[i]) * (x[i] - y[i]);
    }
    return Math.sqrt(tmp);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = scanner.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += (points[i][k] - points[j][k]) * (points[i][k] - points[j][k]);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }
    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int d = sc.nextInt();
        int[][] points = new int[n][d];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < d; j++) {
                points[i][j] = sc.nextInt();
            }
        }

        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                double dist = 0.0;
                for (int k = 0; k < d; k++) {
                    dist += Math.pow(points[i][k] - points[j][k], 2);
                }
                if (Math.sqrt(dist) % 1 == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    List<List<Integer>> points = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      List<Integer> point = new ArrayList<>();
      for (int j = 0; j < d; j++) {
        point.add(scanner.nextInt());
      }
      points.add(point);
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = distance(points.get(i), points.get(j));
        if (Math.floor(dist) == dist) {
          count++;
        }
      }
    }

    System.out.println(count);
  }

  public static double distance(List<Integer> p1, List<Integer> p2) {
    double tmp = 0.0;
    for (int i = 0; i < p1.size(); i++) {
      tmp += Math.pow(p1.get(i) - p2.get(i), 2);
    }
    return Math.sqrt(tmp);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double distance = dist(points[i], points[j]);
        if (Math.round(distance) == distance) {
          count++;
        }
      }
    }

    System.out.println(count);
  }

  private static double dist(int[] x, int[] y) {
    double tmp = 0.0;
    for (int i = 0; i < x.length; i++) {
      tmp += (x[i] - y[i]) * (x[i] - y[i]);
    }
    return Math.sqrt(tmp);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int d = sc.nextInt();
        int[][] points = new int[n][d];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < d; j++) {
                points[i][j] = sc.nextInt();
            }
        }

        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                double dist = 0.0;
                for (int k = 0; k < d; k++) {
                    dist += (points[i][k] - points[j][k]) * (points[i][k] - points[j][k]);
                }
                if (Math.sqrt(dist) % 1 == 0) {
                    count++;
                }
            }
        }

        System.out.println(count);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double dist = 0.0;
        for (int k = 0; k < d; k++) {
          dist += Math.pow(points[i][k] - points[j][k], 2);
        }
        if (Math.sqrt(dist) % 1 == 0) {
          count++;
        }
      }
    }

    System.out.println(count);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.lang.Math;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[][] points = new int[n][d];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < d; j++) {
        points[i][j] = sc.nextInt();
      }
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        double distance = dist(points[i], points[j]);
        if (Math.round(distance) == distance) {
          count++;
        }
      }
    }
    System.out.println(count);
  }

  private static double dist(int[] x, int[] y) {
    double tmp = 0.0;
    for (int i = 0; i < x.length; i++) {
      tmp += (x[i] - y[i]) * (x[i] - y[i]);
    }
    return Math.sqrt(tmp);
  }
}
[/JAVA]
======
