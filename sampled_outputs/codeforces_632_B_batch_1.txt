  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.next().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).reduce(Math::max).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).reduce(Math::max).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.generate(scanner::nextInt).limit(n).toArray();
    String c = scanner.next();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    int result = s + Math.max(0, max1, max2);
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n)
        .filter(i -> c.charAt(i) == 'B')
        .map(i -> p[i])
        .sum();
    int max1 = IntStream.range(0, n)
        .map(i -> v[i])
        .max()
        .orElse(0);
    int max2 = IntStream.range(0, n)
        .map(i -> v[n - 1 - i])
        .max()
        .orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    int result = s + Math.max(0, Math.max(max1, max2));
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? 0 : p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c.charAt(i) == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max(Integer::compare).orElse(0);
    int max2 = Stream.of(v).map(x -> -x).max(Integer::compare).orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n)
                     .map(i -> c[i] == 'B' ? p[i] : 0)
                     .sum();
    int max1 = IntStream.range(0, n)
                        .map(i -> v[i])
                        .max()
                        .orElse(0);
    int max2 = IntStream.range(0, n)
                        .map(i -> v[n - 1 - i])
                        .max()
                        .orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n)
      .map(i -> c.charAt(i) == 'B' ? -p[i] : p[i])
      .toArray();
    int s = IntStream.range(0, n)
      .filter(i -> c.charAt(i) == 'B')
      .map(i -> p[i])
      .sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.next().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
