  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] input = scanner.nextLine().split(" ").map(Integer::parseInt).toArray(int[]::new);
    int n = input[0];
    int d = input[1] - Arrays.stream(input).sum();
    System.out.println(d / 5 + (d < 10 * -n ? 1 : 0));
  }
}
[/JAVA]

Explanation:

* The `Scanner` class is used to read input from the user.
* The `nextLine()` method is used to read a line of input from the user.
* The `split()` method is used to split the input into an array of strings, where each string represents a single number.
* The `map()` method is used to convert each string to an integer.
* The `toArray()` method is used to convert the `Stream` of integers to an array of integers.
* The `sum()` method is used to calculate the sum of all the integers in the array.
* The `Arrays.stream()` method is used to create a `Stream` of integers from the input array.
* The `d / 5` expression is used to calculate the result of the division of `d` by `5`.
* The `d < 10 * -n` expression is used to check if `d` is less than `10` times the negative of `n`.
* The `? 1 : 0` expression is used to return `1` if the condition is true, and `0` otherwise.
* The `System.out.println()` method is used to print the result to the console.
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int d = sc.nextInt();
        d -= sc.nextInt();
        System.out.println((d < 10 * -n) ? d / 5 : -1);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] nums = scanner.nextLine().split(" ").stream().mapToInt(Integer::parseInt).toArray();
    int n = nums[0];
    int d = nums[1];
    d -= Arrays.stream(nums).sum();
    System.out.println((d < 10 * -n) ? d / 5 : -1);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    d -= scanner.nextInt();
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    d -= sc.nextInt();
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }
}
[/JAVA]

Explanation:

* The `import` statement is used to import the `Scanner` class, which is used to read input from the user.
* The `Scanner` class is created using the `new` keyword, and the `System.in` stream is passed as an argument to the constructor. This creates a `Scanner` object that reads input from the console.
* The `nextInt()` method is used to read an integer value from the console, and the value is stored in the `n` and `d` variables.
* The `nextInt()` method is used again to read another integer value from the console, and the value is subtracted from `d`.
* The `d` variable is then compared to `10 * -n`, and the result is used to determine the value that is printed to the console. If `d` is less than `10 * -n`, then the value of `d / 5` is printed. Otherwise, the value `-1` is printed.
* The `main()` method is the entry point of the program, and it takes an array of strings as an argument. In this case, the `main()` method is not used, so it is not included in the Java code.

Note: The `nextInt()` method returns the next token from the input stream, which is a string representation of an integer. The `Integer.parseInt()` method can be used to convert the string to an integer. However, in this case, the `nextInt()` method is used directly to read the integer value from the console, so the `Integer.parseInt()` method is not needed.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] input = scanner.nextLine().split(" ").map(Integer::parseInt).toArray(new int[0]);
    int n = input[0];
    int d = input[1];
    d -= Arrays.stream(input).sum();
    System.out.println(d < 10 * -n ? -1 : d / 5);
  }
}
[/JAVA]

Explanation:

* `import java.util.Scanner;` imports the `Scanner` class from the `java.util` package, which is used to read input from the user.
* `Scanner scanner = new Scanner(System.in);` creates a new `Scanner` object that reads input from the standard input stream (i.e., the user's keyboard).
* `int[] input = scanner.nextLine().split(" ").map(Integer::parseInt).toArray(new int[0]);` reads a line of input from the user, splits it into a list of strings using the space character as a delimiter, maps each string to an integer using the `Integer::parseInt` method, and converts the resulting list of integers into an array using the `toArray` method.
* `int n = input[0];` assigns the first element of the input array to the variable `n`.
* `int d = input[1];` assigns the second element of the input array to the variable `d`.
* `d -= Arrays.stream(input).sum();` subtracts the sum of all elements in the input array from `d`.
* `System.out.println(d < 10 * -n ? -1 : d / 5);` prints the result of the ternary expression `d < 10 * -n ? -1 : d / 5`. If the condition `d < 10 * -n` is true, the expression evaluates to `-1`. Otherwise, it evaluates to `d / 5`.

Note that the `map` method is used to convert each string in the input list to an integer. The `toArray` method is used to convert the resulting list of integers into an array. The `sum` method is used to calculate the sum of all elements in the input array.
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int d = scanner.nextInt();
        d -= scanner.nextInt();
        System.out.println((d >= 10 * -n) ? d / 5 : -1);
    }
}
[/JAVA]

Explanation:

* The `import` statement imports the `Scanner` class from the `java.util` package, which is used to read input from the user.
* The `Solution` class contains the `main` method, which is the entry point of the program.
* The `main` method creates a `Scanner` object called `scanner` to read input from the user.
* The `n` and `d` variables are declared and initialized with the values read from the input using the `scanner` object.
* The `d` variable is updated by subtracting the sum of the next 3 integers read from the input.
* The final result is printed to the console using the `System.out.println` method.

Note: The `map` function in Python is not necessary in Java, as the `Scanner` class provides a way to read input and convert it to the desired data type.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    d -= sum(scanner.nextLine().split(" "));
    System.out.println((d < 10 * -n) ? -1 : d / 5);
  }

  private static int sum(String[] input) {
    int sum = 0;
    for (String s : input) {
      sum += Integer.parseInt(s);
    }
    return sum;
  }
}
[/JAVA]

This is the equivalent Java code to the Python code provided. The `lambda` function is replaced with a method called `sum` that takes a `String[]` as input and returns the sum of the integers in the array. The `map` function is replaced with a `for` loop that iterates over the elements of the array and converts each element to an integer using `Integer.parseInt`. The `input` function is replaced with `Scanner` to read input from the user. The `print` function is replaced with `System.out.println` to print the result to the console.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    d -= sum(arr);
    System.out.println(d < 10 * -n ? d / 5 : -1);
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i : arr) {
      sum += i;
    }
    return sum;
  }
}
[/JAVA]

Explanation:

* The Python code uses the `lambda` function to define an anonymous function that takes no arguments and returns the result of the `map` function. In Java, we can achieve the same result by defining a method that takes no arguments and returns the result of the `map` function.
* The Python code uses the `sum` function to calculate the sum of the elements in the array. In Java, we can achieve the same result by defining a method that takes an array as an argument and returns the sum of its elements.
* The Python code uses the `input` function to read a line of input from the user and split it into a list of integers. In Java, we can achieve the same result by using the `Scanner` class to read a line of input and split it into a list of integers.
* The Python code uses the `print` function to print the result of the calculation. In Java, we can achieve the same result by using the `System.out.println` method to print the result of the calculation.

Note that the Java code uses the `Scanner` class to read input from the user, which is a more robust and flexible way of reading input than the `input` function in Python.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    d -= sum(arr);
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i : arr) {
      sum += i;
    }
    return sum;
  }
}
[/JAVA]

This code is functionally identical to the Python code, with the following changes:

* The `i` function is replaced with a `Scanner` object to read input from the user.
* The `map` function is replaced with a `for` loop to iterate over the input array.
* The `sum` function is defined as a separate method to calculate the sum of the input array.
* The `print` statement is replaced with `System.out.println` to print the output to the console.
* The ternary operator is used to print either `d / 5` or `-1` based on the condition `d < 10 * -n`.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    d -= sum(arr);
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i : arr) {
      sum += i;
    }
    return sum;
  }
}

[/JAVA]

Explanation:

* We first import the `Scanner` class from the `java.util` package to read input from the user.
* We then define a `Solution` class with a `main` method that takes an array of strings as input.
* We use a `Scanner` object to read the input and assign it to variables `n` and `d`.
* We then define an array `arr` of size `n` and read `n` integers into it using a for loop.
* We then calculate the sum of the elements in the array using a for loop and subtract it from `d`.
* We then check if `d` is less than `10 * -n` and print the result accordingly.
* We use the ternary operator to print the result, which is either `d / 5` or `-1` depending on the condition.

Note: The `sum` method is defined as a separate method to avoid code repetition and make the code more readable.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] input = scanner.nextLine().split(" ").map(Integer::parseInt).toArray(int[]::new);
    int n = input[0];
    int d = input[1];
    d -= Arrays.stream(input).sum();
    System.out.println((d < 10 * -n) ? d / 5 : -1);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int d = sc.nextInt();
    d -= sc.nextInt();
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }
}
[/JAVA]

Explanation:

* The `import` statement is used to import the `Scanner` class from the `java.util` package.
* The `Scanner` class is used to read input from the user.
* The `nextInt()` method is used to read an integer input from the user.
* The `split()` method is used to split the input into an array of strings.
* The `map()` method is used to convert the array of strings to an array of integers.
* The `sum()` method is used to calculate the sum of the array of integers.
* The `d -= sum()` statement is used to subtract the sum of the array of integers from `d`.
* The `if` statement is used to check if `d` is less than `10 * -n`.
* The `d / 5` expression is used to calculate the result if `d` is less than `10 * -n`.
* The `-1` expression is used to calculate the result if `d` is greater than or equal to `10 * -n`.
* The `System.out.println()` statement is used to print the result to the console.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] numbers = getNumbers(scanner);
    int sum = getSum(numbers);
    int difference = getDifference(numbers, sum);
    System.out.println(getResult(difference));
  }

  private static int[] getNumbers(Scanner scanner) {
    String[] input = scanner.nextLine().split(" ");
    int[] numbers = new int[input.length];
    for (int i = 0; i < input.length; i++) {
      numbers[i] = Integer.parseInt(input[i]);
    }
    return numbers;
  }

  private static int getSum(int[] numbers) {
    int sum = 0;
    for (int number : numbers) {
      sum += number;
    }
    return sum;
  }

  private static int getDifference(int[] numbers, int sum) {
    int difference = 0;
    for (int number : numbers) {
      difference += number;
    }
    difference -= sum;
    return difference;
  }

  private static int getResult(int difference) {
    if (difference < 10 * -1) {
      return difference / 5;
    } else {
      return -1;
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    d -= n;
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    d -= scanner.nextInt();
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }
}
[/JAVA]

Explanation:

* `i = lambda : map ( int , input ( ).split ( ) ) ;` is equivalent to `i = () -> Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();`.
* `n , d = i ( ) ;` is equivalent to `int[] i = i(); int n = i[0]; int d = i[1];`.
* `d -= sum ( i ( ) ) ;` is equivalent to `d -= Arrays.stream(i()).sum();`.
* `[ d // 5 , - 1 ] [ d < 10 * ~ - n ]` is equivalent to `d / 5`.

Note: The `~` operator in Python is equivalent to the `!` operator in Java, which negates a boolean value.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    d -= scanner.nextInt();
    if (d < 10 * -n) {
      System.out.println(d / 5);
    } else {
      System.out.println(-1);
    }
  }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and it uses the ternary operator `?:` to print the result.

Note that the `d -= scanner.nextInt()` line is equivalent to `d = d - scanner.nextInt()` in Python.
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int d = scanner.nextInt();
    d -= scanner.nextInt();
    System.out.println(d / 5);
  }
}
[/JAVA]

Explanation:

1. The `i` function is replaced with `Scanner.nextInt()` to read an integer from the input.
2. The `map()` function is replaced with `Scanner.nextInt()` to read an integer from the input.
3. The `sum()` function is replaced with `Scanner.nextInt()` to read an integer from the input.
4. The ternary operator is replaced with an if-else statement to print the result.
5. The `print()` function is replaced with `System.out.println()` to print the result.
6. The `//` operator is replaced with `/` to perform integer division.
7. The `-1` is replaced with `-1 * 5` to perform the same operation.

Note: The `Scanner` class is used to read input from the user, and the `System.out.println()` method is used to print the result.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] input = scanner.nextLine().split(" ").map(Integer::parseInt).toArray(Integer[]::new);
    int n = input[0];
    int d = input[1];
    d -= Arrays.stream(input).sum();
    System.out.println((d < 10 * -n) ? d / 5 : -1);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] numbers = getNumbers(scanner);
    int sum = getSum(numbers);
    int difference = getDifference(numbers, sum);
    System.out.println(difference);
  }

  private static int[] getNumbers(Scanner scanner) {
    String[] input = scanner.nextLine().split(" ");
    int[] numbers = new int[input.length];
    for (int i = 0; i < input.length; i++) {
      numbers[i] = Integer.parseInt(input[i]);
    }
    return numbers;
  }

  private static int getSum(int[] numbers) {
    int sum = 0;
    for (int number : numbers) {
      sum += number;
    }
    return sum;
  }

  private static int getDifference(int[] numbers, int sum) {
    int difference = 0;
    for (int number : numbers) {
      difference += number;
    }
    difference -= sum;
    return difference;
  }
}
[/JAVA]

This code uses the `Scanner` class to read input from the user, and the `split` method to split the input into an array of strings. The `parseInt` method is then used to convert each string to an integer. The `getNumbers` method returns an array of integers, and the `getSum` method calculates the sum of the numbers in the array. The `getDifference` method calculates the difference between the sum of the numbers and the sum of the numbers in the array. Finally, the `main` method prints the difference to the console.
======
