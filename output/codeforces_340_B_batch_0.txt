  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][3];
    double area = 0;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < 3; j++) {
        a[i][j] = scanner.nextInt();
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextLine().split(" ");
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  public static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        int area = 0;

        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;

                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }

                    int s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s < 0) {
                        negative = Math.min(negative, s);
                    }
                }

                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static int getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i][0] = sc.nextInt();
            a[i][1] = sc.nextInt();
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        // do nothing
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    public static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          } else if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i][0] = sc.nextInt();
      a[i][1] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      a[i][0] = Integer.parseInt(input[0]);
      a[i][1] = Integer.parseInt(input[1]);
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          } else if (s < 0) {
            negative = Math.min(negative, (int) s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            String[] input = scanner.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s < 0) {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][3];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i][0] = sc.nextInt();
            a[i][1] = sc.nextInt();
            a[i][2] = sc.nextInt();
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s < 0) {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    public static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        int area = 0;
        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    int s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        continue;
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static int getS(int[] p1, int[] p2, int[] p3) {
        return (int) (((p2[0] - p1[0]) * (p3[1] - p1[1])) - ((p2[1] - p1[1]) * (p3[0] - p1[0]))) / 2.0;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }

          double s = getS(a[i], a[j], a[k]);

          if (s > 0) {
            positive = Math.max(positive, s);
          }

          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = new int[2];
      a[i][0] = sc.nextInt();
      a[i][1] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < 2; j++) {
        a[i][j] = scanner.nextInt();
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }

          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, (int) s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  public static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;

        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, (int) s);
                    } else if (s < 0) {
                        negative = Math.min(negative, (int) s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  public static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }

          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, (int) s);
                    } else if (s == 0) {
                        // do nothing
                    } else {
                        negative = Math.min(negative, (int) s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  public static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i][0] = sc.nextInt();
      a[i][1] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLine().split(" ");
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s < 0) {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    public static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 2; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        // pass
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      a[i][0] = sc.nextInt();
      a[i][1] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      a[i] = new int[input.length];
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][3];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 3; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    double x1 = p2[0] - p1[0];
    double y1 = p2[1] - p1[1];
    double x2 = p3[0] - p1[0];
    double y2 = p3[1] - p1[1];
    return (x1 * y2 - x2 * y1) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      a[i] = new int[input.length];
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        // pass
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }
        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][3];
    int area = 0;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < 3; j++) {
        a[i][j] = scanner.nextInt();
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i][0] = sc.nextInt();
      a[i][1] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;

        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < input.length; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;

                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s < 0) {
                        negative = Math.min(negative, s);
                    }
                }

                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = new int[2];
      a[i][0] = sc.nextInt();
      a[i][1] = sc.nextInt();
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  public static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;

        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;

                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }

                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, (int) s);
                    }
                    if (s == 0) {
                        continue;
                    } else {
                        negative = Math.min(negative, (int) s);
                    }
                }

                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]

This is the Java code that you requested. I had to make some changes to the Python code to make it compatible with Java, such as changing the input function to use the Scanner class and changing the print function to use the System.out.println method. I also had to add some imports at the beginning of the file.

I hope this helps! Let me know if you have any questions.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      a[i][0] = Integer.parseInt(input[0]);
      a[i][1] = Integer.parseInt(input[1]);
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      a[i][0] = Integer.parseInt(input[0]);
      a[i][1] = Integer.parseInt(input[1]);
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }

          double s = getS(a[i], a[j], a[k]);

          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    double x1 = p2[0] - p1[0];
    double y1 = p2[1] - p1[1];
    double x2 = p3[0] - p1[0];
    double y2 = p3[1] - p1[1];
    return (x1 * y2 - x2 * y1) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][3];
    double area = 0;

    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextLine().split(" ");
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][];
        double area = 0;

        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            a[i] = new int[input.length];
            for (int j = 0; j < input.length; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        // pass
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (double) ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = scanner.nextLine().split(" ");
      a[i][0] = Integer.parseInt(input[0]);
      a[i][1] = Integer.parseInt(input[1]);
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[][] a = new int[n][3];
        int area = 0;
        for (int i = 0; i < n; i++) {
            String[] line = scanner.nextLine().split(" ");
            for (int j = 0; j < 3; j++) {
                a[i][j] = Integer.parseInt(line[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    int s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        continue;
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static int getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLine().split(" ");
        }
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, (int) s);
                    }
                    if (s == 0) {
                        continue;
                    } else {
                        negative = Math.min(negative, (int) s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }
        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s == 0) {
                        // do nothing
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    int area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < input.length; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, (int) s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, (int) s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    double s = (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
    return s / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextLine().split(" ");
            for (int j = 0; j < a[i].length; j++) {
                a[i][j] = Integer.parseInt(a[i][j]);
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        // pass
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      a[i][0] = Integer.parseInt(input[0]);
      a[i][1] = Integer.parseInt(input[1]);
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            for (int j = 0; j < 2; j++) {
                a[i][j] = Integer.parseInt(input[j]);
            }
        }
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    } else if (s == 0) {
                        // do nothing
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }
        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[][] a = new int[n][3];
        int area = 0;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 3; j++) {
                a[i][j] = scanner.nextInt();
            }
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    int s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        // do nothing
                    } else {
                        negative = Math.min(negative, s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static int getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;

        for (int i = 0; i < n; i++) {
            a[i] = new int[2];
            a[i][0] = sc.nextInt();
            a[i][1] = sc.nextInt();
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double positive = 0;
                double negative = 0;

                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }

                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, s);
                    }
                    if (s == 0) {
                        continue;
                    }
                    negative = Math.min(negative, s);
                }

                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }

        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][3];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i][0] = sc.nextInt();
            a[i][1] = sc.nextInt();
            a[i][2] = sc.nextInt();
        }
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, (int) s);
                    } else if (s < 0) {
                        negative = Math.min(negative, (int) s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }
        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    int n = scan.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = scan.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return ((p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0])) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 2; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][];
    int area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextLine().split(" ");
    }
    for (int i = 0; i < a.length - 1; i++) {
      for (int j = i + 1; j < a.length; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < a.length; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // pass
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][3];
    int area = 0;
    for (int i = 0; i < n; i++) {
      String[] input = sc.nextLine().split(" ");
      for (int j = 0; j < 3; j++) {
        a[i][j] = Integer.parseInt(input[j]);
      }
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        int positive = 0;
        int negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          int s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            // do nothing
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static int getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][];
    double area = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextLine().split(" ");
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[][] a = new int[n][3];
    double area = 0;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < 3; j++) {
        a[i][j] = scanner.nextInt();
      }
    }
    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;
        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }
          double s = getS(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          }
          if (s == 0) {
            continue;
          } else {
            negative = Math.min(negative, s);
          }
        }
        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }
    System.out.println(area);
  }

  private static double getS(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][2];
        double area = 0;
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int positive = 0;
                int negative = 0;
                for (int k = 0; k < n; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    double s = getS(a[i], a[j], a[k]);
                    if (s > 0) {
                        positive = Math.max(positive, (int) s);
                    }
                    if (s == 0) {
                        // pass
                    } else {
                        negative = Math.min(negative, (int) s);
                    }
                }
                if (positive != 0 && negative != 0) {
                    area = Math.max(area, positive - negative);
                }
            }
        }
        System.out.println(area);
    }

    private static double getS(int[] p1, int[] p2, int[] p3) {
        return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] a = new int[n][2];
    double area = 0;

    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
        double positive = 0;
        double negative = 0;

        for (int k = 0; k < n; k++) {
          if (k == i || k == j) {
            continue;
          }

          double s = getSignedArea(a[i], a[j], a[k]);
          if (s > 0) {
            positive = Math.max(positive, s);
          } else if (s < 0) {
            negative = Math.min(negative, s);
          }
        }

        if (positive != 0 && negative != 0) {
          area = Math.max(area, positive - negative);
        }
      }
    }

    System.out.println(area);
  }

  private static double getSignedArea(int[] p1, int[] p2, int[] p3) {
    return (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]) / 2.0;
  }
}
[/JAVA]
======
