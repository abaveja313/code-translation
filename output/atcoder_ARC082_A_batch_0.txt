  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    List<Integer> list = Arrays.stream(a).boxed().collect(Collectors.toList());
    list.addAll(Arrays.stream(a).map(x -> x - 1).boxed().collect(Collectors.toList()));
    list.addAll(Arrays.stream(a).map(x -> x + 1).boxed().collect(Collectors.toList()));

    Map<Integer, Long> counter = list.stream().collect(Collectors.groupingBy(x -> x, Collectors.counting()));
    long max = counter.values().stream
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> aPlusOne = new ArrayList<>();
    List<Integer> aMinusOne = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aPlusOne.add(a.get(i) + 1);
      aMinusOne.add(a.get(i) - 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counter.put(a.get(i), counter.getOrDefault(a.get
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }
    int maxCount = 0;
    for (int i = 0; i < n; i++) {
      int count = 0;
      for (int j = 0; j < n; j++) {
        if (a.get(j) == a.get(i) || a.get(j) == a.get(i) - 1 || a.get(j) == a.get(i) + 1) {
          count++;
        }
      }
      maxCount = Math.max(maxCount, count);
    }
    System.out.println(maxCount);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a.get(i) - 1;
    }
    for (int i = 0; i < n; i++) {
      b[i] = a.get(i) + 1;
    }
    List<Integer> c = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      c.add(b[i]);
    }
    Collections.sort(c);
    int maxCount = 0;
    for (int i = 0; i < n; i++)
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = new int[n * 3];
    for (int i = 0; i < n; i++) {
      d[i] = a[i];
      d[i + n] = b[i];
      d[i + n
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        scanner.nextLine();
        String[] input = scanner.nextLine().split(" ");
        List<Integer> a = new ArrayList<>();
        for (String s : input) {
            a.add(Integer.parseInt(s));
        }
        Set<Integer> set = new HashSet<>();
        for (int i : a) {
            set.add(i);
            set.add(i - 1);
            set.add(i + 1);
        }
        Map<Integer, Integer> map = new HashMap<>();
        for (int i : set) {
            map.put(i, map.getOrDefault(i, 0) + 1);
        }
        int maxValue = Col
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    List<Integer> list = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      list.add(a[i]);
      list.add(b[i]);
      list.add(c[i]);
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> aPlusOne = new ArrayList<>();
    List<Integer> aMinusOne = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aPlusOne.add(a.get(i) + 1);
      aMinusOne.add(a.get(i) - 1);
    }
    List<Integer> allValues = new ArrayList<>();
    allValues.addAll(a);
    allValues.addAll(aPlusOne);
    allValues.add
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        List<Integer> b = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) - 1);
            b.add(a.get(i) + 1);
        }
        Map<Integer, Integer> counter = new HashMap<>();
        for (int i = 0; i < b.size(); i++) {
            int value = b.get(i);
            if (counter.containsKey(value)) {
                counter.put(value, counter
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }
    ArrayList<Integer> aPlusOne = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aPlusOne.add(a.get(i) + 1);
    }
    ArrayList<Integer> aMinusOne = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aMinusOne.add(a.get(i) - 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counter.put(a.get(i), counter.getOrDefault(a.get
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    List<Integer> d = new ArrayList<>();
    Collections.addAll(d, a);
    Collections.addAll(d, b
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    ArrayList<Integer> a1 = new ArrayList<>();
    ArrayList<Integer> a2 = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a1.add(a.get(i) - 1);
      a2.add(a.get(i) + 1);
    }
    a1.addAll(a2);
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a1.size(); i++) {
      int value = a1.get(i);
      if (counter.containsKey(value)) {
        counter.put(
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    Map<Integer, Integer> counts = new HashMap<>();
    for (int i = 0; i < a.length; i++) {
      counts.put(a[i], counts.getOrDefault(a[i], 0) + 1);
      counts.put(a[i] - 1, counts.getOrDefault(a[i] - 1, 0) + 1);
      counts.put(a[i] + 1, counts.getOrDefault(a[i] + 1, 0) + 1);
    }

    int maxCount = 0;
    for (int count : counts.values()) {
      if (count > maxCount) {
       
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }

    HashMap<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      int element = a.get(i);
      if (counter.containsKey(element)) {
        counter.put(element, counter.get(element) + 1);
      } else {
        counter.put(element, 1);
      }
    }

    ArrayList<Integer> values = new ArrayList<>(counter.values());
    Collections.sort(values, new Comparator<Integer>() {
      @Override
      public int compare(Integer o1, Integer o2
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }

    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      counter.put(a.get(i), counter.getOrDefault(a.get(i), 0) + 1);
    }

    int maxValue = Collections.max(counter.values());
    System.out.println(maxValue);
  }
}
[/JAVA]

This is a straightforward conversion of the Python code to Java. The `Counter` class in Python is replaced with a `Map` in Java, where the key is the value of the
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a.get(i) - 1;
    }
    for (int i = 0; i < n; i++) {
      b[i] = a.get(i) + 1;
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counter.put(a.get(i), counter.getOrDefault(a.get(i), 0) + 
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int[] b = new int[n * 3];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
      b[i + n] = a[i];
      b[i + n * 2] = a[i] + 1;
    }
    Map<Integer, Integer> count = new HashMap<>();
    for (int i = 0; i < b.length; i++) {
      if (count.containsKey(b[i])) {
        count.put(b[i], count.get(b[i
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] aPlus1 = Arrays.stream(a).map(x -> x + 1).toArray();
    int[] aMinus1 = Arrays.stream(a).map(x -> x - 1).toArray();
    int[] aPlus1Minus1 = Arrays.stream(aPlus1).map(x -> x - 1).toArray();
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.length; i++) {
      counter.put(a[i], counter.getOrDefault(a[i], 0) + 1);

======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counts = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      if (counts.containsKey(b.get(i))) {
        counts.put(b.get(i), counts.get(b.get(i)) + 1);
      } else {

======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] aPlusOne = new int[n];
    int[] aMinusOne = new int[n];
    for (int i = 0; i < n; i++) {
      aPlusOne[i] = a[i] + 1;
      aMinusOne[i] = a[i] - 1;
    }
    int[] all = Arrays.stream(a).flatMap(x -> Arrays.stream(new int[] {x, x + 1, x - 1})).toArray();
    int[] counts = new int[n + 1];
    for (int i = 0; i < all.length;
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int[] a1 = new int[a.size()];
    int[] a2 = new int[a.size()];
    int[] a3 = new int[a.size()];
    for (int i = 0; i < a.size(); i++) {
      a1[i] = a.get(i) - 1;
      a2[i] = a.get(i) + 1;
      a3[i] = a.get(i);
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < a.size(); i++) {
      b.add(a1[i]);
     
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    ArrayList<Integer> list = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      list.add(a[i]);
      list.add(a[i] - 1);
      list.add(a[i] + 1);
    }

    Collections.sort(list);

    int maxCount = 0;
    int currentCount = 1;
    for (int i = 1; i < list.size(); i++) {
      if (list.get(i) == list.get(i - 1)) {
        currentCount++;
      } else {
        maxCount = Math.max(
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = Arrays.copyOf(a, a.length + b.length + c.length);
    System.arraycopy(b, 0, d, 0, b.length);
    System
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        Map<Integer, Integer> counts = new HashMap<>();
        for (int i = 0; i < n; i++) {
            counts.put(a[i], counts.getOrDefault(a[i], 0) + 1);
            counts.put(a[i] - 1, counts.getOrDefault(a[i] - 1, 0) + 1);
            counts.put(a[i] + 1, counts.getOrDefault(a[i] + 1, 0) + 1);
        }
        counts.values().stream().max(Comparator.naturalOrder()).ifPresent(
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.Map;
import java.util.HashMap;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int[] aPlusOne = new int[n];
        int[] aMinusOne = new int[n];
        for (int i = 0; i < n; i++) {
            aPlusOne[i] = a[i] + 1;
            aMinusOne[i] = a[i] - 1;
        }
        int[] all = Arrays.copyOf(a, a.length + aPlusOne.length + aMinusOne.length);
        System.arraycopy(aPlusOne, 0, all, n, aPlusOne.length);
        System.arraycopy(aMinusOne, 0
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    List<Integer> list = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      list.add(a[i]);
      list.add(b[i]);
      list
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    List<Integer> list = Arrays.stream(a).boxed().collect(Collectors.toList());
    list.addAll(Arrays.stream(a).map(x -> x - 1).boxed().collect(Collectors.toList()));
    list.addAll(Arrays.stream(a).map(x -> x + 1).boxed().collect(Collectors.toList()));
    Map<Integer, Integer> counter = list.stream().collect(Collectors.toMap(x -> x, x -> 1, Integer::sum));
    int maxCount = counter.values().
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      counter.put(a.get(i), counter.getOrDefault(a.get(i), 0) + 1);
      counter.put(a.get(i) - 1, counter.getOrDefault(a.get(i) - 1, 0) + 1);
      counter.put(a.get(i) + 1, counter.getOrDefault(a.get(i) + 1, 0) + 1);
    }
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
    }
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) + 1);
    }
    Collections.sort(b);
    int maxCount = 1;
    int currentCount = 1;
    for (int i = 1; i < n * 2; i++) {
      if (b.get(i) == b.get(i - 1)) {
        currentCount++;
        if (
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      if (counter.containsKey(b.get(i))) {
        counter.put(b.get(i), counter.get(b.get(i)) + 
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      int value = a.get(i);
      counter.put(value, counter.getOrDefault(value, 0) + 1);
    }
    int maxCount = Collections.max(counter.values());
    System.out.println(maxCount);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counter.put(a[i] - 1, counter.getOrDefault(a[i] - 1, 0) + 1);
      counter.put(a[i], counter.getOrDefault(a[i], 0) + 1);
      counter.put(a[i] + 1, counter.getOrDefault(a[i] + 1, 0) + 1);
    }
    int maxCount = 0;
    for (int count : counter.values()) {
      maxCount = Math.max(maxCount, count);
   
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = new int[n];
    for (int i = 0; i < n; i++) {
      d[i] = a[i] - 1
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      int x = a.get(i);
      counter.put(x, counter.getOrDefault(x, 0) + 1);
      counter.put(x - 1, counter.getOrDefault(x - 1, 0) + 1);
      counter.put(x + 1, counter.getOrDefault(x + 1, 0) + 1);
    }
    int max = Collections.max(counter.values());
    System
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counter.put(a[i], counter.getOrDefault(a[i], 0) + 1);
      counter.put(b[i],
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        List<Integer> b = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) - 1);
        }
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) + 1);
        }
        Map<Integer, Integer> counter = new HashMap<>();
        for (int i = 0; i < b.size(); i++) {
            if (counter.containsKey(b.get(i))) {
                counter.put(b.get(i), counter
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        ArrayList<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        ArrayList<Integer> b = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) - 1);
        }
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) + 1);
        }
        Map<Integer, Integer> countMap = new HashMap<>();
        for (int i = 0; i < b.size(); i++) {
            if (countMap.containsKey(b.get(i))) {
                countMap.put(b.get(i), countMap.get(b
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      counter.put(a.get(i), counter.getOrDefault(a.get(i), 0) + 1);
      counter.put(a.get(i) - 1, counter.getOrDefault(a.get(i) - 1, 0) + 1);
      counter.put(a.get(i) + 1, counter.getOrDefault(a.get(i) + 1, 
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    ArrayList<Integer> b = new ArrayList<>();
    for (int i : a) {
      b.add(i - 1);
      b.add(i + 1);
    }
    Collections.sort(b);
    int maxCount = 0;
    int currentCount = 1;
    for (int i = 1; i < b.size(); i++) {
      if (b.get(i) == b.get(i - 1)) {
        currentCount++;
      } else {
        maxCount = Math.max(maxCount, currentCount);
        currentCount = 1;
      }
    }
    System.out.println
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    Map<Integer, Integer> counts = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counts.put(a[i], counts.getOrDefault(a[i], 0) + 1);
      counts.put(a[i] - 1, counts.getOrDefault(a[i] - 1, 0) + 1);
      counts.put(a[i] + 1, counts.getOrDefault(a[i] + 1, 0) + 1);
    }
    Map<Integer, Integer> sortedCounts = new HashMap<>();
    counts.entry
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(sc.nextInt());
        }
        List<Integer> b = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) - 1);
            b.add(a.get(i) + 1);
        }
        Map<Integer, Integer> counts = new HashMap<>();
        for (int i = 0; i < b.size(); i++) {
            int count = counts.getOrDefault(b.get(i), 0);
            counts.put(b.get(i), count + 1);
        }
        int maxCount = 0;
        for
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.stream.Collectors;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        int max = Collections.max(Arrays.stream(a).map(x -> x - 1).collect(Collectors.toList()));
        max = Math.max(max, Collections.max(Arrays.stream(a).map(x -> x + 1).collect(Collectors.toList())));
        System.out.println(max);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i++) {
      counter.put(a[i], counter.getOrDefault(a[i], 0) + 1);
      counter.put(b[i],
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    String[] input = scanner.nextLine().split(" ");
    List<Integer> a = new ArrayList<>();
    for (String s : input) {
      a.add(Integer.parseInt(s));
    }
    List<Integer> b = new ArrayList<>();
    for (int x : a) {
      b.add(x - 1);
      b.add(x + 1);
    }
    Collections.sort(b);
    int maxCount = 0;
    int currentCount = 0;
    for (int i = 0; i < b.size(); i++) {
      if (b.get(i) == b.get(i + 1)) {
        currentCount++;
      } else {
        maxCount = Math.max(maxCount, currentCount);
        currentCount = 
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    Map<Integer, Integer> map = new HashMap<>();
    for (int i = 0; i < n; i++) {
      map.put(a[i], map.getOrDefault(a[i], 0) + 1);
      map.put(b[i], map.getOrDefault(b[
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      int value = a.get(i);
      counter.put(value, counter.getOrDefault(value, 0) + 1);
      counter.put(value - 1, counter.getOrDefault(value - 1, 0) + 1);
      counter.put(value + 1, counter.getOrDefault(value + 1, 0) + 1);
    }
    int max = Collections.max(counter.values());
    System
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> aMinus1 = new ArrayList<>();
    List<Integer> aPlus1 = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aMinus1.add(a.get(i) - 1);
      aPlus1.add(a.get(i) + 1);
    }
    List<Integer> allNumbers = new ArrayList<>();
    allNumbers.addAll(a);
    allNumbers.addAll(aMinus1);
    allNumbers.add
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = new int[n];
    for (int i = 0; i < n; i++) {
      d[i] = b[i] + 
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    List<Integer> list = Arrays.stream(a).boxed().collect(Collectors.toList());
    list.addAll(Arrays.stream(a).map(x -> x - 1).boxed().collect(Collectors.toList()));
    list.addAll(Arrays.stream(a).map(x -> x + 1).boxed().collect(Collectors.toList()));
    Map<Integer, Long> counter = list.stream().collect(Collectors.groupingBy(x -> x, Collectors.counting()));
    long max = counter.values().stream().max(Long::
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    String input = scanner.nextLine();
    String[] arr = input.split(" ");
    List<Integer> a = new ArrayList<>();
    for (String s : arr) {
      a.add(Integer.parseInt(s));
    }
    List<Integer> aPlus1 = new ArrayList<>();
    List<Integer> aMinus1 = new ArrayList<>();
    for (int i : a) {
      aPlus1.add(i + 1);
      aMinus1.add(i - 1);
    }
    Map<Integer, Integer> counts = new HashMap<>();
    for (int i : aPlus1) {
      counts.put(i, counts.getOrDefault(i, 0) + 1);
    }
    for
======
  [JAVA]
import java.util.Scanner;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> countMap = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      countMap.put(a.get(i), countMap.getOrDefault(a.get(i), 0) + 1);
      countMap.put(a.get(i) - 1, countMap.getOrDefault(a.get(i) - 1, 0) + 1);
      countMap.put(a.get(i) + 1, countMap.getOrDefault(a.get(i) + 1, 0)
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }

    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
    }
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) + 1);
    }

    Collections.sort(b);
    int maxCount = 0;
    int currentCount = 1;
    for (int i = 1; i < b.size(); i++) {
      if (b.get(i) == b.get(i - 1)) {
        currentCount++;
      }
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int max = 0;
    Map<Integer, Integer> counts = new HashMap<>();
    for (int i = 0; i < n; i++) {
      int count = 0;
      for (int j = 0; j < n; j++) {
        if (a[i] == a[j] || a[i] - 1 == a[j] || a[i] + 1 == a[j]) {
          count++;
        }
      }
      counts.put(a[i], count);
      if (count > max) {
        max = count;
      }
    }
    System.out.println(max);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < a.size(); i++) {
      b.add(a.get(i) - 1);
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      if (counter.containsKey(b.get(i))) {
        counter.put(b.get(i), counter.get(b.get(i)) + 1);
      } else {
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = a.get(i);
    }
    int max = Collections.max(Counter(arr, arr.length));
    System.out.println(max);
  }

  public static int[] Counter(int[] arr, int n) {
    int[] result = new int[n];
    for (int i = 0; i < n; i++) {
      result[i] = 1;
    }
    for (int i = 1; i < n; i++) {
      for (int j = 0; j <
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = new int[n * 2];
    System.arraycopy(a, 0, d, 0, n);
    System.arraycopy(b, 0, d, n, n);
    System.arraycopy(c, 
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int maxCount = 0;
    for (int i = 0; i < n; i++) {
      int count = 0;
      for (int j = 0; j < n; j++) {
        if (a.get(j) == i || a.get(j) == i - 1 || a.get(j) == i + 1) {
          count++;
        }
      }
      if (count > maxCount) {
        maxCount = count;
      }
    }
    System.out.println(maxCount);
  }
}
[/JAVA]

In this solution, we first create a `Scanner` object to
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    ArrayList<Integer> b = new ArrayList<>();
    for (int i = 0; i < a.size(); i++) {
      b.add(a.get(i) - 1);
    }
    for (int i = 0; i < a.size(); i++) {
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      if (counter.containsKey(b.get(i))) {
        counter.put(b.get(i), counter.get(b
======
  [JAVA]
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = Arrays.copyOf(a, a.length + b.length + c.length);
    System.arraycopy(b, 0, d, n, b.length);
    System.arraycopy(c, 0, d, n + b.length,
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(sc.nextInt());
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
    }
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      if (counter.containsKey(b.get(i))) {
        counter.put(b.get(i), counter.get(
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] aPlusOne = new int[n];
    int[] aMinusOne = new int[n];
    for (int i = 0; i < n; i++) {
      aPlusOne[i] = a[i] + 1;
      aMinusOne[i] = a[i] - 1;
    }
    int[] allNumbers = new int[n * 3];
    System.arraycopy(a, 0, allNumbers, 0, n);
    System.arraycopy(aPlusOne, 0, allNumbers, n, n);
    System.arraycopy(aMinusOne, 
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> aPlusOne = new ArrayList<>();
    List<Integer> aMinusOne = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aPlusOne.add(a.get(i) + 1);
      aMinusOne.add(a.get(i) - 1);
    }
    List<Integer> all = new ArrayList<>();
    all.addAll(a);
    all.addAll(aPlusOne);
    all.addAll(aMinusOne);
    Map<Integer, Integer> counts = new HashMap<>();
    for (
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int[] b = new int[a.size()];
    for (int i = 0; i < a.size(); i++) {
      b[i] = a.get(i) - 1;
    }
    for (int i = 0; i < a.size(); i++) {
      b[i] = a.get(i) + 1;
    }
    Collections.sort(a);
    Collections.sort(b);
    int max = 0;
    for (int i = 0; i < a.size(); i++) {
      if (a.get(i) == b[i]) {
        max++;
      }
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> aPlusOne = new ArrayList<>();
    List<Integer> aMinusOne = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      aPlusOne.add(a.get(i) + 1);
      aMinusOne.add(a.get(i) - 1);
    }
    a.addAll(aPlusOne);
    a.addAll(aMinusOne);
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < n; i
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(sc.nextInt());
        }
        List<Integer> b = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) - 1);
        }
        for (int i = 0; i < n; i++) {
            b.add(a.get(i) + 1);
        }
        Map<Integer, Integer> counter = new HashMap<>();
        for (int i = 0; i < b.size(); i++) {
            if (counter.containsKey(b.get(i))) {
                counter.put(b
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < a.size(); i++) {
      int x = a.get(i);
      counter.put(x, counter.getOrDefault(x, 0) + 1);
      counter.put(x - 1, counter.getOrDefault(x - 1, 0) + 1);
      counter.put(x + 1, counter.getOrDefault(x + 1, 0) + 1);
    }
    int max = Collections.max(counter.values());
    System
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    scanner.nextLine();
    String[] input = scanner.nextLine().split(" ");
    List<Integer> a = new ArrayList<>();
    for (String s : input) {
      a.add(Integer.parseInt(s));
    }
    List<Integer> b = new ArrayList<>();
    for (int x : a) {
      b.add(x - 1);
      b.add(x + 1);
    }
    Map<Integer, Integer> counts = new HashMap<>();
    for (int x : b) {
      counts.put(x, counts.getOrDefault(x, 0) + 1);
    }
    int maxCount = 0;
    for (Map.Entry<Integer, Integer> entry : counts.entrySet()) {
      maxCount
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    ArrayList<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
    }
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      if (counter.containsKey(b.get(i))) {
        counter.put(b.get(i), counter.get(b.get(i
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    scanner.close();

    int[] aPlusOne = new int[n];
    int[] aMinusOne = new int[n];
    for (int i = 0; i < n; i++) {
      aPlusOne[i] = a.get(i) + 1;
      aMinusOne[i] = a.get(i) - 1;
    }

    int[] aArray = new int[n * 3];
    for (int i = 0; i < n; i++) {
      aArray[i] = a.get(i);
      aArray[i + n] = a
======
  [JAVA]
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }

    List<Integer> b = new ArrayList<>();
    for (int x : a) {
      b.add(x - 1);
      b.add(x + 1);
    }

    Map<Integer, Integer> counts = new HashMap<>();
    for (int x : b) {
      counts.put(x, counts.getOrDefault(x, 0) + 1);
    }

    int maxCount = 0;
    for (Map.Entry<Integer, Integer> entry : counts.entrySet()) {
      maxCount = Math.max(maxCount, entry.getValue());

======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] a1 = new int[n];
    int[] a2 = new int[n];
    for (int i = 0; i < n; i++) {
      a1[i] = a[i] - 1;
      a2[i] = a[i] + 1;
    }
    int[] all = Arrays.stream(a).flatMap(Arrays::stream).flatMap(Arrays::stream).toArray();
    Map<Integer, Integer> counts = new HashMap<>();
    for (int i : all) {
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }

    int[] a1 = new int[n];
    int[] a2 = new int[n];
    for (int i = 0; i < n; i++) {
      a1[i] = a[i] - 1;
      a2[i] = a[i] + 1;
    }

    int[] all = new int[n * 3];
    System.arraycopy(a, 0, all, 0, n);
    System.arraycopy(a1, 0, all, n, n);
    System.arraycopy(a2, 0, all, n * 2, n
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    ArrayList<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    int[] arr = new int[a.size()];
    for (int i = 0; i < a.size(); i++) {
      arr[i] = a.get(i);
    }
    int[] arr2 = new int[a.size()];
    for (int i = 0; i < a.size(); i++) {
      arr2[i] = a.get(i) - 1;
    }
    int[] arr3 = new int[a.size()];
    for (int i = 0; i < a.size(); i++) {
      arr3[i] = a.get(i)
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    Map<Integer, Integer> countMap = new HashMap<>();
    for (int i = 0; i < n; i++) {
      countMap.put(a[i], countMap.getOrDefault(a[i
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    ArrayList<Integer> list = new ArrayList<>();
    for (int i = 0; i < a.length; i++) {
      list.add(a[i] - 1);
      list.add(a[i]);
      list.add(a[i] + 1);
    }
    Map<Integer, Integer> map = new HashMap<>();
    for (int i = 0; i < list.size(); i++) {
      if (map.containsKey(list.get(i))) {
        map.put(list.get(i), map.get(list.get(i)) + 1);
      } else {

======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = new int[n];
    for (int i = 0; i < n; i++) {
      d[i] = b[i] + 1;
    }
    int[] e = new int[n];
    for (int i = 0; i < n; i++) {

======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> a = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        List<Integer> a1 = new ArrayList<>(a);
        List<Integer> a2 = new ArrayList<>(a);
        List<Integer> a3 = new ArrayList<>(a);
        for (int i = 0; i < a.size(); i++) {
            a1.set(i, a.get(i) - 1);
            a2.set(i, a.get(i) + 1);
        }
        a1.addAll(a2);
        a1.addAll(a3);
        Map<Integer, Integer>
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> a = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      a.add(scanner.nextInt());
    }
    List<Integer> b = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) - 1);
    }
    for (int i = 0; i < n; i++) {
      b.add(a.get(i) + 1);
    }
    Map<Integer, Integer> counter = new HashMap<>();
    for (int i = 0; i < b.size(); i++) {
      int value = b.get(i);
      if (counter.containsKey(value)) {
        counter.put(
======
  [JAVA]
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;
import java.util.Collections;
import java.util.Comparator;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < n; i++) {
      a[i] = scanner.nextInt();
    }
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
      b[i] = a[i] - 1;
    }
    int[] c = new int[n];
    for (int i = 0; i < n; i++) {
      c[i] = a[i] + 1;
    }
    int[] d = new int[n];
    for (int i = 0; i < n; i++) {
      d[i] = b[i] + c[i];
    }
    Map<Integer, Integer> counter = new
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = a[i] - 1;
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = a[i] + 1;
        }
        int[] d = new int[n * 3];
        for (int i = 0; i < n; i++) {
            d[i] = a[i];
            d[i + n] = b[i];
            d[
======
