  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        int ans = 0;
        if (length % arr[0] == 0) {
            ans = length / arr[0];
        } else if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, check / arr[0] + i);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, check / arr[0] + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println((int) Math.floor(length / arr[0]));
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = (int) Math.floor(check / arr[0]);
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = (int) Math.floor(check / arr[0]);
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 1; i <= 4; i++) {
            arr[i - 1] = scanner.nextInt();
        }
        arr = sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
    
    public static int[] sort(int[] arr) {
        int temp;
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        return arr;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i < length / arr[2] + 1; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, check / arr[0] + i);
                }
            }
        } else {
            for (int i = 0; i < length / arr[2] + 1; i++) {
                for (int j = 0; j < length / arr[1] + 1; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, check / arr[0] + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void cutRibbon() {
        Scanner sc = new Scanner(System.in);
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        int length = arr[0];
        arr = sort(arr, 1, 3, false);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
        return;
    }

    public static int[] sort(int[] arr, int start, int end, boolean reverse) {
        if (start >= end) {
            return arr;
        }
        int pivot = arr[start];
        int i = start + 1;
        int j = end;
        while (i <= j) {
            if (reverse) {
                if (arr[i] < pivot) {
                    i++;
                } else if (arr[j] > pivot) {
                    j--;
                } else {
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                    i++;
                    j--;
                }
            } else {
                if (arr[i] > pivot) {
                    i++;
                } else if (arr[j] < pivot) {
                    j--;
                } else {
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                   
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = sc.nextInt();
    }
    sc.close();
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    int length = arr[0];
    arr = sort(arr, 1, 3);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }

  public static int[] sort(int[] arr, int start, int end) {
    for (int i = start; i < end; i++) {
      for (int j = i + 1; j <= end; j++) {
        if (arr[i] > arr[j]) {
          int temp = arr[i];
          arr[i] = arr[j];
          arr[j] = temp;
        }
      }
    }
    return arr;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void cutRibbon() {
        Scanner scanner = new Scanner(System.in);
        String[] arrStr = scanner.nextLine().split(" ");
        int length = Integer.parseInt(arrStr[0]);
        int[] arr = new int[4];
        for (int i = 1; i < 4; i++) {
            arr[i] = Integer.parseInt(arrStr[i]);
        }
        arr = sort(arr, false);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }

    public static int[] sort(int[] arr, boolean reverse) {
        int temp;
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (reverse) {
                    if (arr[i] < arr[j]) {
                        temp = arr[i];
                        arr[i] = arr[j];
                        arr[j] = temp;
                    }
                } else {
                    if (arr[i] > arr[j]) {
                        temp = arr[i];
                        arr[i] = arr[j];
                        arr[j] = temp;
                    }
                }
            }
        }
        return arr;
    }

    public static void main(String[] args) {
        cutRibbon();
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        int ans = 0;
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        int length = arr[0];
        arr = sort(arr, 1, 3);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }

    public static int[] sort(int[] arr, int start, int end) {
        int temp;
        for (int i = start; i < end; i++) {
            for (int j = i + 1; j <= end; j++) {
                if (arr[i] > arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        return arr;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        int ans = 0;
        if (length % arr[0] == 0) {
            ans = length / arr[0];
        } else if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, check / arr[0] + i);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, check / arr[0] + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          int k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            int k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]

This is a Java implementation of the Python code provided. It uses the `Scanner` class to read input from the user, and the `Arrays` class to sort the input array. The rest of the code is similar to the Python code, with the exception of using `Math.max()` instead of the Python `max()` function.

The `main()` method takes an array of strings as input, and then converts it to an array of integers using `Integer.parseInt()`. The code then sorts the array using `Arrays.sort()`, and then uses a similar approach to the Python code to calculate the maximum number of pieces of ribbon that can be cut. Finally, the code prints the result to the console.
======
  [JAVA]
import java.util.Arrays;
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] arr = scanner.nextLine().split(" ");
        int length = Integer.parseInt(arr[0]);
        arr = new String[4];
        for (int i = 1; i < 4; i++) {
            arr[i] = scanner.nextLine();
        }
        Arrays.sort(arr, 1, 4, Comparator.reverseOrder());
        if (length % Integer.parseInt(arr[0]) == 0) {
            System.out.println(length / Integer.parseInt(arr[0]));
            return;
        }
        int ans = 0;
        if (Integer.parseInt(arr[0]) == Integer.parseInt(arr[1])) {
            int k = 0;
            for (int i = 0; i <= length / Integer.parseInt(arr[2]); i++) {
                int check = length - i * Integer.parseInt(arr[2]);
                if (check >= 0 && check % Integer.parseInt(arr[0]) == 0) {
                    k = check / Integer.parseInt(arr[0]);
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / Integer.parseInt(arr[2]); i++) {
                for (int j = 0; j <= length / Integer.parseInt(arr[1]); j++) {
                    int check = length - i * Integer.parseInt(arr[2]) - j * Integer.parseInt(arr[1]);
                    if (check >= 0 && check % Integer.parseInt(arr[0]) == 0) {
                        k = check / Integer.parseInt(arr[0]);
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 1; i <= 4; i++) {
            arr[i - 1] = sc.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        sc.close();

        Arrays.sort(arr, 1, 4);

        int ans = 0;
        if (length % arr[0] == 0) {
            ans = length / arr[0];
        } else {
            if (arr[0] == arr[1]) {
                for (int i = 0; i <= length / arr[2]; i++) {
                    int check = length - i * arr[2];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + check / arr[0]);
                    }
                }
            } else {
                for (int i = 0; i <= length / arr[2]; i++) {
                    for (int j = 0; j <= length / arr[1]; j++) {
                        int check = length - i * arr[2] - j * arr[1];
                        if (check >= 0 && check % arr[0] == 0) {
                            ans = Math.max(ans, i + j + check / arr[0]);
                        }
                    }
                }
            }
        }

        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        int length = arr[0];
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        int ans = 0;
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        int ans = 0;
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, check / arr[0] + i);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, check / arr[0] + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        arr[0] = scanner.nextInt();
        arr[1] = scanner.nextInt();
        arr[2] = scanner.nextInt();
        Arrays.sort(arr);
        int ans = 0;
        if (length % arr[0] == 0) {
            ans = length / arr[0];
        } else if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    int k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        int k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println((int) length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i < length / arr[2] + 1; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + (int) check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i < length / arr[2] + 1; i++) {
        for (int j = 0; j < length / arr[1] + 1; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + (int) check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        int ans = 0;
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + (check / arr[0]));
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + (check / arr[0]));
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i <= 4; i++) {
      arr[i - 1] = scanner.nextInt();
    }
    arr = sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }

  public static int[] sort(int[] arr) {
    int temp;
    for (int i = 0; i < arr.length - 1; i++) {
      for (int j = i + 1; j < arr.length; j++) {
        if (arr[i] > arr[j]) {
          temp = arr[i];
          arr[i] = arr[j];
          arr[j] = temp;
        }
      }
    }
    return arr;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void cutRibbon() {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 1; i <= 4; i++) {
            arr[i - 1] = sc.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }

    public static void main(String[] args) {
        cutRibbon();
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    int length = arr[0];
    int[] sortedArr = new int[3];
    for (int i = 1; i < 4; i++) {
      sortedArr[i - 1] = arr[i];
    }
    Arrays.sort(sortedArr);
    if (length % sortedArr[0] == 0) {
      System.out.println(length / sortedArr[0]);
      return;
    }
    int ans = 0;
    if (sortedArr[0] == sortedArr[1]) {
      for (int i = 0; i <= length / sortedArr[2]; i++) {
        int check = length - i * sortedArr[2];
        if (check >= 0 && check % sortedArr[0] == 0) {
          ans = Math.max(ans, check / sortedArr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / sortedArr[2]; i++) {
        for (int j = 0; j <= length / sortedArr[1]; j++) {
          int check = length - i * sortedArr[2] - j * sortedArr[1];
          if (check >= 0 && check % sortedArr[0] == 0) {
            ans = Math.max(ans, check / sortedArr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 1; i <= 4; i++) {
            arr[i - 1] = scanner.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Arrays;

class Solution {
    public static void cutRibbon() {
        String[] arr = Arrays.stream(System.console().readLine().split(" ")).mapToInt(Integer::parseInt).sorted().toArray(String[]::new);
        int length = Integer.parseInt(arr[0]);
        arr = Arrays.copyOfRange(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
        return;
    }

    public static void main(String[] args) {
        cutRibbon();
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + (check / arr[0]));
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + (check / arr[0]));
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Arrays;
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i <= 4; i++) {
      arr[i - 1] = sc.nextInt();
    }
    arr = sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
  
  private static int[] sort(int[] arr) {
    int temp;
    for (int i = 0; i < arr.length - 1; i++) {
      for (int j = i + 1; j < arr.length; j++) {
        if (arr[i] > arr[j]) {
          temp = arr[i];
          arr[i] = arr[j];
          arr[j] = temp;
        }
      }
    }
    return arr;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Arrays;
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i <= 4; i++) {
      arr[i - 1] = scanner.nextInt();
    }
    Arrays.sort(arr);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 1; i <= length / arr[2] + 1; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, check / arr[0] + i);
        }
      }
    } else {
      for (int i = 1; i <= length / arr[2] + 1; i++) {
        for (int j = 1; j <= length / arr[1] + 1; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, check / arr[0] + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}

[/JAVA]

This is the Java code equivalent to the Python code. It uses the `Scanner` class to read input from the user, and the `Arrays.sort()` method to sort the array. The rest of the code is similar to the Python code, with some minor changes to account for the differences in syntax between the two languages.
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    k = check / arr[0];
                    ans = Math.max(ans, k + i);
                }
            }
        } else {
            int k = 0;
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        k = check / arr[0];
                        ans = Math.max(ans, k + i + j);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i < length / arr[2] + 1; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i < length / arr[2] + 1; i++) {
        for (int j = 0; j < length / arr[1] + 1; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 1; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        arr[0] = length;
        arr = sortArray(arr);

        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }

        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }

    public static int[] sortArray(int[] arr) {
        int temp;
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        return arr;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int length = sc.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = sc.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i < length / arr[2] + 1; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i < length / arr[2] + 1; i++) {
        for (int j = 0; j < length / arr[1] + 1; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    Arrays.sort(arr);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void cutRibbon() {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i <= 3; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }

  public static void main(String[] args) {
    cutRibbon();
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[4];
    for (int i = 1; i < 4; i++) {
      arr[i] = scanner.nextInt();
    }
    arr = sort(arr);
    int ans = 0;
    if (length % arr[0] == 0) {
      ans = length / arr[0];
    } else if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }

  public static int[] sort(int[] arr) {
    int temp;
    for (int i = 1; i < arr.length; i++) {
      for (int j = i - 1; j >= 0; j--) {
        if (arr[j] > arr[j + 1]) {
          temp = arr[j];
          arr[j] = arr[j + 1];
          arr[j + 1] = temp;
        }
      }
    }
    return arr;
  }
}
[/JAVA]

Explanation:

The Java code is functionally identical to the Python code. It uses a similar approach of sorting the input array, and then iterating over the array to find the maximum number of ribbons that can be cut. The only difference is that in Java, we use the `Math.max()` method to find the maximum of two numbers, and we use the `Scanner` class to read input from the user.

The `sort()` method is a utility method that sorts the input array in ascending order. It uses the bubble sort algorithm, which is not the most efficient sorting algorithm, but it is simple to implement and easy to understand.

The `main()` method is the driver method that reads input from the user, sorts the input array, and then
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr, 1, 4);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int length = sc.nextInt();
    int[] arr = new int[4];
    for (int i = 0; i < 4; i++) {
      arr[i] = sc.nextInt();
    }
    Arrays.sort(arr, 1, 4);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          ans = Math.max(ans, i + check / arr[0]);
        }
      }
    } else {
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            ans = Math.max(ans, i + j + check / arr[0]);
          }
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[3];
        for (int i = 0; i < 3; i++) {
            arr[i] = scanner.nextInt();
        }
        Arrays.sort(arr);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int length = scanner.nextInt();
        int[] arr = new int[4];
        for (int i = 1; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        arr = sort(arr, 1, 3);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }

    private static int[] sort(int[] arr, int start, int end) {
        int temp;
        for (int i = start; i < end; i++) {
            for (int j = i + 1; j <= end; j++) {
                if (arr[i] > arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        return arr;
    }
}
[/JAVA]

This is the Java code equivalent to the Python code provided. The code first prompts the user to enter the length of the ribbon, and then enters the lengths of the three pieces of ribbon. The code then sorts the array of lengths in ascending order using the `sort` method, and then checks if the length of the ribbon is divisible by the first length in the sorted array. If it is, the code prints the result and returns.

If the length of the ribbon is not divisible by the first length, the code checks if the first two lengths are equal. If they are, the code loops through the possible values of `i` (the number of pieces of ribbon of the first length
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] arr = new int[4];
        for (int i = 0; i < 4; i++) {
            arr[i] = scanner.nextInt();
        }
        int length = arr[0];
        arr = sort(arr, 1, 3);
        if (length % arr[0] == 0) {
            System.out.println(length / arr[0]);
            return;
        }
        int ans = 0;
        if (arr[0] == arr[1]) {
            for (int i = 0; i <= length / arr[2]; i++) {
                int check = length - i * arr[2];
                if (check >= 0 && check % arr[0] == 0) {
                    ans = Math.max(ans, i + check / arr[0]);
                }
            }
        } else {
            for (int i = 0; i <= length / arr[2]; i++) {
                for (int j = 0; j <= length / arr[1]; j++) {
                    int check = length - i * arr[2] - j * arr[1];
                    if (check >= 0 && check % arr[0] == 0) {
                        ans = Math.max(ans, i + j + check / arr[0]);
                    }
                }
            }
        }
        System.out.println(ans);
    }
    
    public static int[] sort(int[] arr, int start, int end) {
        int[] sorted = new int[end - start + 1];
        for (int i = start; i <= end; i++) {
            sorted[i - start] = arr[i];
        }
        return sorted;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int length = scanner.nextInt();
    int[] arr = new int[3];
    for (int i = 0; i < 3; i++) {
      arr[i] = scanner.nextInt();
    }
    arr = sort(arr);
    if (length % arr[0] == 0) {
      System.out.println(length / arr[0]);
      return;
    }
    int ans = 0;
    if (arr[0] == arr[1]) {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        int check = length - i * arr[2];
        if (check >= 0 && check % arr[0] == 0) {
          k = check / arr[0];
          ans = Math.max(ans, k + i);
        }
      }
    } else {
      int k = 0;
      for (int i = 0; i <= length / arr[2]; i++) {
        for (int j = 0; j <= length / arr[1]; j++) {
          int check = length - i * arr[2] - j * arr[1];
          if (check >= 0 && check % arr[0] == 0) {
            k = check / arr[0];
            ans = Math.max(ans, k + i + j);
          }
        }
      }
    }
    System.out.println(ans);
  }

  public static int[] sort(int[] arr) {
    int[] sorted = new int[3];
    sorted[0] = arr[0];
    sorted[1] = arr[1];
    sorted[2] = arr[2];
    for (int i = 0; i < 3; i++) {
      for (int j = i + 1; j < 3; j++) {
        if (sorted[i] > sorted[j]) {
          int temp = sorted[i];
          sorted[i] = sorted[j];
          sorted[j] = temp;
        }
      }
    }
    return sorted;
  }
}

[/JAVA]
======
