  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(scanner.nextInt());
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    List<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(sc.nextInt());
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `Scanner` class to read input from the user, and the `HashSet` class to keep track of the indices of the array that have already been visited. The rest of the code is similar to the Python code, with the exception of the `HashSet` being used instead of a `set`.
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]

Explanation:

* We first create a `Scanner` object to read input from the user.
* We then read in the value of `n` and create an array `arr` of size `n` to store the input integers.
* We initialize the variables `ans`, `temp`, `seen`, and `p` as needed.
* We then enter a loop that runs until `seen` has `n` elements.
* In each iteration
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(scanner.nextInt());
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans += 1;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp += 1;
                    }
                }
                p += 1;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp += 1;
                    }
                }
                p += 1;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(sc.nextInt());
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code equivalent to the Python code. It uses the same logic and data structures, but with the necessary imports and a driver class called `Solution` with an executable `main` method. The `main` method takes an array of strings as input and converts it to an array of integers using the `map` function. It then uses the same logic as the Python code to calculate the number of steps needed to sort the array. Finally, it prints the
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        int p = 0;
        while (p < n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (i != p && arr[i] <= temp) {
                        temp++;
                        p++;
                    }
                }
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (i != p && arr[i] <= temp) {
                        temp++;
                        p++;
                    }
                }
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(scanner.nextInt());
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(sc.nextInt());
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code equivalent to the Python code provided. It uses the same algorithm and data structures to solve the problem. The only difference is that in Java, we use `HashSet` instead of `set` to store the indices of the elements that have been seen.
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]

Explanation:

The code first prompts the user to enter the number of elements in the array, and then reads the elements into an array using a `Scanner`.

The `ans` variable is initialized to -1, and the `temp` variable is initialized to 0. The `seen` set is initialized to be empty.

The code then enters a while loop that continues until the `seen` set has the
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    int[] seen = new int[n];
    int p = 0;
    while (seen.length != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (seen[i] == 0 && arr[i] <= temp) {
            seen[i] = 1;
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (seen[i] == 0 && arr[i] <= temp) {
            seen[i] = 1;
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code that is functionally identical to the Python code. The code uses the `Scanner` class to read input from the user, and it uses arrays to store the input values and the values of the variables that are used in the algorithm. The `while` loop is used to iterate over the input values and to update the variables accordingly. The `if` statements are used to check the conditions that determine whether the current value should be added to the output or not. The `System.out.println()` method is used to print
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    int ans = -1;
    int temp = 0;
    HashSet<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(scanner.nextInt());
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.HashSet;
import java.util.Set;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    ArrayList<Integer> arr = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      arr.add(sc.nextInt());
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr.get(i) <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        int ans = -1;
        int temp = 0;
        Set<Integer> seen = new HashSet<>();
        int p = 0;
        while (seen.size() != n) {
            ans++;
            if (p % 2 == 0) {
                for (int i = 0; i < n; i++) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            } else {
                for (int i = n - 1; i >= 0; i--) {
                    if (!seen.contains(i) && arr[i] <= temp) {
                        seen.add(i);
                        temp++;
                    }
                }
                p++;
            }
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] arr = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = scanner.nextInt();
    }
    int ans = -1;
    int temp = 0;
    Set<Integer> seen = new HashSet<>();
    int p = 0;
    while (seen.size() != n) {
      ans++;
      if (p % 2 == 0) {
        for (int i = 0; i < n; i++) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      } else {
        for (int i = n - 1; i >= 0; i--) {
          if (!seen.contains(i) && arr[i] <= temp) {
            seen.add(i);
            temp++;
          }
        }
        p++;
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code equivalent to the given Python code. It uses the `Scanner` class to read input from the user, and the `Set` and `HashSet` classes to keep track of the indices that have been visited. The rest of the code is similar to the Python code, with the only difference being that Java uses 0-based indexing instead of 1-based indexing.
======
