  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int C = scanner.nextInt();
    int K = scanner.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    java.util.Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] inputs = scanner.nextLine().split(" ");
        int N = Integer.parseInt(inputs[0]);
        int C = Integer.parseInt(inputs[1]);
        int K = Integer.parseInt(inputs[2]);

        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);

        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int N = Integer.parseInt(input[0]);
    int C = Integer.parseInt(input[1]);
    int K = Integer.parseInt(input[2]);
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int C = scanner.nextInt();
    int K = scanner.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int C = scanner.nextInt();
    int K = scanner.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        java.util.Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int N = Integer.parseInt(input[0]);
        int C = Integer.parseInt(input[1]);
        int K = Integer.parseInt(input[2]);

        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);

        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(sc.nextInt());
    }
    T.sort(null);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(sc.nextInt());
    }
    T.sort(null);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(sc.nextInt());
    }
    T.sort(null);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int C = scanner.nextInt();
    int K = scanner.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(sc.nextInt());
    }
    T.sort(Collections.reverseOrder());
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (c == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(sc.nextInt());
    }
    Collections.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int C = scanner.nextInt();
    int K = scanner.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int C = scanner.nextInt();
    int K = scanner.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(scanner.nextInt());
    }
    Collections.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    ArrayList<Integer> T = new ArrayList<>();
    for (int i = 0; i < N; i++) {
      T.add(sc.nextInt());
    }
    Collections.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T.get(idx) + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T.get(c);
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        ArrayList<Integer> T = new ArrayList<Integer>();
        for (int i = 0; i < N; i++) {
            T.add(sc.nextInt());
        }
        Collections.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T.get(idx) + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T.get(c);
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
      System.out.println(bus);
    }
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] line = scanner.nextLine().split(" ");
        int N = Integer.parseInt(line[0]);
        int C = Integer.parseInt(line[1]);
        int K = Integer.parseInt(line[2]);
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = sc.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus += 1;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx += 1;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = scanner.nextLine().split(" ");
        int N = Integer.parseInt(input[0]);
        int C = Integer.parseInt(input[1]);
        int K = Integer.parseInt(input[2]);
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String[] input = scanner.nextLine().split(" ");
    int N = Integer.parseInt(input[0]);
    int C = Integer.parseInt(input[1]);
    int K = Integer.parseInt(input[2]);
    int[] T = new int[N];
    for (int i = 0; i < N; i++) {
      T[i] = scanner.nextInt();
    }
    Arrays.sort(T);
    int idx = 0;
    int bus = 0;
    while (true) {
      if (idx == N) {
        break;
      }
      bus++;
      int limit = T[idx] + K;
      for (int c = idx; c < idx + C; c++) {
        if (idx == N) {
          break;
        }
        int dep = T[c];
        if (dep <= limit) {
          idx++;
          continue;
        } else {
          break;
        }
      }
    }
    System.out.println(bus);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int C = scanner.nextInt();
        int K = scanner.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = scanner.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus += 1;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx += 1;
                    continue;
                } else {
                    break;
                }
            }
            System.out.println(bus);
        }
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int C = sc.nextInt();
        int K = sc.nextInt();
        int[] T = new int[N];
        for (int i = 0; i < N; i++) {
            T[i] = sc.nextInt();
        }
        Arrays.sort(T);
        int idx = 0;
        int bus = 0;
        while (true) {
            if (idx == N) {
                break;
            }
            bus++;
            int limit = T[idx] + K;
            for (int c = idx; c < idx + C; c++) {
                if (idx == N) {
                    break;
                }
                int dep = T[c];
                if (dep <= limit) {
                    idx++;
                    continue;
                } else {
                    break;
                }
            }
        }
        System.out.println(bus);
    }
}
[/JAVA]
======
