  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] = CX[i] * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] = CY[i] * (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        long result = 0;
        for (int i = 0; i < N; i++) {
            result += CX[i];
        }
        for (int j = 0; j < M; j++) {
            result += CY[j];
        }
        System.out.println(result % MOD);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j + 1] - Y[j];
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N - 1; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M - 1; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    System.out.println((long) sum(CX) * sum(CY) % MOD);
  }

  private static long sum(int[] array) {
    long result = 0;
    for (int i = 0; i < array.length; i++) {
      result += array[i];
    }
    return result;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]

This is the Java code equivalent to the Python code you provided. It uses the `java.util.Scanner` class to read input from the user, and it uses the `java.lang.Math` class to perform the necessary mathematical operations. The code is functionally identical to the Python code, and it produces the same output for the same input.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        long result = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                result += CX[i] * CY[j];
                result %= MOD;
            }
        }
        System.out.println(result);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int i = 0; i < M; i++) {
      result = (result * CY[i]) % MOD;
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j + 1] - Y[j];
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i : arr) {
      sum += i;
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
    }
    
    private static int sum(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }
        return sum;
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    for (int i = 0; i < N - 1; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    for (int i = 0; i < M - 1; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j + 1] - Y[j];
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        long result = 1;
        for (int i = 0; i < N; i++) {
            result = (result * CX[i]) % MOD;
        }
        for (int j = 0; j < M; j++) {
            result = (result * CY[j]) % MOD;
        }
        System.out.println(result);
    }
}
[/JAVA]

This is the Java code equivalent to the Python code provided. It uses the `Scanner` class to read input from the user, and the `Math` class to perform the necessary calculations. The `MOD` variable is declared as a constant to avoid repetition in the code. The `N` and `M` variables are decremented by 1 to match the Python code's indexing. The `X`, `C
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
      if (i > 0) {
        CX[i] = X[i] - X[i - 1];
      }
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
      if (j > 0) {
        CY[j] = Y[j] - Y[j - 1];
      }
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i] - X[i + 1]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j] - Y[j + 1]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N - 1; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M - 1; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result = (result + CX[i] * CY[j]) % MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] = CX[i] * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] = CY[i] * (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }
  
  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = scanner.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = scanner.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
    }
    
    public static int sum(int[] arr) {
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }
        return sum;
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N - 1; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M - 1; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % 1000000007);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }
  
  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] = CX[i] * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] = CY[i] * (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        long result = 1;
        for (int i = 0; i < N; i++) {
            result = (result * CX[i]) % MOD;
        }
        for (int j = 0; j < M; j++) {
            result = (result * CY[j]) % MOD;
        }
        System.out.println(result);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println((result % MOD) * (result % MOD));
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j + 1] - Y[j];
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i] - X[i + 1]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j] - Y[j + 1]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j + 1] - Y[j];
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }
  
  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N -= 1;
    M -= 1;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i : arr) {
      sum += i;
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j + 1] - Y[j];
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int i = 0; i < M; i++) {
      result = (result * CY[i]) % MOD;
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i] - X[i + 1]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j] - Y[j + 1]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N - 1; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M - 1; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        long result = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                result += CX[i] * CY[j];
            }
        }
        System.out.println(result % MOD);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    long MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i] - X[i + 1];
    }
    for (int i = 0; i < N; i++) {
      CX[i] = CX[i] * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j] - Y[j + 1];
    }
    for (int j = 0; j < M; j++) {
      CY[j] = CY[j] * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }
  
  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N - 1; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M - 1; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i] - X[i + 1]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j] - Y[j + 1]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  public static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = scanner.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = X[i + 1] - X[i];
        }
        for (int i = 0; i < N; i++) {
            CX[i] *= (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int i = 0; i < M; i++) {
            Y[i] = scanner.nextInt();
        }
        int[] CY = new int[M];
        for (int i = 0; i < M; i++) {
            CY[i] = Y[i + 1] - Y[i];
        }
        for (int i = 0; i < M; i++) {
            CY[i] *= (M - i) * (i + 1);
        }
        long result = 0;
        for (int i = 0; i < N; i++) {
            result += CX[i];
        }
        for (int i = 0; i < M; i++) {
            result += CY[i];
        }
        System.out.println(result % MOD);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }

  private static int sum(int[] arr) {
    int sum = 0;
    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    return sum;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
      }
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int N = scanner.nextInt();
    int M = scanner.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = scanner.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i] - X[i - 1]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = scanner.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j] - Y[j - 1]) * (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    System.out.println(result % MOD);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i] - X[i + 1]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j] - Y[j + 1]) * (M - j) * (j + 1);
    }
    System.out.println((sum(CX) % MOD) * (sum(CY) % MOD));
  }
  
  public static int sum(int[] array) {
    int result = 0;
    for (int i = 0; i < array.length; i++) {
      result += array[i];
    }
    return result;
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
    }
    long result = 1;
    for (int i = 0; i < N; i++) {
      result = (result * CX[i]) % MOD;
    }
    for (int j = 0; j < M; j++) {
      result = (result * CY[j]) % MOD;
    }
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = X[i] - X[i + 1];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int j = 0; j < M; j++) {
      Y[j] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int j = 0; j < M; j++) {
      CY[j] = Y[j] - Y[j + 1];
    }
    for (int j = 0; j < M; j++) {
      CY[j] *= (M - j) * (j + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    result %= MOD;
    for (int j = 0; j < M; j++) {
      result += CY[j];
    }
    result %= MOD;
    System.out.println(result);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N--;
    M--;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N - 1; i++) {
      CX[i] = X[i + 1] - X[i];
    }
    for (int i = 0; i < N; i++) {
      CX[i] *= (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M - 1; i++) {
      CY[i] = Y[i + 1] - Y[i];
    }
    for (int i = 0; i < M; i++) {
      CY[i] *= (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < M; j++) {
        result += CX[i] * CY[j];
        result %= MOD;
      }
    }
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        int MOD = 1000000007;
        N--;
        M--;
        int[] X = new int[N];
        for (int i = 0; i < N; i++) {
            X[i] = sc.nextInt();
        }
        int[] CX = new int[N];
        for (int i = 0; i < N; i++) {
            CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
        }
        int[] Y = new int[M];
        for (int j = 0; j < M; j++) {
            Y[j] = sc.nextInt();
        }
        int[] CY = new int[M];
        for (int j = 0; j < M; j++) {
            CY[j] = (Y[j + 1] - Y[j]) * (M - j) * (j + 1);
        }
        long result = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                result += (CX[i] * CY[j]) % MOD;
            }
        }
        System.out.println(result);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int MOD = 1000000007;
    N -= 1;
    M -= 1;
    int[] X = new int[N];
    for (int i = 0; i < N; i++) {
      X[i] = sc.nextInt();
    }
    int[] CX = new int[N];
    for (int i = 0; i < N; i++) {
      CX[i] = (X[i + 1] - X[i]) * (N - i) * (i + 1);
    }
    int[] Y = new int[M];
    for (int i = 0; i < M; i++) {
      Y[i] = sc.nextInt();
    }
    int[] CY = new int[M];
    for (int i = 0; i < M; i++) {
      CY[i] = (Y[i + 1] - Y[i]) * (M - i) * (i + 1);
    }
    long result = 0;
    for (int i = 0; i < N; i++) {
      result += CX[i];
    }
    for (int i = 0; i < M; i++) {
      result += CY[i];
    }
    System.out.println(result % MOD);
  }
}
[/JAVA]
======
