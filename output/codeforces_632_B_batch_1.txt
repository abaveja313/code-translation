  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        s += p[i];
      }
    }
    int max1 = IntStream.of(v).max().getAsInt();
    int max2 = IntStream.of(v).map(x -> -x).max().getAsInt();
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.next().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.generate(scanner::nextInt).limit(n).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.next().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).get();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).collect(Collectors.maxBy(Integer::compare)).get();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = Stream.iterate(0, i -> i + 1).limit(n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    String c = sc.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n)
                     .filter(i -> c.charAt(i) == 'B')
                     .map(i -> p[i])
                     .sum();
    int max1 = IntStream.range(0, n)
                        .map(i -> v[i])
                        .max()
                        .orElse(0);
    int max2 = IntStream.range(0, n)
                        .map(i -> v[n - 1 - i])
                        .max()
                        .orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = sc.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c.charAt(i) == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().getAsInt();
    int result = s + Math.max(0, Math.max(max1, max2));
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = IntStream.range(0, n).map(i -> sc.nextInt()).toArray();
    String c = sc.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? 0 : p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().getAsInt();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).get();
    int max2 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).get();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    String[] c = new String[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next();
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i].equals("B") ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n)
      .filter(i -> c[i].equals("B"))
      .map(i -> p[i])
      .sum();
    int maxLeft = IntStream.range(0, n)
      .map(i -> v[i])
      .collect(Collectors.maxBy(Integer::compare))
      .orElse(0);
    int maxRight = IntStream.range(n - 1, -1, -1)
      .map(i -> v[i])
      .collect(Collectors.maxBy(Integer::compare))
      .orElse(0);
    System.out.println(s + Math.max(0, Math.max(maxLeft, maxRight)));
  }
}
[
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().getAsInt();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = Stream.of(v).filter(x -> x > 0).sum();
    int max1 = Stream.of(v).max(Integer::compareTo).orElse(0);
    int max2 = Stream.of(v).max(Integer::compareTo).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).collect(Collectors.maxBy(Integer::compare)).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.List;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> p = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      p.add(scanner.nextInt());
    }
    String c = scanner.nextLine();
    List<Integer> v = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v.add(-p.get(i));
      } else {
        v.add(p.get(i));
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p.get(i)).sum();
    int max1 = IntStream.range(0, n).map(i -> v.get(i)).reduce(Integer::max).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v.get(n - 1 - i)).reduce(Integer::max).orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().getAsInt();
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().getAsInt();
    int max2 = IntStream.of(v).map(i -> -i).max().getAsInt();
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.nextLine().chars().mapToObj(c -> (char) c).toArray(char[]::new);
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max().orElse(0);
    int max2 = Stream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c.charAt(i) == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    String c = sc.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = Stream.of(p).filter(x -> c.charAt(x) == 'B').mapToInt(x -> x).sum();
    int max1 = Stream.of(v).max().orElse(0);
    int max2 = Stream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = IntStream.range(0, n).map(i -> sc.nextInt()).toArray();
    String c = sc.next();
    int[] v = IntStream.range(0, n).map(i -> (c.charAt(i) == 'B' ? -p[i] : p[i])).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
      c[i] = sc.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).collect(Collectors.maxBy(Integer::compare)).getAsInt();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
      c[i] = sc.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = (c[i] == 'B') ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> (c[i] == 'B') ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().getAsInt();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.next().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n)
      .filter(i -> c[i] == 'B')
      .map(i -> p[i])
      .sum();
    int max1 = IntStream.range(0, n)
      .map(i -> v[i])
      .max()
      .orElse(0);
    int max2 = IntStream.range(0, n)
      .map(i -> v[n - i - 1])
      .max()
      .orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().getAsInt();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.next().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.next().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).collect(Collectors.maxBy(Integer::compare)).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(i -> -i).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }

    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }

    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.next().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).get();
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).collect(Collectors.maxBy(Integer::compare)).get();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = sc.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max(Integer::compare).orElse(0);
    int max2 = Stream.of(v).map(x -> -x).max(Integer::compare).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).reduce(Integer::max).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).reduce(Integer::max).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = IntStream.range(0, n).map(i -> c[i] == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.Arrays;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    int result = s + Math.max(0, Math.max(max1, max2));
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = sc.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    char[] c = sc.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.nextLine();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];

    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }

    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }

    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }

    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        s += p[i];
      }
    }

    int max1 = 0;
    int max2 = 0;
    for (int i = 0; i < n; i++) {
      max1 = Math.max(max1, v[i]);
    }

    for (int i = n - 1; i >= 0; i--) {
      max2 = Math.max(max2, v[i]);
    }

    System.out.println(s + Math.max(0, max
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    String c = sc.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> (c.charAt(i) == 'B' ? p[i] : 0)).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    int result = s + Math.max(0, max1, max2);
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max(Integer::compare).orElse(0);
    int max2 = Stream.of(v).max(Integer::compare).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.of(v).max().orElse(0);
    int max2 = IntStream.of(v).map(x -> -x).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];

    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }

    for (int i = 0; i < n; i++) {
      c[i] = sc.next().charAt(0);
    }

    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }

    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.*;
import java.util.stream.*;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
      c[i] = sc.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];

    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }

    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }

    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }

    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().getAsInt();

    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max(Integer::compare).orElse(0);
    int max2 = Stream.of(v).map(x -> -x).max(Integer::compare).orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    char[] c = new char[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    for (int i = 0; i < n; i++) {
      c[i] = scanner.next().charAt(0);
    }
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max(Integer::compare).orElse(0);
    int max2 = Stream.of(v).max(Integer::compare).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compare)).get();
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).collect(Collectors.maxBy(Integer::compare)).get();
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c[i] == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).collect(Collectors.maxBy(Integer::compareTo)).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).collect(Collectors.maxBy(Integer::compareTo)).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c[i] == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n)
        .filter(i -> c[i] == 'B')
        .map(i -> p[i])
        .sum();
    int max1 = IntStream.range(0, n)
        .map(i -> v[i])
        .reduce(0, (a, b) -> Math.max(a, b));
    int max2 = IntStream.range(0, n)
        .map(i -> v[n - i - 1])
        .reduce(0, (a, b) -> Math.max(a, b));
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Stream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = 0;
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        s += p[i];
      }
    }
    int max1 = Stream.of(v).max().orElse(0);
    int max2 = Stream.of(v).map(x -> -x).max().orElse(0);
    int result = s + Math.max(0, max1, max2);
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().getAsInt();
    int result = s + Math.max(0, Math.max(max1, max2));
    System.out.println(result);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Collectors;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).reduce(Integer::max).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).reduce(Integer::max).orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).map(i -> v[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = IntStream.range(0, n).map(i -> scanner.nextInt()).toArray();
    String c = scanner.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    List<Integer> p = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      p.add(scanner.nextInt());
    }
    String c = scanner.nextLine();
    List<Integer> v = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v.add(-p.get(i));
      } else {
        v.add(p.get(i));
      }
    }
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? p.get(i) : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v.get(i)).reduce(Math::max).orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v.get(n - 1 - i)).reduce(Math::max).orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = Stream.of(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
    String c = scanner.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c.charAt(i) == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - i - 1]).max().orElse(0);
    System.out.println(s + Math.max(0, Math.max(max1, max2)));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = sc.nextInt();
    }
    String c = sc.nextLine();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      if (c.charAt(i) == 'B') {
        v[i] = -p[i];
      } else {
        v[i] = p[i];
      }
    }
    int s = IntStream.range(0, n).filter(i -> c.charAt(i) == 'B').map(i -> p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().getAsInt();
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int[] p = new int[n];
    for (int i = 0; i < n; i++) {
      p[i] = scanner.nextInt();
    }
    char[] c = scanner.nextLine().toCharArray();
    int[] v = new int[n];
    for (int i = 0; i < n; i++) {
      v[i] = c[i] == 'B' ? -p[i] : p[i];
    }
    int s = IntStream.range(0, n).map(i -> c[i] == 'B' ? p[i] : 0).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().orElse(0);
    int max2 = IntStream.range(0, n).map(i -> v[n - 1 - i]).max().orElse(0);
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] p = IntStream.range(0, n).map(i -> sc.nextInt()).toArray();
    String c = sc.next();
    int[] v = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? -p[i] : p[i]).toArray();
    int s = IntStream.range(0, n).map(i -> c.charAt(i) == 'B' ? 0 : p[i]).sum();
    int max1 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    int max2 = IntStream.range(0, n).map(i -> v[i]).max().getAsInt();
    System.out.println(s + Math.max(0, max1, max2));
  }
}
[/JAVA]
======
