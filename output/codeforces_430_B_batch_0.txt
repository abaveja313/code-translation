  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          int x = A[l];
        }
        if (r < n) {
          int x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int l : ms) {
      int tt = l.r - l.l + 1;
      l.l -= 1;
      l.r += 1;
      while (l.l >= 0 || l.r < n) {
        if (l.l >= 0) {
          x = A[l.l];
        }
        if (l.r < n) {
          x = A[l.r];
        }
        int c = 0;
        while (l.l >= 0 && A[l.l] == x) {
          c++;
          l.l--;
        }
        while (l.r < n && A[l.r] == x) {
          c++;
          l.r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l + j - 1) / 2;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i];
      int r = ms[i] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans = Math.max(ans, c);
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }

    List<Pair> ms = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms.add(new Pair(l, j - 1));
        }
      }
    }

    int ans = 0;
    for (Pair lr : ms) {
      int tt = lr.r - lr.l + 1;
      int l = lr.l - 1;
      int r = lr.r + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }

    System.out.println(ans);
  }

  private static class Pair {
    public int l;
    public int r;

    public Pair(int l, int r) {
      this.l = l;
      this.r = r;
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i];
      int r = ms[i];
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans += c;
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    int x = A[l];
                }
                if (r < n) {
                    int x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = scanner.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] {l, j - 1};
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    scanner.close();

    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }

    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }

    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i][0];
      int r = ms[i][1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l + 1) * (j - l + 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int tt = ms[i];
      int l = i - 1;
      int r = i + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        sc.close();

        int[] ms = new int[n];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = (l, j - 1);
                }
            }
        }

        int ans = 0;
        for (int i = 0; i < ms.length; i++) {
            int tt = ms[i][1] - ms[i][0] + 1;
            int l = ms[i][0] - 1;
            int r = ms[i][1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }

        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      m[0]--;
      m[1]++;
      while (m[0] >= 0 || m[1] < n) {
        if (m[0] >= 0) {
          x = A[m[0]];
        }
        if (m[1] < n) {
          x = A[m[1]];
        }
        int c = 0;
        while (m[0] >= 0 && A[m[0]] == x) {
          c++;
          m[0]--;
        }
        while (m[1] < n && A[m[1]] == x) {
          c++;
          m[1]++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    ArrayList<Integer> ms = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms.add(l);
          ms.add(j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.size(); i += 2) {
      int l = ms.get(i);
      int r = ms.get(i + 1);
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      m[0] -= 1;
      m[1] += 1;
      while (m[0] >= 0 || m[1] < n) {
        if (m[0] >= 0) {
          x = A[m[0]];
        }
        if (m[1] < n) {
          x = A[m[1]];
        }
        int c = 0;
        while (m[0] >= 0 && A[m[0]] == x) {
          c++;
          m[0]--;
        }
        while (m[1] < n && A[m[1]] == x) {
          c++;
          m[1]++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          int x = A[l];
        }
        if (r < n) {
          int x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      if (ms[i] != 0) {
        int tt = ms[i] - i + 1;
        i -= 1;
        ms[i] += 1;
        while (i >= 0 || ms[i] < n) {
          if (i >= 0) {
            x = A[i];
          }
          if (ms[i] < n) {
            x = A[ms[i]];
          }
          int c = 0;
          while (i >= 0 && A[i] == x) {
            c++;
            i--;
          }
          while (ms[i] < n && A[ms[i]] == x) {
            c++;
            ms[i]++;
          }
          if (c >= 3) {
            tt += c;
          } else {
            break;
          }
        }
        ans = Math.max(ans, tt);
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    sc.close();

    // Find the maximum number of consecutive elements equal to x
    int maxConsecutive = 0;
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int consecutive = 1;
        for (int j = i + 1; j < n && A[j] == x; j++) {
          consecutive++;
        }
        if (consecutive > maxConsecutive) {
          maxConsecutive = consecutive;
        }
      }
    }

    // Print the result
    System.out.println(maxConsecutive);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        ArrayList<Integer> ms = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms.add(l);
                    ms.add(j - 1);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < ms.size(); i += 2) {
            int l = ms.get(i);
            int r = ms.get(i + 1);
            int tt = r - l + 1;
            l--;
            r++;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i][0] = l;
          ms[i][1] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.length; i++) {
      int tt = ms[i][1] - ms[i][0] + 1;
      int l = ms[i][0] - 1;
      int r = ms[i][1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = scanner.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[]{l, j - 1};
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    ArrayList<Integer> ms = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms.add(l);
          ms.add(j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.size(); i += 2) {
      int tt = ms.get(i + 1) - ms.get(i) + 1;
      int l = ms.get(i) - 1;
      int r = ms.get(i + 1) + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      m[0]--;
      m[1]++;
      while (m[0] >= 0 || m[1] < n) {
        if (m[0] >= 0) {
          x = A[m[0]];
        }
        if (m[1] < n) {
          x = A[m[1]];
        }
        int c = 0;
        while (m[0] >= 0 && A[m[0]] == x) {
          c++;
          m[0]--;
        }
        while (m[1] < n && A[m[1]] == x) {
          c++;
          m[1]++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i][0];
      int r = ms[i][1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          int x = A[l];
        }
        if (r < n) {
          int x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i][0] = l;
                    ms[i][1] = j - 1;
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i];
      int r = ms[i];
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans += c;
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int l = m[0];
      int r = m[1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = scanner.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] {l, j - 1};
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                int x = 0;
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int[] m = ms[i];
      int l = m[0];
      int r = m[1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    ArrayList<Pair> ms = new ArrayList<>();
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms.add(new Pair(l, j - 1));
        }
      }
    }
    int ans = 0;
    for (Pair lr : ms) {
      int tt = lr.r - lr.l + 1;
      int l = lr.l - 1;
      int r = lr.r + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }

  static class Pair {
    int l;
    int r;

    Pair(int l, int r) {
      this.l = l;
      this.r = r;
    }
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]

This is the Java code that corresponds to the Python code you provided. It uses the same algorithm and data structures as the Python code, but is written in Java. The main method is the same as the Python code, with the exception of the imports and the use of a Scanner object to read input. The rest of the code is functionally identical to the Python code.
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int x = scanner.nextInt();

        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = scanner.nextInt();
        }

        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }

        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }

        System.out.println(ans);
    }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i][0] = l;
                    ms[i][1] = j - 1;
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            int l = ms[i][0];
            int r = ms[i][1];
            int tt = r - l + 1;
            l--;
            r++;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;
import java.util.ArrayList;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        ArrayList<Integer> ms = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms.add(l);
                    ms.add(j - 1);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < ms.size(); i += 2) {
            int l = ms.get(i);
            int r = ms.get(i + 1);
            int tt = r - l + 1;
            l--;
            r++;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      if (ms[i] != 0) {
        int tt = ms[i][1] - ms[i][0] + 1;
        int l = ms[i][0] - 1;
        int r = ms[i][1] + 1;
        while (l >= 0 || r < n) {
          if (l >= 0) {
            x = A[l];
          }
          if (r < n) {
            x = A[r];
          }
          int c = 0;
          while (l >= 0 && A[l] == x) {
            c++;
            l--;
          }
          while (r < n && A[r] == x) {
            c++;
            r++;
          }
          if (c >= 3) {
            tt += c;
          } else {
            break;
          }
        }
        ans = Math.max(ans, tt);
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }
    int ans = 0;
    for (int l : ms) {
      int tt = l[1] - l[0] + 1;
      l[0]--;
      l[1]++;
      while (l[0] >= 0 || l[1] < n) {
        if (l[0] >= 0) {
          int x = A[l[0]];
        }
        if (l[1] < n) {
          int x = A[l[1]];
        }
        int c = 0;
        while (l[0] >= 0 && A[l[0]] == x) {
          c++;
          l[0]--;
        }
        while (l[1] < n && A[l[1]] == x) {
          c++;
          l[1]++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }

    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }

    int ans = 0;
    for (int[] m : ms) {
      int l = m[0];
      int r = m[1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        int c = 0;
        if (l >= 0) {
          c = A[l];
          while (l >= 0 && A[l] == c) {
            l--;
            c++;
          }
        }
        if (r < n) {
          c = A[r];
          while (r < n && A[r] == c) {
            r++;
            c++;
          }
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      m[0]--;
      m[1]++;
      while (m[0] >= 0 || m[1] < n) {
        if (m[0] >= 0) {
          int x = A[m[0]];
        }
        if (m[1] < n) {
          int x = A[m[1]];
        }
        int c = 0;
        while (m[0] >= 0 && A[m[0]] == x) {
          c++;
          m[0]--;
        }
        while (m[1] < n && A[m[1]] == x) {
          c++;
          m[1]++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i][0] = l;
          ms[i][1] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        int x = 0;
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}

[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i][0] = l;
          ms[i][1] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int l = ms[i][0];
      int r = ms[i][1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int l = m[0];
      int r = m[1];
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int x = scanner.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = scanner.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int l : ms) {
      int r = l + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans += c;
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[][] ms = new int[n][2];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = new int[] { l, j - 1 };
                }
            }
        }
        int ans = 0;
        for (int[] m : ms) {
            int tt = m[1] - m[0] + 1;
            int l = m[0] - 1;
            int r = m[1] + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int l : ms) {
      int r = l;
      int tt = r - l + 1;
      l--;
      r++;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < ms.length; i++) {
      int l = ms[i];
      int r = ms[i];
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          ans = Math.max(ans, c);
        } else {
          break;
        }
      }
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] { l, j - 1 };
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }

        // Find all occurrences of x in A
        int[] ms = new int[n];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = j - 1;
                }
            }
        }

        // Calculate the maximum number of consecutive x's
        int ans = 0;
        for (int i = 0; i < n; i++) {
            int tt = ms[i];
            int l = i - 1;
            int r = i + 1;
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }

        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = new int[] {l, j - 1};
        }
      }
    }
    int ans = 0;
    for (int[] m : ms) {
      int tt = m[1] - m[0] + 1;
      int l = m[0] - 1;
      int r = m[1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int x = sc.nextInt();
        int[] A = new int[n];
        for (int i = 0; i < n; i++) {
            A[i] = sc.nextInt();
        }
        int[] ms = new int[n];
        for (int i = 0; i < n; i++) {
            if (A[i] == x) {
                int l = i;
                int j = i;
                while (j < n && A[j] == x) {
                    j++;
                }
                if (j - l >= 2) {
                    ms[i] = (l, j - 1);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            int tt = ms[i];
            int l = tt[0];
            int r = tt[1];
            while (l >= 0 || r < n) {
                if (l >= 0) {
                    x = A[l];
                }
                if (r < n) {
                    x = A[r];
                }
                int c = 0;
                while (l >= 0 && A[l] == x) {
                    c++;
                    l--;
                }
                while (r < n && A[r] == x) {
                    c++;
                    r++;
                }
                if (c >= 3) {
                    tt += c;
                } else {
                    break;
                }
            }
            ans = Math.max(ans, tt);
        }
        System.out.println(ans);
    }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    int x = sc.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = sc.nextInt();
    }

    int[] ms = new int[n];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i] = (l, j - 1);
        }
      }
    }

    int ans = 0;
    for (int l : ms) {
      int tt = l[1] - l[0] + 1;
      l[0]--;
      l[1]++;
      while (l[0] >= 0 || l[1] < n) {
        if (l[0] >= 0) {
          x = A[l[0]];
        }
        if (l[1] < n) {
          x = A[l[1]];
        }
        int c = 0;
        while (l[0] >= 0 && A[l[0]] == x) {
          c++;
          l[0]--;
        }
        while (l[1] < n && A[l[1]] == x) {
          c++;
          l[1]++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }

    System.out.println(ans);
  }
}
[/JAVA]
======
  [JAVA]
import java.util.Scanner;

class Solution {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int n = scanner.nextInt();
    int k = scanner.nextInt();
    int x = scanner.nextInt();
    int[] A = new int[n];
    for (int i = 0; i < n; i++) {
      A[i] = scanner.nextInt();
    }
    int[][] ms = new int[n][2];
    for (int i = 0; i < n; i++) {
      if (A[i] == x) {
        int l = i;
        int j = i;
        while (j < n && A[j] == x) {
          j++;
        }
        if (j - l >= 2) {
          ms[i][0] = l;
          ms[i][1] = j - 1;
        }
      }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
      int tt = ms[i][1] - ms[i][0] + 1;
      int l = ms[i][0] - 1;
      int r = ms[i][1] + 1;
      while (l >= 0 || r < n) {
        if (l >= 0) {
          x = A[l];
        }
        if (r < n) {
          x = A[r];
        }
        int c = 0;
        while (l >= 0 && A[l] == x) {
          c++;
          l--;
        }
        while (r < n && A[r] == x) {
          c++;
          r++;
        }
        if (c >= 3) {
          tt += c;
        } else {
          break;
        }
      }
      ans = Math.max(ans, tt);
    }
    System.out.println(ans);
  }
}
[/JAVA]
======
